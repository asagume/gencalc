{"version":3,"file":"js/chunk-common.50903436.js","mappings":"oNAMM,SAAUA,EAASC,GACrB,OAAOC,SAASD,IAAmB,MAATA,CAC7B,CAiBK,SAAUE,EAAgBC,EAAUC,GACtC,GAAIC,IAAAA,cAAgBD,IAAQC,IAAAA,cAAgBF,GAAM,CAC9C,MAAMG,EAAUC,OAAOC,KAAKJ,GAC5B,IAAK,MAAMK,KAAOH,EACdH,EAAIM,GAAOL,EAAIK,GAEnB,IAAK,MAAMA,KAAOF,OAAOC,KAAKL,GACrBG,EAAQI,SAASD,WAAaN,EAAIM,EAE9C,CACD,OAAON,CACV,CAGM,MAAMQ,EAAYC,GAAiBA,EAAMC,MAAM,KAAMC,MAAOD,MAAM,KAAME,O,qCCrC/E,MAAMC,GAAOC,EAAAA,EAAAA,GAAW,CACtBC,QAAQ,EACRC,OAAQ,QACRC,eAAgB,QAChBC,UAAU,IAEZ,Q,w9CCJO,MAAMC,EAAe,CACxB,OACA,QACA,SAESC,EAAe,CACxB,OACA,MACA,MACA,QAESC,EAAe,CACxB,MACA,SACA,UACA,UACA,WACA,WACA,UAESC,EAAoB,CAC7B,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YAESC,EAAkB,CAC3B,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QAESC,EAAc,CACvB,aACA,WACA,aACA,cACA,aACA,WAESC,EAAgB,CACzB,cACA,YACA,cACA,eACA,cACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aAESC,EAAc,CACvB,WACA,WACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,aAESC,EAAgB,CACzB,SACA,MACA,OACA,OACA,MACA,OACA,QAESC,EAAe,CACxB,SACA,QACA,QACA,SACA,QACA,WACA,YACA,YACA,cAESC,EAAmB,CAC5B,WAESC,EAAmB,CAC5B,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAESC,EAAkB,CAC3B,QAGSC,EAAiB,IAAIC,IAAI,CAClC,CAAC,UAAWd,GACZ,CAAC,UAAWC,GACZ,CAAC,UAAWC,GACZ,CAAC,eAAgBC,GACjB,CAAC,aAAcC,GACf,CAAC,SAAUC,GACX,CAAC,WAAYC,GAC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","sources":["webpack://gencalc/./src/common.ts","webpack://gencalc/./src/i18n.ts","webpack://gencalc/./src/input.ts","webpack://gencalc/./src/components/ArtifactItem.vue?b772","webpack://gencalc/./src/components/ArtifactItem.vue?f1bd","webpack://gencalc/./src/components/ArtifactItem.vue","webpack://gencalc/./src/components/ArtifactSetSelect.vue?96cd","webpack://gencalc/./src/components/ArtifactSetSelect.vue?c0d4","webpack://gencalc/./src/components/ArtifactSetSelect.vue","webpack://gencalc/./src/components/CharacterSelect.vue?9536","webpack://gencalc/./src/components/CharacterSelect.vue?1f8b","webpack://gencalc/./src/components/CharacterSelect.vue","webpack://gencalc/./src/components/CompositionFunction.vue?c68d","webpack://gencalc/./src/components/CompositionFunction.vue"],"sourcesContent":["import _ from 'lodash';\r\n\r\nexport function isString(value: any): boolean {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\n\r\nexport function isNumber(value: any): boolean {\r\n    return isFinite(value) && value != null;\r\n}\r\n\r\nexport function isBoolean(value: any): boolean {\r\n    return value === true || value === false;\r\n}\r\n\r\nexport function isPlainObject(value: any): boolean {\r\n    const myType = Object.prototype.toString.call(value);\r\n    return myType === '[object Object]';\r\n}\r\n\r\n// /** 簡易なdeep copy。undefinedなどは消失します */\r\n// export function deepcopy(value: any): any {\r\n//     const result = JSON.parse(JSON.stringify(value));\r\n//     return result;\r\n// }\r\n\r\nexport function overwriteObject(dst: any, src: any) {\r\n    if (_.isPlainObject(src) && _.isPlainObject(dst)) {\r\n        const srcKeys = Object.keys(src);\r\n        for (const key of srcKeys) {\r\n            dst[key] = src[key];\r\n        }\r\n        for (const key of Object.keys(dst)) {\r\n            if (!srcKeys.includes(key)) delete dst[key];\r\n        }\r\n    }\r\n    return dst;\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport const basename = (path: string) => path!.split('/')!.pop()!.split('.')!.shift()!;\r\n","import { createI18n } from 'vue-i18n'\r\n\r\nconst i18n = createI18n({\r\n  legacy: false,\r\n  locale: 'ja-jp',\r\n  fallbackLocale: 'en-us',\r\n  isGlobal: true,\r\n})\r\nexport default i18n;\r\n","import { ARTIFACT_SET_MASTER, ARTIFACT_STAT_JA_EN_ABBREV_MAP, ARTIFACT_SUB_MASTER, CHARACTER_MASTER, DAMAGE_CATEGORY_ARRAY, ELEMENTAL_RESONANCE_MASTER, ELEMENTAL_RESONANCE_MASTER_LIST, ENEMY_MASTER_LIST, GENSEN_MASTER_LIST, getCharacterMasterDetail, getWeaponMasterDetail, IMG_SRC_DUMMY, RECOMMEND_ABBREV_MAP, TAnyObject, TArtifactSet, TArtifactSetEntry, TArtifactSetKey, TArtifactSubKey, TCharacterDetail, TCharacterKey, TEnemyEntry, TWeaponDetail, TWeaponKey, TWeaponTypeKey, WEAPON_MASTER, キャラクター構成PROPERTY_MAP } from '@/master';\r\nimport _ from 'lodash';\r\nimport { basename, isNumber, overwriteObject } from './common';\r\n\r\nexport const 基礎ステータスARRAY = [\r\n    '基礎HP',\r\n    '基礎攻撃力',\r\n    '基礎防御力'\r\n];\r\nexport const 基本ステータスARRAY = [\r\n    'HP上限',\r\n    '攻撃力',\r\n    '防御力',\r\n    '元素熟知'\r\n];\r\nexport const 高級ステータスARRAY = [\r\n    '会心率',\r\n    '会心ダメージ',\r\n    '与える治療効果',\r\n    '受ける治療効果',\r\n    '元素チャージ効率',\r\n    'クールタイム短縮',\r\n    'シールド強化'\r\n];\r\nexport const 元素ステータス_ダメージARRAY = [\r\n    '炎元素ダメージバフ',\r\n    '水元素ダメージバフ',\r\n    '風元素ダメージバフ',\r\n    '雷元素ダメージバフ',\r\n    '草元素ダメージバフ',\r\n    '氷元素ダメージバフ',\r\n    '岩元素ダメージバフ',\r\n    '物理ダメージバフ'\r\n];\r\nexport const 元素ステータス_耐性ARRAY = [\r\n    '炎元素耐性',\r\n    '水元素耐性',\r\n    '風元素耐性',\r\n    '雷元素耐性',\r\n    '草元素耐性',\r\n    '氷元素耐性',\r\n    '岩元素耐性',\r\n    '物理耐性'\r\n];\r\nexport const ダメージバフARRAY = [\r\n    '通常攻撃ダメージバフ',\r\n    '重撃ダメージバフ',\r\n    '落下攻撃ダメージバフ',\r\n    '元素スキルダメージバフ',\r\n    '元素爆発ダメージバフ',\r\n    '与えるダメージ',\r\n];\r\nexport const 実数ダメージ加算ARRAY = [\r\n    '通常攻撃ダメージアップ',\r\n    '重撃ダメージアップ',\r\n    '落下攻撃ダメージアップ',\r\n    '元素スキルダメージアップ',\r\n    '元素爆発ダメージアップ',\r\n    '炎元素ダメージアップ',\r\n    '水元素ダメージアップ',\r\n    '風元素ダメージアップ',\r\n    '雷元素ダメージアップ',\r\n    '草元素ダメージアップ',\r\n    '氷元素ダメージアップ',\r\n    '岩元素ダメージアップ',\r\n    '物理ダメージアップ'\r\n];\r\nexport const 元素反応バフARRAY = [\r\n    '蒸発反応ボーナス',\r\n    '溶解反応ボーナス',\r\n    '過負荷反応ボーナス',\r\n    '感電反応ボーナス',\r\n    '凍結反応ボーナス',\r\n    '超電導反応ボーナス',\r\n    '拡散反応ボーナス',\r\n    '結晶反応ボーナス',\r\n    '燃焼反応ボーナス',\r\n    '開花反応ボーナス',\r\n    '烈開花反応ボーナス',\r\n    '超開花反応ボーナス',\r\n    '超激化反応ボーナス',\r\n    '草激化反応ボーナス',\r\n];\r\nexport const ステータスその他ARRAY = [\r\n    'ダメージ軽減',\r\n    'HP%',\r\n    '攻撃力%',\r\n    '防御力%',\r\n    'HP+',\r\n    '攻撃力+',\r\n    '防御力+',\r\n];\r\nexport const ステータス連動ARRAY = [\r\n    'HP上限V1',\r\n    '攻撃力V1',\r\n    '防御力V1',\r\n    '元素熟知V1',\r\n    '会心率V1',\r\n    '会心ダメージV1',\r\n    '与える治療効果V1',\r\n    '受ける治療効果V1',\r\n    '元素チャージ効率V1',\r\n];\r\nexport const ステータスチーム内最高ARRAY = [\r\n    '元素熟知TOP',\r\n];\r\nexport const 敵ステータス_元素耐性ARRAY = [\r\n    '敵炎元素耐性',\r\n    '敵水元素耐性',\r\n    '敵風元素耐性',\r\n    '敵雷元素耐性',\r\n    '敵草元素耐性',\r\n    '敵氷元素耐性',\r\n    '敵岩元素耐性',\r\n    '敵物理耐性'\r\n];\r\nexport const 敵ステータス_その他ARRAY = [\r\n    '敵防御力'\r\n];\r\n\r\nexport const ステータスARRAY_MAP = new Map([\r\n    ['基礎ステータス', 基礎ステータスARRAY],\r\n    ['基本ステータス', 基本ステータスARRAY],\r\n    ['高級ステータス', 高級ステータスARRAY],\r\n    ['元素ステータス·ダメージ', 元素ステータス_ダメージARRAY],\r\n    ['元素ステータス·耐性', 元素ステータス_耐性ARRAY],\r\n    ['ダメージバフ', ダメージバフARRAY],\r\n    ['実数ダメージ加算', 実数ダメージ加算ARRAY],\r\n    ['元素反応バフ', 元素反応バフARRAY],\r\n    ['その他', ステータスその他ARRAY],\r\n    ['ステータス連動', ステータス連動ARRAY],\r\n    ['チーム内最高値', ステータスチーム内最高ARRAY],\r\n    ['敵ステータス·元素耐性', 敵ステータス_元素耐性ARRAY],\r\n    ['敵ステータス·その他', 敵ステータス_その他ARRAY],\r\n]);\r\n\r\nexport const STAT_PERCENT_LIST = [\r\n    ...高級ステータスARRAY, ...元素ステータス_ダメージARRAY, ...元素ステータス_耐性ARRAY, ...ダメージバフARRAY, ...元素反応バフARRAY, ...敵ステータス_元素耐性ARRAY,\r\n    '別枠乗算', '敵防御力',\r\n];\r\n\r\nexport type TStats = {\r\n    [key: string]: number,\r\n};\r\n\r\nfunction makeStatusTenmplate() {\r\n    const statsObj: TStats = {};\r\n    ステータスARRAY_MAP.forEach((value) => {\r\n        value.forEach(stat => {\r\n            statsObj[stat] = 0;\r\n        });\r\n    });\r\n    statsObj['会心率'] = 5;\r\n    statsObj['会心ダメージ'] = 50;\r\n    statsObj['元素チャージ効率'] = 100;\r\n    statsObj['敵レベル'] = 0;\r\n    statsObj['敵防御力'] = 0;\r\n    return statsObj;\r\n}\r\nexport const ステータスTEMPLATE = makeStatusTenmplate();\r\n\r\nfunction makeEnemyStatusTemplate() {\r\n    const statsObj: TStats = {};\r\n    [元素ステータス_耐性ARRAY].forEach((value) => {\r\n        value.forEach(stat => {\r\n            statsObj[stat] = 0;\r\n        });\r\n    });\r\n    statsObj['防御力'] = 0;\r\n    return statsObj;\r\n}\r\nexport const 敵ステータスTEMPLATE = makeEnemyStatusTemplate();\r\n\r\nexport const 聖遺物メイン効果_生の花ARRAY = [\r\n    '5_HP', '4_HP'\r\n];\r\nexport const 聖遺物メイン効果_死の羽ARRAY = [\r\n    '5_攻撃力', '4_攻撃力'\r\n];\r\nexport const 聖遺物メイン効果_時の砂ARRAY = [\r\n    '5_元素チャージ効率',\r\n    '5_HP%',\r\n    '5_攻撃力%',\r\n    '5_防御力%',\r\n    '5_元素熟知',\r\n    '4_元素チャージ効率',\r\n    '4_HP%',\r\n    '4_攻撃力%',\r\n    '4_防御力%',\r\n    '4_元素熟知'\r\n];\r\nexport const 聖遺物メイン効果_空の杯ARRAY = [\r\n    '5_炎元素ダメージバフ',\r\n    '5_水元素ダメージバフ',\r\n    '5_風元素ダメージバフ',\r\n    '5_雷元素ダメージバフ',\r\n    '5_草元素ダメージバフ',\r\n    '5_氷元素ダメージバフ',\r\n    '5_岩元素ダメージバフ',\r\n    '5_物理ダメージバフ',\r\n    '5_HP%',\r\n    '5_攻撃力%',\r\n    '5_防御力%',\r\n    '5_元素熟知',\r\n    '4_炎元素ダメージバフ',\r\n    '4_水元素ダメージバフ',\r\n    '4_風元素ダメージバフ',\r\n    '4_雷元素ダメージバフ',\r\n    '4_草元素ダメージバフ',\r\n    '4_氷元素ダメージバフ',\r\n    '4_岩元素ダメージバフ',\r\n    '4_物理ダメージバフ',\r\n    '4_HP%',\r\n    '4_攻撃力%',\r\n    '4_防御力%',\r\n    '4_元素熟知'\r\n];\r\nexport const 聖遺物メイン効果_理の冠ARRAY = [\r\n    '5_会心率',\r\n    '5_会心ダメージ',\r\n    '5_HP%',\r\n    '5_攻撃力%',\r\n    '5_防御力%',\r\n    '5_元素熟知',\r\n    '5_与える治療効果',\r\n    '4_会心率',\r\n    '4_会心ダメージ',\r\n    '4_HP%',\r\n    '4_攻撃力%',\r\n    '4_防御力%',\r\n    '4_元素熟知',\r\n    '4_与える治療効果'\r\n];\r\n\r\nexport const 聖遺物サブ効果ARRAY = [\r\n    'HP',\r\n    '攻撃力',\r\n    '防御力',\r\n    '元素熟知',\r\n    '会心率',\r\n    '会心ダメージ',\r\n    '元素チャージ効率',\r\n    '攻撃力%',\r\n    'HP%',\r\n    '防御力%',\r\n];\r\nexport const 聖遺物優先するサブ効果ARRAY = [\r\n    '攻撃力%',\r\n    'HP%',\r\n    '防御力%',\r\n    '元素熟知',\r\n    '会心率',\r\n    '会心ダメージ',\r\n    '元素チャージ効率',\r\n];\r\n\r\nexport const 聖遺物ステータスTEMPLATE = {\r\n    'HP': 0,\r\n    '攻撃力': 0,\r\n    '防御力': 0,\r\n    '元素熟知': 0,\r\n    '会心率': 0,\r\n    '会心ダメージ': 0,\r\n    '元素チャージ効率': 0,\r\n    'HP%': 0,\r\n    '攻撃力%': 0,\r\n    '防御力%': 0,\r\n    '炎元素ダメージバフ': 0,\r\n    '水元素ダメージバフ': 0,\r\n    '風元素ダメージバフ': 0,\r\n    '雷元素ダメージバフ': 0,\r\n    '草元素ダメージバフ': 0,\r\n    '氷元素ダメージバフ': 0,\r\n    '岩元素ダメージバフ': 0,\r\n    '物理ダメージバフ': 0,\r\n    '与える治療効果': 0,\r\n};\r\n\r\nexport const 元素反応TEMPLATE = {\r\n    元素: '炎',\r\n    蒸発倍率: 0,\r\n    溶解倍率: 0,\r\n    過負荷ダメージ: 0,\r\n    感電ダメージ: 0,\r\n    超電導ダメージ: 0,\r\n    拡散ダメージ: 0,\r\n    拡散元素: '炎',\r\n    結晶吸収量: 0,\r\n    燃焼ダメージ: 0,\r\n    開花ダメージ: 0,\r\n    烈開花ダメージ: 0,\r\n    超開花ダメージ: 0,\r\n    超激化ダメージ: 0,\r\n    草激化ダメージ: 0,\r\n    燃焼ダメージ会心率: 0,          // for ナヒーダ\r\n    燃焼ダメージ会心ダメージ: 0,    // for ナヒーダ\r\n    開花ダメージ会心率: 0,          // for ナヒーダ\r\n    開花ダメージ会心ダメージ: 0,    // for ナヒーダ\r\n    烈開花ダメージ会心率: 0,        // for ナヒーダ\r\n    烈開花ダメージ会心ダメージ: 0,  // for ナヒーダ\r\n    超開花ダメージ会心率: 0,        // for ナヒーダ\r\n    超開花ダメージ会心ダメージ: 0,  // for ナヒーダ\r\n};\r\nexport type TDamageResultElementalReaction = typeof 元素反応TEMPLATE;\r\nexport type TDamageResultElementalReactionKey = keyof typeof 元素反応TEMPLATE;\r\n\r\nexport type TDamageResultEntry = [string, string | null, number, number | null, number, string | null, number | null, number | null, number | null];    // 0:名前, 1:元素, 2:期待値, 3:会心, 4:非会心, 5:種類, 6:HIT数, 7:ダメージバフ, 8:敵の防御補正\r\nexport type TDamageResult = {\r\n    元素反応: TDamageResultElementalReaction,\r\n    通常攻撃: TDamageResultEntry[],\r\n    重撃: TDamageResultEntry[],\r\n    落下攻撃: TDamageResultEntry[],\r\n    元素スキル: TDamageResultEntry[],\r\n    元素爆発: TDamageResultEntry[],\r\n    その他: TDamageResultEntry[],\r\n    キャラクター注釈: string[],\r\n    [key: string]: TDamageResultElementalReaction | TDamageResultEntry[] | string[],\r\n};\r\n\r\nexport const DAMAGE_RESULT_TEMPLATE = {\r\n    元素反応: _.cloneDeep(元素反応TEMPLATE) as TDamageResultElementalReaction,\r\n    通常攻撃: [] as TDamageResultEntry[],\r\n    重撃: [] as TDamageResultEntry[],\r\n    落下攻撃: [] as TDamageResultEntry[],\r\n    元素スキル: [] as TDamageResultEntry[],\r\n    元素爆発: [] as TDamageResultEntry[],\r\n    その他: [] as TDamageResultEntry[],\r\n    キャラクター注釈: [] as string[],\r\n};\r\n\r\nexport const 突破レベルレベルARRAY = [\r\n    Array.from({ length: 20 }, (_, i) => i + 1),\r\n    Array.from({ length: 21 }, (_, i) => i + 20),\r\n    Array.from({ length: 11 }, (_, i) => i + 40),\r\n    Array.from({ length: 11 }, (_, i) => i + 50),\r\n    Array.from({ length: 11 }, (_, i) => i + 60),\r\n    Array.from({ length: 11 }, (_, i) => i + 70),\r\n    Array.from({ length: 11 }, (_, i) => i + 80),\r\n];\r\n\r\n\r\nexport type TDamageDetailObj = {\r\n    名前: string | null,\r\n    種類: string | null,\r\n    元素: string | null,\r\n    数値: number | string | Array<any> | null,\r\n    条件: string | null,\r\n    対象: string | null,\r\n    上限: number | string | Array<any> | null,\r\n    下限: number | string | Array<any> | null,\r\n    HIT数: number | null,\r\n    ダメージバフ: string | null,\r\n    元素付与無効: boolean | null,\r\n    除外条件: (string | object)[] | null,\r\n    適用条件: (string | object)[] | null,\r\n};\r\n\r\nexport type TDamageDetail = {\r\n    通常攻撃?: TDamageDetailObj[],\r\n    重撃?: TDamageDetailObj[],\r\n    落下攻撃?: TDamageDetailObj[],\r\n    元素スキル?: TDamageDetailObj[],\r\n    元素爆発?: TDamageDetailObj[],\r\n    その他?: TDamageDetailObj[],\r\n    ステータス変更系詳細: TDamageDetailObj[],\r\n    天賦性能変更系詳細: TDamageDetailObj[],\r\n    条件: Map<string, string[]>,\r\n    排他: Map<string, string[]>,\r\n};\r\n\r\nexport const ARTIFACT_SET_MASTER_DUMMY = {\r\n    key: 'NONE' as TArtifactSetKey,\r\n    レアリティ: 5,\r\n    image: IMG_SRC_DUMMY,\r\n} as TArtifactSet;\r\n\r\nexport const CHARACTER_INPUT_TEMPLATE = {\r\n    character: 'アンバー' as TCharacterKey,\r\n    characterMaster: {} as TCharacterDetail,\r\n    突破レベル: 6,\r\n    レベル: 90,\r\n    命ノ星座: 0,\r\n    通常攻撃レベル: 8,\r\n    元素スキルレベル: 8,\r\n    元素爆発レベル: 8,\r\n    weapon: '西風猟弓' as TWeaponKey,\r\n    weaponMaster: {} as TWeaponDetail,\r\n    武器突破レベル: 6,\r\n    武器レベル: 90,\r\n    武器精錬ランク: 1,\r\n    artifactSets: ['NONE' as TArtifactSetKey, 'NONE' as TArtifactSetKey],\r\n    artifactSetMasters: [ARTIFACT_SET_MASTER_DUMMY, ARTIFACT_SET_MASTER_DUMMY] as TArtifactSetEntry[],\r\n    damageDetailMyCharacter: null as TDamageDetail | null,\r\n    damageDetailMyWeapon: null as TDamageDetail | null,\r\n    damageDetailMyArtifactSets: null as TDamageDetail | null,\r\n    damageDetailElementalResonance: null as TDamageDetail | null,\r\n    buildname: '',\r\n    recommendationSelectedIndex: 0,\r\n    saveDisabled: true,     // ローカルストレージへの構成保存不可か？\r\n    removeDisabled: true,   // ローカルストレージの構成削除不可か？\r\n};\r\nexport type TCharacterInput = typeof CHARACTER_INPUT_TEMPLATE;\r\n\r\nexport const ARTIFACT_TEMPLATE = {\r\n    name: '',\r\n    rarity: 5,\r\n    setname: 'NONE',\r\n    cat_id: 1,\r\n    mainStat: '',\r\n    mainStatValue: 0,\r\n    subStats: [\r\n        { name: 'HP', value: 0 },\r\n        { name: '攻撃力', value: 0 },\r\n        { name: '防御力', value: 0 },\r\n        { name: '元素熟知', value: 0 },\r\n    ]\r\n};\r\nexport type TArtifact = typeof ARTIFACT_TEMPLATE;\r\n\r\nexport const ARTIFACT_DETAIL_INPUT_TEMPLATE = {\r\n    聖遺物メイン効果: ['', '', '', '', ''],\r\n    聖遺物優先するサブ効果: ['', '', ''],\r\n    聖遺物優先するサブ効果上昇値: Array.from(GENSEN_MASTER_LIST[2].values),     // 厳選1ヶ月\r\n    聖遺物優先するサブ効果上昇回数: Array.from(GENSEN_MASTER_LIST[2].counts),   // 厳選1ヶ月\r\n    聖遺物ステータス: _.cloneDeep(聖遺物ステータスTEMPLATE),\r\n    聖遺物ステータスメイン効果: _.cloneDeep(聖遺物ステータスTEMPLATE),\r\n    聖遺物ステータスサブ効果: _.cloneDeep(聖遺物ステータスTEMPLATE),\r\n    聖遺物優先するサブ効果Disabled: false,\r\n    artifact_list: [] as TArtifact[],\r\n};\r\nexport type TArtifactDetailInput = typeof ARTIFACT_DETAIL_INPUT_TEMPLATE;\r\n\r\nexport type TCheckboxEntry = {\r\n    name: string;\r\n    displayName?: string;\r\n};\r\nexport type TSelectEntry = {\r\n    name: string;\r\n    displayName?: string;\r\n    options: string[];\r\n    required: boolean;\r\n};\r\nexport type TNumberEntry = {\r\n    name: string;\r\n    displayName?: string;\r\n    min: number | string;\r\n    max?: number | string;\r\n    step?: number;\r\n};\r\nexport type TConditionValues = {\r\n    [key: string]: boolean | number | null,\r\n};\r\nexport type TConditionAdjustments = {\r\n    [key: string]: number | null,\r\n};\r\nexport const CONDITION_INPUT_TEMPLATE = {\r\n    checkboxList: [] as TCheckboxEntry[],\r\n    selectList: [] as TSelectEntry[],\r\n    numberList: [] as TNumberEntry[],\r\n    conditionValues: {} as TConditionValues,\r\n    conditionAdjustments: {} as TConditionAdjustments,\r\n    攻撃元素: [null, null, null] as (string | null)[],\r\n};\r\nexport type TConditionInput = typeof CONDITION_INPUT_TEMPLATE;\r\n\r\nexport const STATS_INPUT_TEMPLATE = {\r\n    statsObj: _.cloneDeep(ステータスTEMPLATE) as TStats,\r\n    statAdjustments: _.cloneDeep(ステータスTEMPLATE) as TStats,\r\n    statAdjustmentsEx: {} as TStats,\r\n    enemyMaster: ENEMY_MASTER_LIST[0] as TEnemyEntry,\r\n};\r\nfor (const stat of Object.keys(STATS_INPUT_TEMPLATE.statAdjustments)) {\r\n    STATS_INPUT_TEMPLATE.statAdjustments[stat] = 0;\r\n}\r\nexport type TStatsInput = typeof STATS_INPUT_TEMPLATE;\r\n\r\nexport type TElementalResonance = {\r\n    conditionValues: TConditionValues,\r\n    conditionAdjustments: TConditionAdjustments,\r\n};\r\n\r\nexport const SUPPORTER_INPUT_TEMPLATE = {\r\n    characterInput: _.cloneDeep(CHARACTER_INPUT_TEMPLATE) as TCharacterInput,\r\n    artifactDetailInput: _.cloneDeep(ARTIFACT_DETAIL_INPUT_TEMPLATE) as TArtifactDetailInput,\r\n    conditionInput: _.cloneDeep(CONDITION_INPUT_TEMPLATE) as TConditionInput,\r\n    statsInput: _.cloneDeep(STATS_INPUT_TEMPLATE) as TStatsInput,\r\n    damageResult: _.cloneDeep(DAMAGE_RESULT_TEMPLATE) as TDamageResult,\r\n};\r\nexport type TSupporterInput = typeof SUPPORTER_INPUT_TEMPLATE;\r\n\r\nexport const OPTION_INPUT_TEMPLATE = {\r\n    elementalResonance: {\r\n        conditionValues: {},\r\n        conditionAdjustments: {},\r\n    } as TElementalResonance,\r\n    supporterBuildname: {} as { [key: string]: string | undefined },\r\n    supporters: {} as { [key: string]: TSupporterInput | undefined },\r\n    teamMembers: [] as string[],\r\n    teamOption: _.cloneDeep(CONDITION_INPUT_TEMPLATE) as TConditionInput,\r\n    miscOption: _.cloneDeep(CONDITION_INPUT_TEMPLATE) as TConditionInput,\r\n};\r\nexport type TOptionInput = typeof OPTION_INPUT_TEMPLATE;\r\n\r\n/** レベル文字列（1+,20,20+,...,90）を突破レベルとレベルに分割します */\r\nfunction parseLevelStr(levelStr: number | string): [number, number] {\r\n    let result: [number, number] = [0, 1];\r\n    try {\r\n        let level: number;\r\n        if (_.isString(levelStr)) {\r\n            level = Number(String(levelStr).replace('+', ''));\r\n        } else {\r\n            level = Number(levelStr);\r\n        }\r\n        let ascension = 0;\r\n        for (let i = (突破レベルレベルARRAY.length - 1); i >= 0; i--) {\r\n            ascension = i;\r\n            if (突破レベルレベルARRAY[i][0] > level) continue;\r\n            if (突破レベルレベルARRAY[i][0] == level && !String(levelStr).endsWith('+')) {\r\n                ascension--;\r\n            }\r\n            break;\r\n        }\r\n        result = [Math.max(0, ascension), level];\r\n    } catch (error) {\r\n        console.error(levelStr);\r\n        // throw error;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport type TRecommendation = {\r\n    name: string,\r\n    build: any,\r\n    overwrite: boolean\r\n}\r\n\r\nexport function makeDefaultBuildname(character: any) {\r\n    return 'あなたの' + character;\r\n}\r\n\r\nexport function makeBuildStorageKey(character: TCharacterKey | string, buildname?: string) {\r\n    let result = '構成_' + character;\r\n    if (buildname && buildname != makeDefaultBuildname(character)) {\r\n        result += '_' + buildname;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function makeOptionStorageKey(character: TCharacterKey | string, buildname?: string) {\r\n    return 'オプション' + makeBuildStorageKey(character, buildname);\r\n}\r\n\r\nexport function makeArtifactScoringStorageKey(character: TCharacterKey | string, buildname?: string) {\r\n    return makeBuildStorageKey(character, buildname).replace(/^構成/, 'ArtifactScoring');\r\n}\r\n\r\nexport function makeSupporterBuildnameStorageKey(character: TCharacterKey | string, buildname?: string) {\r\n    return makeBuildStorageKey(character, buildname).replace(/^構成/, 'SupporterBuildname');\r\n}\r\n\r\n/** おすすめセットのリストを作成します. [おすすめセットの名前, おすすめセットの内容, 上書き可不可][] */\r\nexport function makeRecommendationList(\r\n    characterMaster: TAnyObject,\r\n    opt_buildData?: TAnyObject,\r\n): TRecommendation[] {\r\n    const result: TRecommendation[] = [];\r\n\r\n    const character = characterMaster['名前'];\r\n    let isSavable: boolean | null = null;\r\n\r\n    if (opt_buildData) {\r\n        result.push({ name: 'IMPORTED DATA', build: opt_buildData, overwrite: false });\r\n        isSavable = true;\r\n        console.log(opt_buildData);\r\n    }\r\n\r\n    const storageKeyArr: string[] = [];\r\n    Object.keys(localStorage).forEach(key => {\r\n        if (key.startsWith(makeBuildStorageKey(character))) {\r\n            storageKeyArr.push(key);\r\n            if (isSavable == null) {\r\n                isSavable = false;\r\n            }\r\n        }\r\n    });\r\n    storageKeyArr.sort();\r\n    const re = new RegExp('^構成_' + character + '_');\r\n    storageKeyArr.forEach(key => {\r\n        let buildname;\r\n        if (key == makeBuildStorageKey(character)) {\r\n            buildname = makeDefaultBuildname(character);\r\n        } else {\r\n            buildname = key.replace(re, '');\r\n        }\r\n        const buildObj = JSON.parse(localStorage[key]);\r\n        const key2 = 'オプション' + key;\r\n        if (key2 in localStorage) {\r\n            const optionsObj = JSON.parse(localStorage[key2]);\r\n            buildObj.options = optionsObj;\r\n        }\r\n        const key3 = key.replace(/^構成/, 'ArtifactScoring');\r\n        if (key3 in localStorage) {\r\n            const artifactScoringObj = JSON.parse(localStorage[key3]);\r\n            buildObj.artifactScoring = artifactScoringObj;\r\n        }\r\n        const key4 = key.replace(/^構成/, 'SupporterBuildname');\r\n        if (key4 in localStorage) {\r\n            const supporterBuildnameObj = JSON.parse(localStorage[key4]);\r\n            buildObj.supporterBuildname = supporterBuildnameObj;\r\n        }\r\n        result.push({ name: buildname, build: buildObj, overwrite: true });\r\n    });\r\n\r\n    characterMaster['おすすめセット'].forEach((obj: { [key: string]: any }) => {\r\n        const myRecommendation = obj;\r\n        ['聖遺物優先するサブ効果1', '聖遺物優先するサブ効果2', '聖遺物優先するサブ効果3'].forEach(stat => {\r\n            if (!(stat in obj)) {\r\n                obj[stat] = null;\r\n            }\r\n        });\r\n        const artifactRarerityArrArr = [[5, 5, 5, 5, 5], [4, 4, 5, 5, 5], [4, 4, 4, 5, 4]];\r\n        let artifactRarerity4Num = 0;\r\n        const artifactSet1 = myRecommendation['聖遺物セット効果1'] as TArtifactSetKey;\r\n        const artifactSet2 = myRecommendation['聖遺物セット効果2'] as TArtifactSetKey;\r\n        if (ARTIFACT_SET_MASTER[artifactSet1]['レアリティ'] == 4) {\r\n            artifactRarerity4Num++;\r\n        }\r\n        if (ARTIFACT_SET_MASTER[artifactSet2]['レアリティ'] == 4) {\r\n            artifactRarerity4Num++;\r\n        }\r\n        for (let i = 0; i < 2; i++) {\r\n            const name = '聖遺物メイン効果' + (i + 1);\r\n            if (!(name in myRecommendation)) {\r\n                if (i == 0) {\r\n                    myRecommendation[name] = artifactRarerityArrArr[artifactRarerity4Num][i] + '_HP';\r\n                } else if (i == 1) {\r\n                    myRecommendation[name] = artifactRarerityArrArr[artifactRarerity4Num][i] + '_攻撃力';\r\n                }\r\n            }\r\n        }\r\n\r\n        let buildname = myRecommendation['武器'];\r\n        buildname += ' ';\r\n        if (myRecommendation['聖遺物セット効果1'] == myRecommendation['聖遺物セット効果2']) {\r\n            buildname += myRecommendation['聖遺物セット効果1'];\r\n        } else {\r\n            buildname += makeArtifactSetAbbrev(myRecommendation['聖遺物セット効果1']);\r\n            buildname += '/';\r\n            buildname += makeArtifactSetAbbrev(myRecommendation['聖遺物セット効果2']);\r\n        }\r\n        buildname += ' [';\r\n        for (let i = 3; i <= 5; i++) {\r\n            const statusName = myRecommendation['聖遺物メイン効果' + i].split('_')[1];\r\n            if (RECOMMEND_ABBREV_MAP.has(statusName)) {\r\n                buildname += RECOMMEND_ABBREV_MAP.get(statusName);\r\n            } else {\r\n                buildname += statusName.substring(0, 1);\r\n            }\r\n        }\r\n        buildname += ']';\r\n        result.push({ name: buildname, build: myRecommendation, overwrite: false });\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\n/** 聖遺物セット名の略称を作成します */\r\nfunction makeArtifactSetAbbrev(name: string): string {\r\n    const abbrRe = /[\\p{sc=Hiragana}\\p{sc=Katakana}ー]+/ug;\r\n    let abbr = name.replace(abbrRe, '');\r\n    if (abbr.length > 2) {\r\n        abbr = name.split(abbrRe).sort((a, b) => {\r\n            return b.length - a.length;\r\n        })[0];\r\n    }\r\n    if (abbr.length > 3) {\r\n        abbr = abbr.substring(0, 2);\r\n    }\r\n    return abbr;\r\n}\r\n\r\nexport function makePrioritySubstatValueList(\r\n    prioritySubstats: TArtifactSubKey[],\r\n    index: number,\r\n    opt_substat?: TArtifactSubKey\r\n) {\r\n    const result: number[] = [];\r\n    if (prioritySubstats[index]) {\r\n        if (!opt_substat) opt_substat = prioritySubstats[index];\r\n        if (opt_substat && opt_substat in ARTIFACT_SUB_MASTER) {\r\n            const valueArr = ARTIFACT_SUB_MASTER[opt_substat];\r\n            for (let i = 0; i < valueArr.length; i++) {\r\n                result.push(valueArr[i]);\r\n                if (i < valueArr.length - 1) {\r\n                    const diff = valueArr[i + 1] - valueArr[i];\r\n                    result.push(valueArr[i] + diff / 2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function makeEasyInputSubstatValueList(\r\n    substat: TArtifactSubKey\r\n) {\r\n    const result: number[] = [];\r\n    if (substat && substat in ARTIFACT_SUB_MASTER) {\r\n        const valueArr = ARTIFACT_SUB_MASTER[substat];\r\n        for (let i = 0; i < valueArr.length; i++) {\r\n            result.push(valueArr[i]);\r\n            if (i < valueArr.length - 1) {\r\n                const diff = valueArr[i + 1] - valueArr[i];\r\n                result.push(valueArr[i] + diff / 2);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/** おすすめセットをロードします */\r\nexport async function loadRecommendation(\r\n    characterInput: TCharacterInput,\r\n    artifactDetailInput: TArtifactDetailInput,\r\n    conditionInput: TConditionInput,\r\n    optionInput: TOptionInput,\r\n    build: { [key: string]: any }\r\n) {\r\n    try {\r\n        const character = characterInput.character;\r\n        const characterMaster = await getCharacterMasterDetail(character);\r\n        characterInput.characterMaster = characterMaster;\r\n        const artifactStatsSub = _.cloneDeep(聖遺物ステータスTEMPLATE);\r\n\r\n        if ('レベル' in build) {\r\n            [characterInput.突破レベル, characterInput.レベル] = parseLevelStr(build['レベル']);\r\n        }\r\n        ['命ノ星座', '通常攻撃レベル', '元素スキルレベル', '元素爆発レベル'].forEach(key => {\r\n            if (key in build) {\r\n                (characterInput as any)[key] = Number(build[key]);\r\n            }\r\n        });\r\n\r\n        const weaponType = characterMaster['武器'];\r\n        if ('武器' in build) {\r\n            if (Object.keys(WEAPON_MASTER[weaponType]).includes(build['武器'])) {\r\n                characterInput.weapon = build['武器'] as TWeaponKey;\r\n            } else {\r\n                characterInput.weapon = Object.keys(WEAPON_MASTER[weaponType]).filter(s => s.startsWith('西風'))[0] as TWeaponKey;\r\n            }\r\n            characterInput.weaponMaster = await getWeaponMasterDetail(characterInput.weapon, weaponType);\r\n        }\r\n        if ('武器レベル' in build) {\r\n            [characterInput.武器突破レベル, characterInput.武器レベル] = parseLevelStr(build['武器レベル']);\r\n        }\r\n        if ('精錬ランク' in build) {\r\n            characterInput.武器精錬ランク = Number(build['精錬ランク']);\r\n        }\r\n\r\n        let prioritySubstatsDisabled = false;\r\n        for (const key of Object.keys(build).filter((s: string) => s.startsWith('聖遺物サブ効果'))) {\r\n            let toKey = key.replace(/^聖遺物サブ効果/, '');\r\n            if (toKey != 'HP') toKey = toKey.replace(/P$/, '%');\r\n            if (build[key] || build[key] == 0) {\r\n                prioritySubstatsDisabled = true;\r\n                (artifactStatsSub as any)[toKey] = Number(build[key]);\r\n            }\r\n        }\r\n        artifactDetailInput.聖遺物優先するサブ効果Disabled = prioritySubstatsDisabled;\r\n\r\n        ['聖遺物セット効果1', '聖遺物セット効果2'].forEach((key, index) => {\r\n            if (!(key in build)) return;\r\n            const artifactSet = build[key] as TArtifactSetKey;\r\n            if (artifactSet && artifactSet in ARTIFACT_SET_MASTER) {\r\n                characterInput.artifactSets[index] = artifactSet;\r\n                characterInput.artifactSetMasters[index] = ARTIFACT_SET_MASTER[artifactSet] as TArtifactSetEntry;\r\n            } else {\r\n                characterInput.artifactSetMasters[index] = ARTIFACT_SET_MASTER_DUMMY as TArtifactSetEntry;\r\n            }\r\n        });\r\n\r\n        ['聖遺物メイン効果1', '聖遺物メイン効果2'].forEach((key, index) => {\r\n            if (key in build) {\r\n                artifactDetailInput['聖遺物メイン効果'][index] = build[key];\r\n            } else {\r\n                artifactDetailInput['聖遺物メイン効果'][index] = ['5_HP', '5_攻撃力'][index];\r\n            }\r\n        });\r\n        ['聖遺物メイン効果3', '聖遺物メイン効果4', '聖遺物メイン効果5'].forEach((key, index) => {\r\n            if (!(key in build)) return;\r\n            const mainstat = build[key];\r\n            artifactDetailInput['聖遺物メイン効果'][index + 2] = mainstat;\r\n        });\r\n        // for (const entry of artifactDetailInput['聖遺物メイン効果']) {\r\n        //     const [rarity, stat] = entry.split('_');\r\n        //     artifactStatsMain[stat] += (ARTIFACT_MAIN_MASTER as any)[rarity][stat];\r\n        // }\r\n        // overwriteObject(artifactDetailInput.聖遺物ステータスメイン効果, artifactStatsMain);\r\n\r\n        if (!prioritySubstatsDisabled) {\r\n            ['聖遺物優先するサブ効果1', '聖遺物優先するサブ効果2', '聖遺物優先するサブ効果3'].forEach((key, index) => {\r\n                if (!(key in build)) return;\r\n                const substat = build[key];\r\n                artifactDetailInput['聖遺物優先するサブ効果'][index] = substat;\r\n            });\r\n            ['聖遺物優先するサブ効果1上昇値', '聖遺物優先するサブ効果2上昇値', '聖遺物優先するサブ効果3上昇値'].forEach((key, index) => {\r\n                let doUpdate = false;\r\n                if (artifactDetailInput['聖遺物優先するサブ効果'][index]) {\r\n                    if ((key in build) && isNumber(build[key])) {\r\n                        doUpdate = true;\r\n                    }\r\n                }\r\n                if (doUpdate) {\r\n                    const substatValue = Number(build[key]);\r\n                    const substat = artifactDetailInput['聖遺物優先するサブ効果'][index] as TArtifactSubKey;\r\n                    const prioritySubstatValueList = makePrioritySubstatValueList([substat], 0);\r\n                    prioritySubstatValueList.forEach((v, i) => {\r\n                        if (substatValue <= v) {\r\n                            artifactDetailInput['聖遺物優先するサブ効果上昇値'][index] = i;\r\n                        }\r\n                    })\r\n                } else {\r\n                    if (artifactDetailInput['聖遺物優先するサブ効果'][index] && !artifactDetailInput['聖遺物優先するサブ効果上昇値'][index]) {\r\n                        artifactDetailInput['聖遺物優先するサブ効果上昇値'][index] = GENSEN_MASTER_LIST[2].values[index];\r\n                    }\r\n                }\r\n            });\r\n            ['聖遺物優先するサブ効果1上昇回数', '聖遺物優先するサブ効果2上昇回数', '聖遺物優先するサブ効果3上昇回数'].forEach((key, index) => {\r\n                let doUpdate = false;\r\n                if (artifactDetailInput['聖遺物優先するサブ効果'][index]) {\r\n                    if ((key in build) && isNumber(build[key])) {\r\n                        doUpdate = true;\r\n                    }\r\n                }\r\n                if (doUpdate) {\r\n                    const substatCount = Number(build[key]);\r\n                    artifactDetailInput['聖遺物優先するサブ効果上昇回数'][index] = substatCount;\r\n                } else {\r\n                    if (artifactDetailInput['聖遺物優先するサブ効果'][index] && !artifactDetailInput['聖遺物優先するサブ効果上昇回数'][index]) {\r\n                        artifactDetailInput['聖遺物優先するサブ効果上昇回数'][index] = GENSEN_MASTER_LIST[2].counts[index];\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        Object.keys(build).filter(s => !キャラクター構成PROPERTY_MAP.has(s) && !['options', 'artifactScoring', 'supporterBuildname', 'artifact_list'].includes(s)).forEach(key => {\r\n            if (build[key] == null) {\r\n                conditionInput.conditionValues[key] = build[key];   // null\r\n            } else if (_.isString(build[key])) {\r\n                conditionInput.conditionValues[key] = Number(build[key]);\r\n            } else {\r\n                conditionInput.conditionValues[key] = build[key];\r\n            }\r\n        });\r\n\r\n        if ('options' in build) {\r\n            const keys = Object.keys(build.options);\r\n            if (keys.length) {\r\n                overwriteObject(optionInput.elementalResonance.conditionValues, {});\r\n                overwriteObject(optionInput.teamOption.conditionValues, {});\r\n                overwriteObject(optionInput.miscOption.conditionValues, {});\r\n                keys.forEach(key => {\r\n                    if (key in ELEMENTAL_RESONANCE_MASTER || key == 'dendroOption') {\r\n                        // 元素共鳴\r\n                        optionInput.elementalResonance.conditionValues[key] = build.options[key];\r\n                    } else {\r\n                        const astarIndex = key.indexOf('*');\r\n                        if (astarIndex != -1) {\r\n                            const workCharacter = key.substring(0, astarIndex);\r\n                            if (workCharacter in CHARACTER_MASTER) {\r\n                                // チーム\r\n                                optionInput.teamOption.conditionValues[key] = build.options[key];\r\n                            } else {\r\n                                // その他\r\n                                optionInput.miscOption.conditionValues[key] = build.options[key];\r\n                            }\r\n                        } else {\r\n                            // その他\r\n                            optionInput.miscOption.conditionValues[key] = build.options[key];\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        if ('supporterBuildname' in build) {\r\n            const keys = Object.keys(build.supporterBuildname);\r\n            if (keys.length) {\r\n                overwriteObject(optionInput.supporterBuildname, {});\r\n                keys.forEach(key => {\r\n                    optionInput.supporterBuildname[key] = build.supporterBuildname[key];\r\n                });\r\n            }\r\n        }\r\n\r\n        if ('artifact_list' in build) {\r\n            artifactDetailInput.artifact_list.splice(0, artifactDetailInput.artifact_list.length, ...build.artifact_list);\r\n        }\r\n\r\n        overwriteObject(artifactDetailInput.聖遺物ステータスサブ効果, artifactStatsSub);\r\n\r\n        console.debug('loadRecommendation', characterInput, artifactDetailInput, conditionInput, build);\r\n    }\r\n    catch (error) {\r\n        console.error(characterInput, artifactDetailInput, conditionInput, build);\r\n        // throw error;\r\n    }\r\n}\r\n\r\nexport function makeSavedata(characterInput: TCharacterInput, artifactDetailInput: TArtifactDetailInput, conditionInput: TConditionInput) {\r\n    const resultObj = {} as any;\r\n\r\n    // キャラクター\r\n    resultObj['キャラクター'] = characterInput.character;\r\n    // レベル\r\n    resultObj['レベル'] = characterInput.レベル + (突破レベルレベルARRAY[characterInput.突破レベル][0] == characterInput.レベル ? '+' : '');\r\n    // 命ノ星座\r\n    resultObj['命ノ星座'] = characterInput.命ノ星座;\r\n    // 通常攻撃レベル\r\n    resultObj['通常攻撃レベル'] = characterInput.通常攻撃レベル;\r\n    // 元素スキルレベル\r\n    resultObj['元素スキルレベル'] = characterInput.元素スキルレベル;\r\n    // 元素爆発レベル\r\n    resultObj['元素爆発レベル'] = characterInput.元素爆発レベル;\r\n    // 武器\r\n    resultObj['武器'] = characterInput.weapon;\r\n    // 武器レベル\r\n    resultObj['武器レベル'] = characterInput.武器レベル + (突破レベルレベルARRAY[characterInput.突破レベル][0] == characterInput.武器レベル ? '+' : '');\r\n    // 精錬ランク\r\n    resultObj['精錬ランク'] = characterInput.武器精錬ランク;\r\n    // 聖遺物セット効果1\r\n    resultObj['聖遺物セット効果1'] = characterInput.artifactSets[0];\r\n    // 聖遺物セット効果2\r\n    resultObj['聖遺物セット効果2'] = characterInput.artifactSets[1];\r\n    // 聖遺物メイン効果1\r\n    resultObj['聖遺物メイン効果1'] = artifactDetailInput.聖遺物メイン効果[0];\r\n    // 聖遺物メイン効果2\r\n    resultObj['聖遺物メイン効果2'] = artifactDetailInput.聖遺物メイン効果[1];\r\n    // 聖遺物メイン効果3\r\n    resultObj['聖遺物メイン効果3'] = artifactDetailInput.聖遺物メイン効果[2];\r\n    // 聖遺物メイン効果4\r\n    resultObj['聖遺物メイン効果4'] = artifactDetailInput.聖遺物メイン効果[3];\r\n    // 聖遺物メイン効果5\r\n    resultObj['聖遺物メイン効果5'] = artifactDetailInput.聖遺物メイン効果[4];\r\n    // 聖遺物サブ効果HP\r\n    resultObj['聖遺物サブ効果HP'] = artifactDetailInput.聖遺物ステータスサブ効果['HP'];\r\n    // 聖遺物サブ効果攻撃力\r\n    resultObj['聖遺物サブ効果攻撃力'] = artifactDetailInput.聖遺物ステータスサブ効果['攻撃力'];\r\n    // 聖遺物サブ効果防御力\r\n    resultObj['聖遺物サブ効果防御力'] = artifactDetailInput.聖遺物ステータスサブ効果['防御力'];\r\n    // 聖遺物サブ効果元素熟知\r\n    resultObj['聖遺物サブ効果元素熟知'] = artifactDetailInput.聖遺物ステータスサブ効果['元素熟知'];\r\n    // 聖遺物サブ効果会心率\r\n    resultObj['聖遺物サブ効果会心率'] = artifactDetailInput.聖遺物ステータスサブ効果['会心率'];\r\n    // 聖遺物サブ効果会心ダメージ\r\n    resultObj['聖遺物サブ効果会心ダメージ'] = artifactDetailInput.聖遺物ステータスサブ効果['会心ダメージ'];\r\n    // 聖遺物サブ効果元素チャージ効率\r\n    resultObj['聖遺物サブ効果元素チャージ効率'] = artifactDetailInput.聖遺物ステータスサブ効果['元素チャージ効率'];\r\n    // 聖遺物サブ効果HPP\r\n    resultObj['聖遺物サブ効果HPP'] = artifactDetailInput.聖遺物ステータスサブ効果['HP%'];\r\n    // 聖遺物サブ効果攻撃力P\r\n    resultObj['聖遺物サブ効果攻撃力P'] = artifactDetailInput.聖遺物ステータスサブ効果['攻撃力%'];\r\n    // 聖遺物サブ効果防御力P\r\n    resultObj['聖遺物サブ効果防御力P'] = artifactDetailInput.聖遺物ステータスサブ効果['防御力%'];\r\n    // 聖遺物優先するサブ効果1\r\n    resultObj['聖遺物優先するサブ効果1'] = artifactDetailInput.聖遺物優先するサブ効果[0];\r\n    // 聖遺物優先するサブ効果1上昇値\r\n    resultObj['聖遺物優先するサブ効果1上昇値'] = artifactDetailInput.聖遺物優先するサブ効果上昇値[0];\r\n    // 聖遺物優先するサブ効果1上昇回数\r\n    resultObj['聖遺物優先するサブ効果1上昇回数'] = artifactDetailInput.聖遺物優先するサブ効果上昇回数[0];\r\n    // 聖遺物優先するサブ効果2\r\n    resultObj['聖遺物優先するサブ効果2'] = artifactDetailInput.聖遺物優先するサブ効果[1];\r\n    // 聖遺物優先するサブ効果2上昇値\r\n    resultObj['聖遺物優先するサブ効果2上昇値'] = artifactDetailInput.聖遺物優先するサブ効果上昇値[1];\r\n    // 聖遺物優先するサブ効果2上昇回数\r\n    resultObj['聖遺物優先するサブ効果2上昇回数'] = artifactDetailInput.聖遺物優先するサブ効果上昇回数[1];\r\n    // 聖遺物優先するサブ効果3\r\n    resultObj['聖遺物優先するサブ効果3'] = artifactDetailInput.聖遺物優先するサブ効果[2];\r\n    // 聖遺物優先するサブ効果3上昇値\r\n    resultObj['聖遺物優先するサブ効果3上昇値'] = artifactDetailInput.聖遺物優先するサブ効果上昇値[2];\r\n    // 聖遺物優先するサブ効果3上昇回数\r\n    resultObj['聖遺物優先するサブ効果3上昇回数'] = artifactDetailInput.聖遺物優先するサブ効果上昇回数[2];\r\n\r\n    for (const entry of conditionInput.checkboxList) {\r\n        resultObj[entry.name] = conditionInput.conditionValues[entry.name];\r\n    }\r\n    for (const entry of conditionInput.selectList) {\r\n        resultObj[entry.name] = conditionInput.conditionValues[entry.name];\r\n    }\r\n\r\n    resultObj['artifact_list'] =  artifactDetailInput.artifact_list;\r\n    \r\n    return resultObj;\r\n}\r\n\r\nexport function makeOptionsSavedata(character: string, optionInput: TOptionInput) {\r\n    const resultObj = {} as any;\r\n\r\n    // 元素共鳴\r\n    {\r\n        const conditionValues = optionInput.elementalResonance.conditionValues;\r\n        Object.keys(conditionValues).forEach(key => {\r\n            if (conditionValues[key]) {\r\n                resultObj[key] = conditionValues[key];\r\n            }\r\n        })\r\n    }\r\n\r\n    // チーム\r\n    {\r\n        const conditionValues = optionInput.teamOption.conditionValues;\r\n        Object.keys(conditionValues).forEach(key => {\r\n            if (key.startsWith(character + '*')) return;\r\n            if (conditionValues[key]) {\r\n                resultObj[key] = conditionValues[key];\r\n            }\r\n        })\r\n    }\r\n\r\n    // その他\r\n    {\r\n        const conditionValues = optionInput.miscOption.conditionValues;\r\n        Object.keys(conditionValues).forEach(key => {\r\n            if (conditionValues[key]) {\r\n                resultObj[key] = conditionValues[key];\r\n            }\r\n        })\r\n    }\r\n\r\n    return resultObj;\r\n}\r\n\r\nexport function makeSupporterBuildnameSavedata(buildnameSelection: TAnyObject, optionInput: TOptionInput) {\r\n    const result: TAnyObject = {};\r\n    const conditionKeys = Object.keys(optionInput.teamOption.conditionValues);\r\n    for (const supporter of Object.keys(buildnameSelection)) {\r\n        if (!buildnameSelection[supporter]) continue;\r\n        if (conditionKeys.filter(s => s.startsWith(supporter + '*')).length == 0) continue;\r\n        result[supporter] = buildnameSelection[supporter];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const CHANGE_KIND_STATUS = 'ステータス変更系詳細';\r\nexport const CHANGE_KIND_TALENT = '天賦性能変更系詳細';\r\n\r\nexport function makeDamageDetailObjArrObjCharacter(characterInput: TCharacterInput): TDamageDetail {\r\n    const result = {} as any;\r\n    try {\r\n        const characterMaster = characterInput.characterMaster as any;\r\n\r\n        let myTalentDetail;\r\n        let myTalentLevel: number;\r\n        let myDefaultKind: string | null;\r\n        let myDefaultElement: string | null;\r\n        const myInputCategory = 'キャラクター';\r\n\r\n        const myStatusChangeDetailObjArr = [] as any[];\r\n        const myTalentChangeDetailObjArr = [] as any[];\r\n\r\n        // 通常攻撃 重撃 落下攻撃\r\n        myTalentLevel = characterInput['通常攻撃レベル'];\r\n        myDefaultElement = characterMaster['武器'] === '法器' ? characterMaster['元素'] : null;\r\n        ['通常攻撃', '重撃', '落下攻撃'].forEach(category => {\r\n            myTalentDetail = characterMaster[category];\r\n            myDefaultKind = category + 'ダメージ';\r\n            result[category] = makeDamageDetailObjArr(myTalentDetail, myTalentLevel, myDefaultKind, myDefaultElement, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n        });\r\n\r\n        ['通常攻撃', '重撃', '落下攻撃'].forEach(category => {\r\n            const workCategory = '特殊' + category;\r\n            if (workCategory in characterMaster) {\r\n                myTalentDetail = characterMaster[workCategory];\r\n                if ('種類' in myTalentDetail) {\r\n                    myDefaultKind = myTalentDetail['種類'];\r\n                    switch (myDefaultKind) {\r\n                        case '元素スキルダメージ':\r\n                            myTalentLevel = characterInput['元素スキルレベル'];\r\n                            break;\r\n                        case '元素爆発ダメージ':\r\n                            myTalentLevel = characterInput['元素爆発レベル'];\r\n                            break;\r\n                    }\r\n                }\r\n                if ('元素' in myTalentDetail) {\r\n                    myDefaultElement = myTalentDetail['元素'];\r\n                }\r\n                const workObj = {\r\n                    条件: myTalentDetail['条件'],\r\n                    詳細: makeDamageDetailObjArr(myTalentDetail, myTalentLevel, myDefaultKind, myDefaultElement, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory)\r\n                };\r\n                result[workCategory] = workObj;\r\n            }\r\n        });\r\n\r\n        // 元素スキル\r\n        myTalentLevel = characterInput['元素スキルレベル'];\r\n        myDefaultKind = '元素スキルダメージ';\r\n        myDefaultElement = characterMaster['元素'];\r\n        result['元素スキル'] = makeDamageDetailObjArr(characterMaster['元素スキル'], myTalentLevel, myDefaultKind, myDefaultElement, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n\r\n        // 元素爆発\r\n        myTalentLevel = characterInput['元素爆発レベル'];\r\n        myDefaultKind = '元素爆発ダメージ';\r\n        myDefaultElement = characterMaster['元素'];\r\n        result['元素爆発'] = makeDamageDetailObjArr(characterMaster['元素爆発'], myTalentLevel, myDefaultKind, myDefaultElement, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n\r\n        result['その他'] = [] as TDamageDetailObj[];\r\n\r\n        // その他戦闘天賦\r\n        if ('その他戦闘天賦' in characterMaster) {\r\n            characterMaster['その他戦闘天賦'].forEach((myTalentDetail: any) => {\r\n                const workArr = makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n                if (workArr.length > 0) result['その他'].push(...workArr);\r\n            });\r\n        }\r\n\r\n        // 固有天賦\r\n        characterMaster['固有天賦'].forEach((myTalentDetail: any) => {\r\n            const workArr = makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n            if (workArr.length > 0) result['その他'].push(...workArr);\r\n        });\r\n\r\n        // 命ノ星座\r\n        if ('命ノ星座' in characterMaster) {\r\n            Object.keys(characterMaster['命ノ星座']).forEach(key => {\r\n                if (Number(key) > characterInput.命ノ星座) return;\r\n                myTalentDetail = characterMaster['命ノ星座'][key];\r\n                const workArr = makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n                if (workArr.length > 0) result['その他'].push(...workArr);\r\n            });\r\n        }\r\n\r\n        // 風元素キャラクター\r\n        if (characterMaster['元素'] == '風') {\r\n            if (myTalentChangeDetailObjArr.filter(s => s.条件 && s.条件.startsWith('拡散@')).length == 0) {\r\n                ['炎元素', '水元素', '雷元素', '氷元素'].forEach(cond => {\r\n                    myTalentChangeDetailObjArr.push({\r\n                        名前: null,\r\n                        種類: '固有変数',\r\n                        元素: null,\r\n                        数値: null,\r\n                        条件: '拡散@' + cond,\r\n                        対象: null,\r\n                        上限: null,\r\n                        HIT数: null,\r\n                        ダメージバフ: null,\r\n                        元素付与無効: null,\r\n                        除外条件: null,\r\n                        適用条件: null\r\n                    });\r\n                });\r\n            }\r\n            if ('オプション初期値' in characterMaster) {\r\n                if (Object.keys(characterMaster['オプション初期値']).filter(s => s == '拡散').length == 0) {\r\n                    characterMaster['オプション初期値']['拡散'] = 1;\r\n                }\r\n            } else {\r\n                characterMaster['オプション初期値'] = { 拡散: 1 };\r\n            }\r\n        }\r\n\r\n        result[CHANGE_KIND_STATUS] = myStatusChangeDetailObjArr;\r\n        result[CHANGE_KIND_TALENT] = myTalentChangeDetailObjArr;\r\n\r\n        const conditionMap = new Map();\r\n        const exclusionMap = new Map();\r\n        myStatusChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        myTalentChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        // conditionMap.delete('命ノ星座');\r\n        conditionMap.forEach((value, key) => {\r\n            if (value && Array.isArray(value)) {\r\n                if (!value[0].startsWith('required_')) {\r\n                    conditionMap.set(key, ['', ...value]);\r\n                }\r\n            }\r\n        });\r\n        result['条件'] = conditionMap;\r\n        result['排他'] = exclusionMap;\r\n\r\n        characterInput.damageDetailMyCharacter = result;\r\n    } catch (error) {\r\n        console.error(characterInput, result);\r\n        // throw error;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function makeDamageDetailObjArrObjWeapon(characterInput: any) {\r\n    const result = {} as any;\r\n    try {\r\n        const name = characterInput.weapon;\r\n        const weaponMaster = characterInput.weaponMaster;\r\n        if (!name || !weaponMaster) return result;\r\n\r\n        let myTalentDetail;\r\n        const myLevel = characterInput.武器精錬ランク;\r\n        const myInputCategory = '武器';\r\n\r\n        const myStatusChangeDetailObjArr = [] as any[];\r\n        const myTalentChangeDetailObjArr = [] as any[];\r\n\r\n        if ('武器スキル' in weaponMaster) {\r\n            myTalentDetail = weaponMaster['武器スキル'];\r\n            result['その他'] = makeDamageDetailObjArr(myTalentDetail, myLevel, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n        }\r\n\r\n        result[CHANGE_KIND_STATUS] = myStatusChangeDetailObjArr;\r\n        result[CHANGE_KIND_TALENT] = myTalentChangeDetailObjArr;\r\n\r\n        const conditionMap = new Map();\r\n        const exclusionMap = new Map();\r\n        myStatusChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            let condition = detailObj['条件'];\r\n            if (_.isPlainObject(condition) && myLevel in condition) {\r\n                condition = condition[myLevel];\r\n            }\r\n            makeConditionExclusionMapFromStr(condition, conditionMap, exclusionMap);\r\n        });\r\n        myTalentChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            let condition = detailObj['条件'];\r\n            if (_.isPlainObject(condition) && myLevel in condition) {\r\n                condition = condition[myLevel];\r\n            }\r\n            makeConditionExclusionMapFromStr(condition, conditionMap, exclusionMap);\r\n        });\r\n        conditionMap.forEach((value, key) => {\r\n            if (value && Array.isArray(value)) {\r\n                if (!value[0].startsWith('required_')) {\r\n                    conditionMap.set(key, ['', ...value]);\r\n                }\r\n            }\r\n        });\r\n        result['条件'] = conditionMap;\r\n        result['排他'] = exclusionMap;\r\n\r\n        characterInput.damageDetailMyWeapon = result;\r\n    } catch (error) {\r\n        console.error(characterInput, result);\r\n        // throw error;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function makeDamageDetailObjArrObjArtifactSets(characterInput: any) {\r\n    const result = [] as any;\r\n    try {\r\n        let myTalentDetail;\r\n        const myInputCategory = '聖遺物セット効果';\r\n\r\n        const myStatusChangeDetailObjArr = [] as any[];\r\n        const myTalentChangeDetailObjArr = [] as any[];\r\n\r\n        const artifactSetMasters = characterInput.artifactSetMasters.filter((s: any) => s);\r\n\r\n        if (artifactSetMasters.length > 0) {\r\n            const damageDetailObjArr = [] as TDamageDetailObj[];\r\n            if ('2セット効果' in artifactSetMasters[0]) {\r\n                myTalentDetail = artifactSetMasters[0]['2セット効果'];\r\n                damageDetailObjArr.push(...makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory));\r\n            }\r\n            if (artifactSetMasters.length == 2) {\r\n                if (artifactSetMasters[0] == artifactSetMasters[1]) {\r\n                    myTalentDetail = artifactSetMasters[0]['4セット効果'];\r\n                    damageDetailObjArr.push(...makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory));\r\n                } else {\r\n                    myTalentDetail = artifactSetMasters[1]['2セット効果'];\r\n                    damageDetailObjArr.push(...makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory));\r\n                }\r\n            }\r\n            result['その他'] = damageDetailObjArr;\r\n        }\r\n\r\n        result[CHANGE_KIND_STATUS] = myStatusChangeDetailObjArr;\r\n        result[CHANGE_KIND_TALENT] = myTalentChangeDetailObjArr;\r\n\r\n        const conditionMap = new Map();\r\n        const exclusionMap = new Map();\r\n        myStatusChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        myTalentChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        conditionMap.forEach((value, key) => {\r\n            if (value && Array.isArray(value)) {\r\n                if (!value[0].startsWith('required_')) {\r\n                    conditionMap.set(key, ['', ...value]);\r\n                }\r\n            }\r\n        });\r\n        result['条件'] = conditionMap;\r\n        result['排他'] = exclusionMap;\r\n\r\n        characterInput.damageDetailMyArtifactSets = result;\r\n    } catch (error) {\r\n        console.error(characterInput, result);\r\n        // throw error;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function makeDamageDetailObjArrObjElementalResonance(characterInput: any) {\r\n    const result = [] as any;\r\n    try {\r\n        const myInputCategory = '元素共鳴';\r\n        const damageDetailObjArr = [] as TDamageDetailObj[];\r\n        const myStatusChangeDetailObjArr = [] as any[];\r\n        const myTalentChangeDetailObjArr = [] as any[];\r\n        for (const myTalentDetail of ELEMENTAL_RESONANCE_MASTER_LIST) {\r\n            const workObj = _.cloneDeep(myTalentDetail);\r\n            if (workObj.詳細) {\r\n                workObj.詳細.forEach((detailObj: TAnyObject) => {\r\n                    detailObj.名前 = myTalentDetail.key;\r\n                });\r\n            }\r\n            damageDetailObjArr.push(...makeDamageDetailObjArr(workObj, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory));\r\n        }\r\n        result['その他'] = damageDetailObjArr;\r\n        result[CHANGE_KIND_STATUS] = myStatusChangeDetailObjArr;\r\n        result[CHANGE_KIND_TALENT] = myTalentChangeDetailObjArr;\r\n\r\n        const conditionMap = new Map();\r\n        const exclusionMap = new Map();\r\n        myStatusChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        myTalentChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        conditionMap.forEach((value, key) => {\r\n            if (value && Array.isArray(value)) {\r\n                if (!value[0].startsWith('required_')) {\r\n                    conditionMap.set(key, ['', ...value]);\r\n                }\r\n            }\r\n        });\r\n        result['条件'] = conditionMap;\r\n        result['排他'] = exclusionMap;\r\n\r\n        characterInput.damageDetailElementalResonance = result;\r\n    } catch (error) {\r\n        console.error(characterInput, result);\r\n        // throw error;\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction makeDetailObj(\r\n    detailObj: any,\r\n    level: number | null,\r\n    defaultKind: string | null,\r\n    defaultElement: string | null,\r\n    inputCategory: string | null,\r\n    opt_condition?: string,\r\n): TDamageDetailObj {\r\n    let my種類 = '種類' in detailObj ? detailObj['種類'] : defaultKind;\r\n    let my対象 = null;\r\n    if (my種類.indexOf('.') != -1) {\r\n        my対象 = my種類.substring(my種類.indexOf('.') + 1);\r\n        my種類 = my種類.substring(0, my種類.indexOf('.'));\r\n    } else if ('対象' in detailObj) {\r\n        my対象 = detailObj['対象'];\r\n    }\r\n    let my数値 = null;\r\n    if ('数値' in detailObj) {\r\n        my数値 = detailObj['数値'];\r\n        if (isNumber(my数値) || _.isString(my数値)) {\r\n            // nop\r\n        } else if (_.isPlainObject(my数値) && level && level in my数値) { // キャラクター|武器のサブステータス\r\n            my数値 = my数値[level];\r\n        } else {\r\n            console.error(detailObj, level, defaultKind, defaultElement, my数値);\r\n        }\r\n        if (DAMAGE_CATEGORY_ARRAY.includes(my種類 + 'ダメージ') || my種類.endsWith('ダメージ')) {\r\n            my数値 = analyzeFormulaStr(my数値, '攻撃力');\r\n        } else {\r\n            my数値 = analyzeFormulaStr(my数値, my種類);\r\n        }\r\n    }\r\n    let my条件 = null;\r\n    if ('条件' in detailObj) {\r\n        if (_.isPlainObject(detailObj['条件']) && level && level in detailObj['条件']) {  // 武器は精錬ランクによって数値を変えたいときがあるので\r\n            my条件 = detailObj['条件'][level];\r\n        } else {\r\n            my条件 = detailObj['条件'];\r\n        }\r\n    } else {\r\n        my条件 = opt_condition ?? null;\r\n    }\r\n    let my上限 = null;\r\n    if ('上限' in detailObj) {\r\n        my上限 = detailObj['上限'];\r\n        if (_.isPlainObject(my上限) && level && level in my上限) {   // 草薙の稲光\r\n            my上限 = my上限[level];\r\n        }\r\n        my上限 = analyzeFormulaStr(my上限);\r\n    }\r\n    let my下限 = null;\r\n    if ('下限' in detailObj) {  // ニィロウ\r\n        my下限 = detailObj['下限'];\r\n        if (_.isPlainObject(my下限) && level && level in my下限) {\r\n            my下限 = my下限[level];\r\n        }\r\n        my下限 = analyzeFormulaStr(my下限);\r\n    }\r\n    const resultObj: TDamageDetailObj = {\r\n        名前: detailObj['名前'],\r\n        種類: my種類,\r\n        元素: '元素' in detailObj ? detailObj['元素'] : defaultElement,\r\n        数値: my数値,\r\n        条件: my条件,\r\n        対象: my対象,\r\n        上限: my上限,\r\n        下限: my下限,\r\n        HIT数: 'HIT数' in detailObj ? detailObj['HIT数'] : null,\r\n        ダメージバフ: 'ダメージバフ' in detailObj ? detailObj['ダメージバフ'] : null,\r\n        元素付与無効: '元素付与無効' in detailObj ? detailObj['元素付与無効'] : inputCategory == '武器',\r\n        除外条件: '除外条件' in detailObj ? detailObj['除外条件'] : null,\r\n        適用条件: '適用条件' in detailObj ? detailObj['適用条件'] : null,\r\n    }\r\n    return resultObj;\r\n}\r\n\r\nexport function getChangeKind(kind: string) {\r\n    if (kind in ステータスTEMPLATE\r\n        || new RegExp('[自全].+(バフ|アップ)').exec(kind)\r\n        || ['その他ダメージアップ'].includes(kind)  // for 放浪者\r\n        || new RegExp('敵?[自全]元素耐性').exec(kind)\r\n        || ['別枠乗算', '回復量アップ'].includes(kind)\r\n        || ['敵防御力'].includes(kind)\r\n        || ['発動回数', '使用回数'].includes(kind)\r\n        || ['攻撃速度', '通常攻撃速度', '重撃速度', '移動速度'].includes(kind)\r\n        || kind.endsWith('継続時間')\r\n        || kind.endsWith('クールタイム')\r\n        || kind.endsWith('会心率')\r\n        || kind.endsWith('会心ダメージ')\r\n    ) {\r\n        return 'STATUS';\r\n    } else if (kind.endsWith('強化')\r\n        || kind.endsWith('付与')\r\n        || kind == '防御無視' ||\r\n        kind == '固有変数'\r\n    ) {   // ex.元素爆発強化,氷元素付与\r\n        return 'TALENT';\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport function makeDamageDetailObjArr(\r\n    talentDataObj: any,\r\n    level: number | null,\r\n    defaultKind: string | null,\r\n    defaultElement: string | null,\r\n    statusChangeDetailObjArr: any[],\r\n    talentChangeDetailObjArr: any[],\r\n    inputCategory: string,\r\n    opt_condition?: string,\r\n): TDamageDetailObj[] {\r\n    const resultArr = [] as any[];\r\n    if (!('詳細' in talentDataObj)) return resultArr;\r\n\r\n    talentDataObj['詳細'].forEach((detailObj: TAnyObject) => {\r\n        const resultObj = makeDetailObj(detailObj, level, defaultKind, defaultElement, inputCategory, opt_condition);\r\n        const my種類 = resultObj.種類 as string;\r\n        if (statusChangeDetailObjArr != null && getChangeKind(my種類) == 'STATUS') {\r\n            resultObj['元素'] = '元素' in detailObj ? detailObj['元素'] : null;\r\n            statusChangeDetailObjArr.push(resultObj);\r\n            return;\r\n        }\r\n        if (talentChangeDetailObjArr != null && getChangeKind(my種類) == 'TALENT') {\r\n            resultObj['元素'] = '元素' in detailObj ? detailObj['元素'] : null;\r\n            talentChangeDetailObjArr.push(resultObj);\r\n            return;\r\n        }\r\n        resultArr.push(resultObj);\r\n    });\r\n\r\n    return resultArr;\r\n}\r\n\r\nexport function makeTeamOptionDetailObjArr(\r\n    detailObjArr: any[],\r\n): TDamageDetailObj[] {\r\n    const resultArr = [] as any[];\r\n\r\n    detailObjArr.forEach((detailObj: { [x: string]: any; }) => {\r\n        const resultObj = makeDetailObj(detailObj, null, null, null, null);\r\n        if (resultObj) {\r\n            resultArr.push(resultObj);\r\n        }\r\n    });\r\n\r\n    return resultArr;\r\n}\r\n\r\n// 条件名\r\n// 条件名@prefix数値postfix\r\n// 条件名@prefix数値(From)-数値(To)postfix\r\n// 条件名@prefix数値1,数値2,数値3postfix\r\n// 条件名=prefix数値postfix\r\n// 条件名@文字列\r\n// 条件名=文字列\r\n// 条件名={min=数値|文字列,max=数値|文字列,step=数値}\r\n// OR条件   条件A|条件B\r\n// AND条件  条件A&条件B\r\n// 排他条件 条件A^条件B\r\nexport function makeConditionExclusionMapFromStr(\r\n    conditionStr: string,\r\n    conditionMap: Map<string, string[] | null | object>,\r\n    exclusionMap: Map<string, string[] | null>\r\n) {\r\n    // 排他条件を抽出します\r\n    let exclusionCond: string | null = null;\r\n    let myCondStrArr = conditionStr.split('^');\r\n    if (myCondStrArr.length > 1) {\r\n        exclusionCond = myCondStrArr[1];\r\n    }\r\n    const myCondStr = myCondStrArr[0];\r\n    if (myCondStr.indexOf('|') != -1) {\r\n        // OR条件 for 申鶴\r\n        myCondStrArr = myCondStr.split('|');\r\n        myCondStrArr.forEach((myCondStr: string) => {\r\n            makeConditionExclusionMapFromStrSub(myCondStr, conditionMap, exclusionMap, exclusionCond);\r\n        });\r\n    } else {\r\n        // AND条件\r\n        myCondStrArr = myCondStr.split('&');\r\n        myCondStrArr.forEach((myCondStr: string) => {\r\n            makeConditionExclusionMapFromStrSub(myCondStr, conditionMap, exclusionMap, exclusionCond);\r\n        });\r\n    }\r\n}\r\n\r\nexport const NUMBER_CONDITION_VALUE_RE = /^\\s*{.+}\\s*$/;\r\n\r\nfunction makeConditionExclusionMapFromStrSub(\r\n    conditionStr: string,\r\n    conditionMap: Map<string, string[] | null | object>,\r\n    exclusionMap: Map<string, string[] | null>,\r\n    exclusion: string | null\r\n) {\r\n    const myCondStrArr = conditionStr.split(/[@=]/);\r\n    const myName = myCondStrArr[0];\r\n    if (myCondStrArr.length == 1) {\r\n        pushToMapValueArray(conditionMap, myName, null);\r\n    } else if (myCondStrArr.length == 2) {\r\n        if (NUMBER_CONDITION_VALUE_RE.test(myCondStrArr[1])) {\r\n            try {\r\n                const workObj = JSON.parse(myCondStrArr[1]);\r\n                if ('min' in workObj) { // minは必須\r\n                    const conditionObj = {\r\n                        min: workObj.min,\r\n                        max: workObj.max,\r\n                        step: workObj.step,\r\n                    };\r\n                    pushToMapValueArray(conditionMap, myName, conditionObj);\r\n                } else {\r\n                    console.error(conditionStr, conditionMap, exclusionMap, exclusion);\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n                console.error(conditionStr, conditionMap, exclusionMap, exclusion);\r\n            }\r\n        } else if (myCondStrArr[1].indexOf(',') != -1) {\r\n            const re = new RegExp('([^0-9]*?)([\\\\+\\\\-0-9\\\\.,]+)(.*)');  // 表現可能:-10,+60%\r\n            const reRet = re.exec(myCondStrArr[1]);\r\n            if (reRet) {\r\n                const prefix = reRet[1];\r\n                const condValueArr = reRet[2].split(',');\r\n                const postfix = reRet[3];\r\n                condValueArr.forEach(value => {\r\n                    pushToMapValueArray(conditionMap, myName, prefix + value + postfix);\r\n                });\r\n            }\r\n        } else if (myCondStrArr[1].indexOf('-') != -1) {\r\n            const re = new RegExp('([^0-9\\\\.]*)(-?[0-9\\\\.]+)-(-?[0-9\\\\.]+)(.*)');   // 数値部に+は含められない。prefixには含められる。\r\n            const re2 = new RegExp('/([0-9\\\\.]+)(.*)');\r\n            const reRet = re.exec(myCondStrArr[1]);\r\n            if (reRet) {\r\n                const prefix = reRet[1];\r\n                const rangeStart = Number(reRet[2]);\r\n                const rangeEnd = Number(reRet[3]);\r\n                let step = rangeStart;\r\n                let postfix = reRet[4];\r\n                if (postfix) {\r\n                    const re2Ret = re2.exec(postfix);\r\n                    if (re2Ret) {\r\n                        step = Number(re2Ret[1]);\r\n                        postfix = re2Ret[2];\r\n                    }\r\n                }\r\n                for (let i = rangeStart; i < rangeEnd; i = addDecimal(i, step, rangeEnd)) {\r\n                    pushToMapValueArray(conditionMap, myName, prefix + String(i) + postfix);\r\n                }\r\n                pushToMapValueArray(conditionMap, myName, prefix + String(rangeEnd) + postfix);\r\n            } else {\r\n                pushToMapValueArray(conditionMap, myName, myCondStrArr[1]);\r\n            }\r\n        } else {\r\n            pushToMapValueArray(conditionMap, myName, myCondStrArr[1]);\r\n        }\r\n    } else {\r\n        console.error(conditionStr, conditionMap, exclusionMap, exclusion);\r\n    }\r\n    if (exclusion) {\r\n        exclusion.split(',').forEach(e => {\r\n            pushToMapValueArray(exclusionMap, myName, e);\r\n        });\r\n    }\r\n}\r\n\r\nexport function setupConditionValues(\r\n    conditionInput: TConditionInput,\r\n    characterInput: TCharacterInput,\r\n    optionInput: TOptionInput,\r\n) {\r\n    try {\r\n        const conditionValues = conditionInput.conditionValues;\r\n        const checkboxList = conditionInput.checkboxList as TCheckboxEntry[];\r\n        const selectList = conditionInput.selectList as TSelectEntry[];\r\n        const numberList = conditionInput.numberList as TNumberEntry[];\r\n\r\n        checkboxList.splice(0, checkboxList.length);\r\n        selectList.splice(0, selectList.length);\r\n\r\n        const masters = [characterInput.characterMaster, characterInput.weaponMaster, ...characterInput.artifactSetMasters];\r\n        for (const master of masters.filter(s => s)) {\r\n            if ('オプション初期値' in master) {\r\n                for (const key of Object.keys((master as any)['オプション初期値'])) {\r\n                    if (!(key in conditionValues)) {\r\n                        conditionValues[key] = (master as any)['オプション初期値'][key];\r\n                    }\r\n                }\r\n            }\r\n            // 聖遺物セット効果のオプション初期値は変な位置にあります\r\n            if ('4セット効果' in master && 'オプション初期値' in (master as any)['4セット効果']) {\r\n                for (const key of Object.keys((master as any)['4セット効果']['オプション初期値'])) {\r\n                    if (!(key in conditionValues)) {\r\n                        conditionValues[key] = (master as any)['4セット効果']['オプション初期値'][key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const myDamageDetail of [characterInput.damageDetailMyCharacter, characterInput.damageDetailMyWeapon, characterInput.damageDetailMyArtifactSets]) {\r\n            if (myDamageDetail) {\r\n                const conditionMap: Map<string, string[] | null | object> = myDamageDetail.条件;\r\n                const exclusionMap: Map<string, string[] | null> = myDamageDetail.排他;\r\n\r\n                conditionMap.forEach((value: string[] | null | object, key: string) => {\r\n                    if (value == null) {\r\n                        if (checkboxList.filter(s => s.name == key).length == 0) {\r\n                            checkboxList.push({ name: key });\r\n                        }\r\n                    } else if (Array.isArray(value)) {\r\n                        if (selectList.filter(s => s.name == key).length == 0) {\r\n                            const required = value[0].startsWith(\"required_\");\r\n                            selectList.push({\r\n                                name: key,\r\n                                options: value,\r\n                                required: required,\r\n                            });\r\n                        }\r\n                    } else if (_.isPlainObject(value)) {\r\n                        if (numberList.filter(s => s.name == key).length == 0) {\r\n                            const entry = {\r\n                                name: key,\r\n                                min: (value as any).min,\r\n                                max: (value as any).max,\r\n                                step: (value as any).step,\r\n                            };\r\n                            numberList.push(entry);\r\n                        }\r\n                    }\r\n                    if (key in conditionValues && conditionValues[key] != null) {\r\n                        const exclusions = exclusionMap.get(key);\r\n                        if (exclusions) {\r\n                            for (const exclusion of exclusions) {\r\n                                if (exclusion in conditionValues) {\r\n                                    const conditionValue = conditionMap.get(exclusion);\r\n                                    if (conditionValue === null) {  // checkbox\r\n                                        conditionValues[exclusion] = false;\r\n                                    } else if (Array.isArray(value)) {    // select\r\n                                        conditionValues[exclusion] = 0;\r\n                                    } else if (_.isPlainObject(value)) {    // number\r\n                                        const minValue = (value as any).min;\r\n                                        if (isNumber(minValue)) {\r\n                                            conditionValues[exclusion] = minValue;\r\n                                        } else {\r\n                                            conditionValues[exclusion] = 0;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (value === null) {   // checkbox\r\n                            let checked = true;\r\n                            const arr = exclusionMap.get(key);\r\n                            if (arr && arr.filter(s => conditionValues[s]).length > 0) {\r\n                                checked = false;\r\n                            }\r\n                            conditionValues[key] = checked;\r\n                        } else if (Array.isArray(value)) {   // select\r\n                            let selectedIndex = value.length - 1;\r\n                            const arr = exclusionMap.get(key);\r\n                            if (arr && arr.filter(s => conditionValues[s]).length > 0) {\r\n                                selectedIndex = 0;\r\n                            }\r\n                            conditionValues[key] = selectedIndex;\r\n                        } else if (_.isPlainObject(value)) {    // number\r\n                            const minValue = (value as any).min;\r\n                            if (isNumber(minValue)) {\r\n                                conditionValues[key] = minValue;\r\n                            } else {\r\n                                conditionValues[key] = 0;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (optionInput.elementalResonance) {\r\n            const conditionMap: Map<string, any[] | null | object> = new Map();\r\n            const exclusionMap: Map<string, string[] | null> = new Map();\r\n            for (const key of Object.keys(ELEMENTAL_RESONANCE_MASTER)) {\r\n                if (!optionInput.elementalResonance.conditionValues[key]) continue;\r\n                const master = (ELEMENTAL_RESONANCE_MASTER as any)[key];\r\n                if (!master.詳細) continue;\r\n                for (const detailObj of master.詳細) {\r\n                    if (!detailObj.条件) continue;\r\n                    makeConditionExclusionMapFromStr(detailObj.条件, conditionMap, exclusionMap);\r\n                }\r\n            }\r\n            conditionMap.forEach((value: string[] | null | object, key: string) => {\r\n                if (value == null) {\r\n                    if (checkboxList.filter(s => s.name == key).length == 0) {\r\n                        checkboxList.push({ name: key });\r\n                    }\r\n                } else if (Array.isArray(value)) {\r\n                    if (selectList.filter(s => s.name == key).length == 0) {\r\n                        const required = value[0].startsWith(\"required_\");\r\n                        selectList.push({\r\n                            name: key,\r\n                            options: value,\r\n                            required: required,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                if (key in conditionValues && conditionValues[key] != null) {\r\n                    const exclusions = exclusionMap.get(key);\r\n                    if (exclusions) {\r\n                        for (const exclusion of exclusions) {\r\n                            if (exclusion in conditionValues) {\r\n                                const conditionValue = conditionMap.get(exclusion);\r\n                                if (conditionValue === null) {  // checkbox\r\n                                    conditionValues[exclusion] = false;\r\n                                } else if (Array.isArray(value)) {    // select\r\n                                    conditionValues[exclusion] = 0;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (value === null) {   // checkbox\r\n                        let checked = true;\r\n                        const arr = exclusionMap.get(key);\r\n                        if (arr && arr.filter(s => conditionValues[s]).length > 0) {\r\n                            checked = false;\r\n                        }\r\n                        conditionValues[key] = checked;\r\n                    } else if (Array.isArray(value)) {   // select\r\n                        let selectedIndex = value.length - 1;\r\n                        const arr = exclusionMap.get(key);\r\n                        if (arr && arr.filter(s => conditionValues[s]).length > 0) {\r\n                            selectedIndex = 0;\r\n                        }\r\n                        conditionValues[key] = selectedIndex;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    } catch (error) {\r\n        console.error(conditionInput, characterInput);\r\n        // throw error;\r\n    }\r\n}\r\n\r\nexport function getStatValue(stat: string, statsObj: TStats) {\r\n    let result;\r\n    if (stat in statsObj) {\r\n        result = statsObj[stat];\r\n    } else {\r\n        const re = /(.+)X([0-7])$/;\r\n        const reRet = re.exec(stat);\r\n        if (reRet) {\r\n            if (reRet[1] in statsObj) {\r\n                result = statsObj[reRet[1]];\r\n                let n = Number(reRet[2]);\r\n                for (let i = 1; i <= 3; i++) {\r\n                    if ((n % 2) == 1) {\r\n                        const vStat: string = reRet[1] + 'V' + i;\r\n                        if (vStat in statsObj) {\r\n                            result -= statsObj[vStat];\r\n                        }\r\n                    }\r\n                    n = Math.trunc(n / 2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (result === undefined) {\r\n        console.error(stat, statsObj);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function updateNumberConditionValues(\r\n    conditionInput: TConditionInput,\r\n    characterInput: TCharacterInput,\r\n    statsObj: TStats,\r\n) {\r\n    for (const myDamageDetail of [characterInput.damageDetailMyCharacter, characterInput.damageDetailMyWeapon, characterInput.damageDetailMyArtifactSets]) {\r\n        if (myDamageDetail) {\r\n            const conditionMap: Map<string, string[] | null | object> = myDamageDetail.条件;\r\n            conditionMap.forEach((value: string[] | null | object, key: string) => {\r\n                if (_.isPlainObject(value)) {\r\n                    const numberEntryArr = conditionInput.numberList.filter(s => s.name == key);\r\n                    if (numberEntryArr.length > 0) {\r\n                        let minValue = (value as any).min;\r\n                        let maxValue = (value as any).max;\r\n                        if (_.isString(minValue) || _.isString(maxValue)) {\r\n                            if (_.isString(minValue)) {\r\n                                minValue = getStatValue(minValue, statsObj);\r\n                            }\r\n                            if (_.isString(maxValue)) {\r\n                                maxValue = getStatValue(maxValue, statsObj);\r\n                            }\r\n                            numberEntryArr[0].min = minValue;\r\n                            numberEntryArr[0].max = maxValue;\r\n                            if (key in conditionInput.conditionValues) {\r\n                                const value = conditionInput.conditionValues[key];\r\n                                if (_.isNumber(value)) {\r\n                                    if (value < minValue) {\r\n                                        conditionInput.conditionValues[key] = minValue;\r\n                                    } else if (maxValue !== undefined && value > maxValue) {\r\n                                        conditionInput.conditionValues[key] = maxValue;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction pushToMapValueArray(map: Map<any, any>, key: any, value: any) {\r\n    if (value == null) {    // checkbox\r\n        if (!map.has(key)) {\r\n            map.set(key, null);\r\n        }\r\n    } else if (_.isString(value)) { // select\r\n        if (map.has(key)) {\r\n            const oldValue = map.get(key);\r\n            if (oldValue == null) {\r\n                map.set(key, [value]);\r\n            } else if (Array.isArray(oldValue)) {\r\n                if (!oldValue.includes(value)) {\r\n                    map.get(key).push(value);\r\n                }\r\n            } else {\r\n                console.error(map, key, value);\r\n            }\r\n        } else {\r\n            map.set(key, [value]);\r\n        }\r\n    } else if (_.isPlainObject(value)) {    // number\r\n        map.set(key, value);\r\n    }\r\n}\r\n\r\nfunction getDecimalLength(value: number): number {\r\n    const arr = ('' + value).split('.');\r\n    return arr.length > 1 ? arr[1].length : 0;\r\n}\r\n\r\nexport function multiplyDecimal(value1: number, value2: number): number {\r\n    const decimalLength = getDecimalLength(value1) + getDecimalLength(value2);\r\n    const intValue1 = Number(('' + value1).replace('.', ''));\r\n    const intValue2 = Number(('' + value2).replace('.', ''));\r\n    const result = (intValue1 * intValue2) / Math.pow(10, decimalLength);\r\n    return Number(result);\r\n}\r\n\r\nexport function addDecimal(value1: number, value2: number, opt_max?: number): number {\r\n    const k = Math.pow(10, Math.max(getDecimalLength(value1), getDecimalLength(value2)));\r\n    let result = (multiplyDecimal(value1, k) + multiplyDecimal(value2, k)) / k;\r\n    if (opt_max != undefined) {\r\n        result = Math.min(result, opt_max);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction analyzeFormulaStr(\r\n    formulaStr: number | string,\r\n    opt_defaultItem: string | null = null\r\n) {\r\n    const resultArr = [] as any[];\r\n    const re = new RegExp('([\\\\+\\\\-\\\\*/]?)([^\\\\+\\\\-\\\\*/]+)(.*)');\r\n    let workStr = String(formulaStr);\r\n    // eslint-disable-next-line no-constant-condition\r\n    while (true) {\r\n        const reRet = re.exec(workStr);\r\n        if (!reRet) {\r\n            resultArr.push(workStr);\r\n            break;\r\n        }\r\n        if (reRet[1]) { // + - * /\r\n            resultArr.push(reRet[1]);\r\n        }\r\n        resultArr.push(analyzeFormulaStrSub(reRet[2], opt_defaultItem));\r\n        if (!reRet[3]) {\r\n            break;\r\n        }\r\n        workStr = reRet[3];\r\n    }\r\n    return resultArr;\r\n}\r\n\r\nfunction analyzeFormulaStrSub(\r\n    formulaStr: string,\r\n    opt_defaultItem: string | null = null\r\n) {\r\n    const resultArr = [] as any;\r\n    if (isNumber(formulaStr)) {\r\n        resultArr.push(Number(formulaStr));\r\n    } else {\r\n        const strArr = (formulaStr as string).split('%');\r\n        if (strArr.length == 1) {\r\n            resultArr.push(strArr[0]);\r\n        } else {\r\n            resultArr.push(Number(strArr[0]) / 100);\r\n            resultArr.push('*');\r\n            if (strArr[1].length > 0) {\r\n                resultArr.push(strArr[1]);\r\n            } else if (opt_defaultItem != null) {\r\n                resultArr.push(opt_defaultItem);\r\n            }\r\n        }\r\n    }\r\n    return resultArr;\r\n}\r\n\r\nexport function makeSharedata(savedata: TAnyObject) {\r\n    const sharedataArr = [] as any[];\r\n\r\n    let character: TCharacterKey;\r\n    let weaponType: TWeaponTypeKey;\r\n\r\n    キャラクター構成PROPERTY_MAP.forEach((value, key) => {\r\n        let newValue = savedata[key];\r\n        let myBasename;\r\n        switch (key) {\r\n            case 'キャラクター':\r\n                character = newValue as TCharacterKey;\r\n                myBasename = basename(CHARACTER_MASTER[character]['import']);\r\n                newValue = myBasename.split('_')[myBasename.split('_').length - 1];\r\n                break;\r\n            case '武器':\r\n                weaponType = CHARACTER_MASTER[character]['武器'] as TWeaponTypeKey;\r\n                myBasename = basename((WEAPON_MASTER as any)[weaponType][newValue]['import']);\r\n                newValue = myBasename.split('_')[myBasename.split('_').length - 1];\r\n                break;\r\n            case '聖遺物セット効果1':\r\n            case '聖遺物セット効果2':\r\n                if (newValue == 'NONE') {\r\n                    newValue = '';  // 聖遺物セット効果なし\r\n                } else {\r\n                    myBasename = basename(ARTIFACT_SET_MASTER[newValue as TArtifactSetKey]['image']);\r\n                    newValue = myBasename.split('_')[myBasename.split('_').length - 1];\r\n                }\r\n                break;\r\n            case '聖遺物メイン効果1':\r\n            case '聖遺物メイン効果2':\r\n            case '聖遺物メイン効果3':\r\n            case '聖遺物メイン効果4':\r\n            case '聖遺物メイン効果5':\r\n                if (newValue) {\r\n                    newValue = newValue.split('_')[0] + '_' + ARTIFACT_STAT_JA_EN_ABBREV_MAP.get(newValue.split('_')[1]);\r\n                }\r\n                break;\r\n            case '聖遺物優先するサブ効果1':\r\n            case '聖遺物優先するサブ効果2':\r\n            case '聖遺物優先するサブ効果3':\r\n                if (newValue) {\r\n                    newValue = ARTIFACT_STAT_JA_EN_ABBREV_MAP.get(newValue);\r\n                }\r\n                break;\r\n        }\r\n        sharedataArr.push(newValue);\r\n    });\r\n    Object.keys(savedata).forEach(key => {\r\n        if (!キャラクター構成PROPERTY_MAP.has(key)) {\r\n            sharedataArr.push(key + '=' + savedata[key]);\r\n        }\r\n    });\r\n\r\n    return sharedataArr.join(',');\r\n}\r\n\r\nfunction openTwitter(text: string, url: string, opt_hashtags?: string, opt_via?: string) {\r\n    const baseUrl = 'https://twitter.com/intent/tweet?';\r\n    const params = new URLSearchParams();\r\n    params.append('text', text);\r\n    params.append('url', url);\r\n    if (opt_hashtags) {\r\n        params.append('hashtags', opt_hashtags);\r\n    }\r\n    if (opt_via) {\r\n        params.append('via', opt_via);\r\n    }\r\n    const query = params.toString();\r\n    const shareUrl = `${baseUrl}${query}`;\r\n    console.log(params);\r\n    console.log(shareUrl);\r\n    window.open(shareUrl);\r\n}\r\n\r\nexport function shareByTwitter(\r\n    characterInput: TCharacterInput,\r\n    artifactDetailInput: TArtifactDetailInput,\r\n    conditionInput: TConditionInput\r\n) {\r\n    const savedata = makeSavedata(characterInput, artifactDetailInput, conditionInput);\r\n    const sharedata = makeSharedata(savedata);\r\n\r\n    const text = characterInput.buildname;\r\n    const encoded = encodeURI(sharedata);\r\n    const url = 'https://asagume.github.io/gencalc/' + '?allin=' + encoded;\r\n\r\n    openTwitter(text, url);\r\n}\r\n\r\nexport function getMaxConstellation(characterMaster: TCharacterDetail) {\r\n    let max = 0;\r\n    if ('命ノ星座' in characterMaster) {\r\n        max = Object.keys(characterMaster.命ノ星座).length;\r\n    }\r\n    return max;\r\n}\r\n\r\nexport function getMaxTalentLevel(characterMaster: TCharacterDetail, key: string) {\r\n    let max = 10;\r\n    if (key in characterMaster) {\r\n        const talentObj = (characterMaster as any)[key];\r\n        if (\"詳細\" in talentObj) {\r\n            for (const detailObj of talentObj.詳細) {\r\n                if (\"数値\" in detailObj && _.isPlainObject(detailObj.数値)) {\r\n                    const work = Object.keys(detailObj.数値).length;\r\n                    if (max < work) max = work;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return max;\r\n}\r\n\r\nexport function pushBuildinfoToSession(character: TCharacterKey | string, buildname?: string, builddata?: any, teammembers?: string[]) {\r\n    sessionStorage.setItem('character', character);\r\n    if (buildname) {\r\n        sessionStorage.setItem('buildname', buildname);\r\n    }\r\n    if (builddata) {\r\n        sessionStorage.setItem('builddata', JSON.stringify(builddata));\r\n    }\r\n    if (teammembers) {\r\n        sessionStorage.setItem('teammembers', JSON.stringify(teammembers));\r\n    }\r\n}\r\n\r\nexport function popBuildinfoFromSession() {\r\n    const result: [string | undefined, string | undefined, TAnyObject | undefined, string[] | undefined] = [undefined, undefined, undefined, undefined];\r\n    const character = sessionStorage.getItem('character');\r\n    if (character) {\r\n        result[0] = character;\r\n        const buildname = sessionStorage.getItem('buildname');\r\n        if (buildname) {\r\n            result[1] = buildname;\r\n        }\r\n        const builddata = sessionStorage.getItem('builddata');\r\n        if (builddata) {\r\n            result[2] = JSON.parse(builddata);\r\n        }\r\n        const teammembers = sessionStorage.getItem('teammembers');\r\n        if (teammembers) {\r\n            result[3] = JSON.parse(teammembers);\r\n        }\r\n        console.log(character, buildname, builddata, teammembers);\r\n    }\r\n    sessionStorage.removeItem('character');\r\n    sessionStorage.removeItem('builddata');\r\n    sessionStorage.removeItem('buildname');\r\n    sessionStorage.removeItem('teammembers');\r\n    return result;\r\n}\r\n","import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, resolveComponent as _resolveComponent, createVNode as _createVNode, vShow as _vShow, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-08647220\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"artifact\" }\nconst _hoisted_2 = { class: \"artifact\" }\nconst _hoisted_3 = {\n  class: \"left-column\",\n  style: {\"width\":\"45%\"}\n}\nconst _hoisted_4 = { class: \"control\" }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"material-symbols-outlined\"\n}\nconst _hoisted_6 = {\n  key: 1,\n  class: \"material-symbols-outlined\"\n}\nconst _hoisted_7 = {\n  key: 0,\n  class: \"material-symbols-outlined\"\n}\nconst _hoisted_8 = {\n  key: 1,\n  class: \"material-symbols-outlined\"\n}\nconst _hoisted_9 = { class: \"with-tooltip\" }\nconst _hoisted_10 = [\"src\", \"alt\"]\nconst _hoisted_11 = { class: \"tooltip\" }\nconst _hoisted_12 = {\n  key: 0,\n  class: \"edit-mainstat\"\n}\nconst _hoisted_13 = [\"value\"]\nconst _hoisted_14 = {\n  key: 1,\n  class: \"mainstat\",\n  style: {\"margin\":\"1px 0\"}\n}\nconst _hoisted_15 = { style: {\"width\":\"55%\"} }\nconst _hoisted_16 = { class: \"artifact-substat\" }\nconst _hoisted_17 = { class: \"right\" }\nconst _hoisted_18 = [\"onUpdate:modelValue\"]\nconst _hoisted_19 = [\"value\", \"disabled\"]\nconst _hoisted_20 = { class: \"right\" }\nconst _hoisted_21 = [\"onUpdate:modelValue\"]\nconst _hoisted_22 = { key: 1 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ArtifactSetSelect = _resolveComponent(\"ArtifactSetSelect\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"table\", _hoisted_2, [\n      _createElementVNode(\"tr\", null, [\n        _createElementVNode(\"td\", _hoisted_3, [\n          _createElementVNode(\"div\", _hoisted_4, [\n            (_ctx.controls?.includes('select'))\n              ? (_openBlock(), _createElementBlock(\"button\", {\n                  key: 0,\n                  type: \"button\",\n                  onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.selectOnClick()))\n                }, [\n                  (_ctx.selected)\n                    ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \" select_check_box \"))\n                    : (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \" check_box_outline_blank \"))\n                ]))\n              : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                  (_ctx.controls?.includes('edit'))\n                    ? (_openBlock(), _createElementBlock(\"button\", {\n                        key: 0,\n                        type: \"button\",\n                        onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.isEditing = !_ctx.isEditing))\n                      }, [\n                        (_ctx.isEditing)\n                          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \" edit_off \"))\n                          : (_openBlock(), _createElementBlock(\"span\", _hoisted_8, \" edit \"))\n                      ]))\n                    : _createCommentVNode(\"\", true)\n                ], 64))\n          ]),\n          _createElementVNode(\"div\", _hoisted_9, [\n            _createElementVNode(\"img\", {\n              class: \"artifact-icon\",\n              src: _ctx.artifactImgSrc,\n              alt: _ctx.displayName(_ctx.copiedArtifact.name),\n              onClick: _cache[2] || (_cache[2] = ($event: any) => (_ctx.artifactIconOnClick()))\n            }, null, 8, _hoisted_10),\n            _createElementVNode(\"div\", _hoisted_11, _toDisplayString(_ctx.displayName(_ctx.copiedArtifact.name)), 1)\n          ]),\n          (_ctx.isEditing)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [\n                _withDirectives(_createElementVNode(\"select\", {\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.copiedArtifact.mainStat) = $event)),\n                  onChange: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.onChange && _ctx.onChange(...args)))\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.mainStatOptions, (option) => {\n                    return (_openBlock(), _createElementBlock(\"option\", {\n                      key: option,\n                      value: option\n                    }, _toDisplayString(_ctx.displayName(option)), 9, _hoisted_13))\n                  }), 128))\n                ], 544), [\n                  [_vModelSelect, _ctx.copiedArtifact.mainStat]\n                ]),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"number\",\n                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.copiedArtifact.mainStatValue) = $event)),\n                  min: \"0\",\n                  onChange: _cache[6] || (_cache[6] = \n//@ts-ignore\n(...args) => (_ctx.onChange && _ctx.onChange(...args)))\n                }, null, 544), [\n                  [_vModelText, _ctx.copiedArtifact.mainStatValue]\n                ])\n              ]))\n            : (_openBlock(), _createElementBlock(\"div\", _hoisted_14, _toDisplayString(_ctx.displayName(_ctx.copiedArtifact.mainStat).replace(/%$/, '') + '+' + _ctx.displayStatValue(_ctx.copiedArtifact.mainStat,\r\n                _ctx.copiedArtifact.mainStatValue)), 1))\n        ]),\n        _createElementVNode(\"td\", _hoisted_15, [\n          _createElementVNode(\"table\", _hoisted_16, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.copiedArtifact.subStats, (subStat, index) => {\n              return (_openBlock(), _createElementBlock(\"tr\", { key: index }, [\n                (_ctx.isEditing)\n                  ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                      _createElementVNode(\"td\", _hoisted_17, [\n                        _withDirectives(_createElementVNode(\"select\", {\n                          \"onUpdate:modelValue\": ($event: any) => ((subStat.name) = $event),\n                          onChange: _cache[7] || (_cache[7] = \n//@ts-ignore\n(...args) => (_ctx.onChange && _ctx.onChange(...args)))\n                        }, [\n                          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.subStatOptions, (option) => {\n                            return (_openBlock(), _createElementBlock(\"option\", {\n                              key: option,\n                              value: option,\n                              disabled: _ctx.subStatOptionDisabled(option, subStat.name)\n                            }, _toDisplayString(_ctx.displayName(option)), 9, _hoisted_19))\n                          }), 128))\n                        ], 40, _hoisted_18), [\n                          [_vModelSelect, subStat.name]\n                        ])\n                      ]),\n                      _createElementVNode(\"td\", _hoisted_20, [\n                        _withDirectives(_createElementVNode(\"input\", {\n                          type: \"number\",\n                          \"onUpdate:modelValue\": ($event: any) => ((subStat.value) = $event),\n                          min: \"0\",\n                          onChange: _cache[8] || (_cache[8] = \n//@ts-ignore\n(...args) => (_ctx.onChange && _ctx.onChange(...args)))\n                        }, null, 40, _hoisted_21), [\n                          [_vModelText, subStat.value]\n                        ])\n                      ])\n                    ], 64))\n                  : (_openBlock(), _createElementBlock(\"td\", _hoisted_22, _toDisplayString(_ctx.displayName(subStat.name).replace(/%$/, '') + '+' + _ctx.displayStatValue(subStat.name, subStat.value)), 1))\n              ]))\n            }), 128))\n          ])\n        ])\n      ])\n    ]),\n    _withDirectives(_createElementVNode(\"div\", null, [\n      _createVNode(_component_ArtifactSetSelect, {\n        visible: true,\n        index: 1,\n        \"artifact-set\": _ctx.artifact.setname,\n        \"artifact-set-masters\": _ctx.artifactSetMasters,\n        cat_id: _ctx.artifact.cat_id,\n        \"onUpdate:artifactSet\": _ctx.updateArtifactSet\n      }, null, 8, [\"artifact-set\", \"artifact-set-masters\", \"cat_id\", \"onUpdate:artifactSet\"])\n    ], 512), [\n      [_vShow, _ctx.isSelecting]\n    ])\n  ]))\n}","\r\nimport _ from 'lodash';\r\nimport { overwriteObject } from \"@/common\";\r\nimport { ARTIFACT_SET_MASTER_DUMMY, TArtifact, 聖遺物サブ効果ARRAY, 聖遺物メイン効果_時の砂ARRAY, 聖遺物メイン効果_死の羽ARRAY, 聖遺物メイン効果_理の冠ARRAY, 聖遺物メイン効果_生の花ARRAY, 聖遺物メイン効果_空の杯ARRAY } from \"@/input\";\r\nimport { ARTIFACT_SET_MASTER, TArtifactSetEntry, TArtifactSetKey, getArtifactIconUrl } from \"@/master\";\r\nimport { computed, defineComponent, PropType, reactive, ref, watch } from \"vue\";\r\nimport CompositionFunction from \"./CompositionFunction.vue\";\r\nimport ArtifactSetSelect from \"./ArtifactSetSelect.vue\";\r\n\r\nexport default defineComponent({\r\n  name: 'ArtifactItem',\r\n  props: {\r\n    artifact: { type: Object as PropType<TArtifact>, required: true },\r\n    id: { type: Number },\r\n    controls: { type: Array as PropType<string[]> },\r\n    initials: { type: Array as PropType<string[]> },\r\n    selected: { type: Boolean },\r\n  },\r\n  components: {\r\n    ArtifactSetSelect,\r\n  },\r\n  emits: ['update:artifact', 'remove:artifact', 'select:artifact'],\r\n  setup(props, context) {\r\n    const { displayName, displayStatValue } = CompositionFunction();\r\n\r\n    const copiedArtifact = reactive(_.cloneDeep(props.artifact));\r\n    const isEditing = ref(false);\r\n    const artifactSetMasters = reactive([ARTIFACT_SET_MASTER_DUMMY, ARTIFACT_SET_MASTER_DUMMY] as TArtifactSetEntry[]);\r\n    const isSelecting = ref(false);\r\n    const removable = ref(false);\r\n\r\n    if (props.initials) {\r\n      for (const initial of props.initials) {\r\n        if (initial === 'edit') {\r\n          isEditing.value = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    const artifactImgSrc = computed(() => {\r\n      return getArtifactIconUrl(copiedArtifact.setname, copiedArtifact.cat_id);\r\n    });\r\n\r\n    const MAINSTAT_CAT_ARR = {\r\n      '1': Array.from(new Set(聖遺物メイン効果_生の花ARRAY.map(s => s.replace(/^\\d_/, '')))),\r\n      '2': Array.from(new Set(聖遺物メイン効果_死の羽ARRAY.map(s => s.replace(/^\\d_/, '')))),\r\n      '3': Array.from(new Set(聖遺物メイン効果_時の砂ARRAY.map(s => s.replace(/^\\d_/, '')))),\r\n      '4': Array.from(new Set(聖遺物メイン効果_空の杯ARRAY.map(s => s.replace(/^\\d_/, '')))),\r\n      '5': Array.from(new Set(聖遺物メイン効果_理の冠ARRAY.map(s => s.replace(/^\\d_/, '')))),\r\n    };\r\n\r\n    const mainStatOptions = computed(() => {\r\n      return (MAINSTAT_CAT_ARR as any)[copiedArtifact.cat_id];\r\n    });\r\n\r\n    const subStatOptions = computed(() => {\r\n      return 聖遺物サブ効果ARRAY;\r\n    });\r\n\r\n    const subStatOptionDisabled = ((value: string, selected: string) => {\r\n      if (value == selected) return false;\r\n      const work = copiedArtifact.subStats.map(s => s.name);\r\n      return work.includes(value);\r\n    });\r\n\r\n    const onChange = () => {\r\n      context.emit('update:artifact', props.id, copiedArtifact);\r\n    };\r\n\r\n    const artifactIconOnClick = () => {\r\n      if (isEditing.value) {\r\n        isSelecting.value = !isSelecting.value;\r\n      } else {\r\n        isSelecting.value = false;\r\n      }\r\n    };\r\n\r\n    const updateArtifactSet = (artifactSet: TArtifactSetKey) => {\r\n      copiedArtifact.setname = artifactSet;\r\n      const master = ARTIFACT_SET_MASTER[artifactSet];\r\n      copiedArtifact.rarity = master.レアリティ;\r\n      if ('artifact_list' in master) {\r\n        copiedArtifact.name = master.artifact_list[copiedArtifact.cat_id - 1];\r\n      }\r\n      isSelecting.value = false;\r\n      onChange();\r\n    };\r\n\r\n    const removeOnClick = () => {\r\n      context.emit('remove:artifact', props.id);\r\n    };\r\n\r\n    const selectOnClick = () => {\r\n      context.emit('select:artifact', props.id);\r\n    };\r\n\r\n    watch(props, (newVal) => {\r\n      overwriteObject(copiedArtifact, newVal.artifact);\r\n    });\r\n\r\n    return {\r\n      displayName, displayStatValue,\r\n\r\n      copiedArtifact,\r\n      isEditing,\r\n      artifactSetMasters,\r\n      isSelecting,\r\n      removable,\r\n\r\n      artifactImgSrc,\r\n      mainStatOptions,\r\n      subStatOptions,\r\n      subStatOptionDisabled,\r\n\r\n      onChange,\r\n      artifactIconOnClick,\r\n      updateArtifactSet,\r\n      removeOnClick,\r\n      selectOnClick,\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./ArtifactItem.vue?vue&type=template&id=08647220&scoped=true&ts=true\"\nimport script from \"./ArtifactItem.vue?vue&type=script&lang=ts\"\nexport * from \"./ArtifactItem.vue?vue&type=script&lang=ts\"\n\nimport \"./ArtifactItem.vue?vue&type=style&index=0&id=08647220&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\Github\\\\gencalc\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-08647220\"]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-91b28a50\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = { class: \"title\" }\nconst _hoisted_3 = { class: \"description\" }\nconst _hoisted_4 = { class: \"select-list\" }\nconst _hoisted_5 = [\"src\", \"alt\", \"onClick\"]\nconst _hoisted_6 = { class: \"tooltip\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_ctx.visible)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"table\", null, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.artifactSetEffects, (item) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: item }, [\n              _createElementVNode(\"tr\", null, [\n                _createElementVNode(\"th\", _hoisted_2, _toDisplayString(_ctx.displayName(item.key)), 1)\n              ]),\n              _createElementVNode(\"tr\", null, [\n                _createElementVNode(\"td\", _hoisted_3, _toDisplayString(item.value), 1)\n              ])\n            ], 64))\n          }), 128))\n        ]),\n        _createElementVNode(\"ul\", _hoisted_4, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filteredList, (item) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              class: \"with-tooltip\",\n              key: item.key\n            }, [\n              _createElementVNode(\"img\", {\n                class: _normalizeClass('artifact-set' + _ctx.bgImageClass(item) + _ctx.selectedClass(item)),\n                src: _ctx.getArtifactIconUrl(item.key, _ctx.cat_id),\n                alt: item.key,\n                onClick: ($event: any) => (_ctx.$emit('update:artifact-set', item.key))\n              }, null, 10, _hoisted_5),\n              _createElementVNode(\"div\", _hoisted_6, _toDisplayString(_ctx.displayName(item.key)), 1)\n            ]))\n          }), 128))\n        ])\n      ]))\n    : _createCommentVNode(\"\", true)\n}","\r\nimport {\r\n  ARTIFACT_SET_MASTER_LIST,\r\n  getArtifactIconUrl,\r\n  STAR_BACKGROUND_IMAGE_CLASS,\r\n  TArtifactSetEntry,\r\n} from \"@/master\";\r\nimport { computed, defineComponent, PropType, reactive } from \"vue\";\r\nimport CompositionFunction from './CompositionFunction.vue';\r\n\r\nexport default defineComponent({\r\n  name: \"ArtifactSetSelect\",\r\n  props: {\r\n    visible: { type: Boolean, required: true },\r\n    index: { type: Number, required: true },\r\n    artifactSet: { type: String, required: true },\r\n    artifactSetMasters: { type: Array as PropType<TArtifactSetEntry[]>, required: true },\r\n    cat_id: { type: Number },\r\n  },\r\n  emits: [\"update:artifact-set\"],\r\n  setup(props) {\r\n    const { displayName } = CompositionFunction();\r\n\r\n    const bgImageClass = (item: TArtifactSetEntry) =>\r\n      (\" \" + STAR_BACKGROUND_IMAGE_CLASS[item.レアリティ]) as string;\r\n    const selectedClass = (item: TArtifactSetEntry) => {\r\n      return item.key == props.artifactSet ? \" selected\" : \"\";\r\n    };\r\n    const artifactSetMastersRea = reactive(props.artifactSetMasters);\r\n\r\n    const filteredList = computed(() => {\r\n      return ARTIFACT_SET_MASTER_LIST as TArtifactSetEntry[];\r\n    });\r\n\r\n    const artifactSetEffects = computed(() => {\r\n      const result = [] as any;\r\n      if (artifactSetMastersRea.length > 0) {\r\n        if (\"2セット効果\" in artifactSetMastersRea[0]) {\r\n          result.push({\r\n            key: artifactSetMastersRea[0].key + \" \" + \"2セット効果\",\r\n            value: artifactSetMastersRea[0][\"2セット効果\"]?.説明,\r\n          });\r\n        }\r\n        if (artifactSetMastersRea.length > 1) {\r\n          if (artifactSetMastersRea[0].key == artifactSetMastersRea[1].key) {\r\n            if (\"4セット効果\" in artifactSetMastersRea[0]) {\r\n              result.push({\r\n                key: artifactSetMastersRea[0].key + \" \" + \"4セット効果\",\r\n                value: artifactSetMastersRea[0][\"4セット効果\"]?.説明,\r\n              });\r\n            }\r\n          } else {\r\n            if (\"2セット効果\" in artifactSetMastersRea[1]) {\r\n              result.push({\r\n                key: artifactSetMastersRea[1].key + \" \" + \"2セット効果\",\r\n                value: artifactSetMastersRea[1][\"2セット効果\"]?.説明,\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    });\r\n\r\n    return {\r\n      displayName,\r\n      getArtifactIconUrl,\r\n\r\n      bgImageClass,\r\n      selectedClass,\r\n      filteredList,\r\n      artifactSetEffects,\r\n    };\r\n  },\r\n});\r\n","import { render } from \"./ArtifactSetSelect.vue?vue&type=template&id=91b28a50&scoped=true&ts=true\"\nimport script from \"./ArtifactSetSelect.vue?vue&type=script&lang=ts\"\nexport * from \"./ArtifactSetSelect.vue?vue&type=script&lang=ts\"\n\nimport \"./ArtifactSetSelect.vue?vue&type=style&index=0&id=91b28a50&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\Github\\\\gencalc\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-91b28a50\"]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, createElementVNode as _createElementVNode, withDirectives as _withDirectives, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, vShow as _vShow, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6b0e72ca\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = { class: \"select-list\" }\nconst _hoisted_3 = [\"onUpdate:modelValue\", \"onChange\"]\nconst _hoisted_4 = [\"src\", \"alt\"]\nconst _hoisted_5 = { class: \"select-list\" }\nconst _hoisted_6 = [\"onUpdate:modelValue\", \"onChange\"]\nconst _hoisted_7 = [\"src\", \"alt\"]\nconst _hoisted_8 = { class: \"select-list\" }\nconst _hoisted_9 = [\"src\", \"alt\", \"onClick\"]\nconst _hoisted_10 = { class: \"tooltip\" }\nconst _hoisted_11 = [\"src\", \"alt\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_ctx.visible)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"ul\", _hoisted_2, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.elementList, (item) => {\n            return (_openBlock(), _createElementBlock(\"li\", { key: item }, [\n              _createElementVNode(\"label\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  class: \"hidden\",\n                  type: \"checkbox\",\n                  \"onUpdate:modelValue\": ($event: any) => ((_ctx.elementCheckList[item]) = $event),\n                  onChange: ($event: any) => (_ctx.checkListOnChange(item, _ctx.elementCheckList))\n                }, null, 40, _hoisted_3), [\n                  [_vModelCheckbox, _ctx.elementCheckList[item]]\n                ]),\n                _createElementVNode(\"img\", {\n                  class: \"filter\",\n                  src: _ctx.elementSrc(item),\n                  alt: item\n                }, null, 8, _hoisted_4)\n              ])\n            ]))\n          }), 128))\n        ]),\n        _createElementVNode(\"ul\", _hoisted_5, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.weaponList, (item) => {\n            return (_openBlock(), _createElementBlock(\"li\", { key: item }, [\n              _createElementVNode(\"label\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  class: \"hidden\",\n                  type: \"checkbox\",\n                  \"onUpdate:modelValue\": ($event: any) => ((_ctx.weaponCheckList[item]) = $event),\n                  onChange: ($event: any) => (_ctx.checkListOnChange(item, _ctx.weaponCheckList))\n                }, null, 40, _hoisted_6), [\n                  [_vModelCheckbox, _ctx.weaponCheckList[item]]\n                ]),\n                _createElementVNode(\"img\", {\n                  class: \"filter\",\n                  src: _ctx.weaponSrc(item),\n                  alt: item\n                }, null, 8, _hoisted_7)\n              ])\n            ]))\n          }), 128))\n        ]),\n        _createElementVNode(\"ul\", _hoisted_8, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filteredList, (item) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              class: \"with-tooltip\",\n              key: item.key\n            }, [\n              _createElementVNode(\"img\", {\n                class: _normalizeClass('character' + _ctx.bgImageClass(item) + _ctx.selectedClass(item)),\n                src: item.icon_url,\n                alt: item.key,\n                onClick: ($event: any) => (_ctx.characterOnClick(item.key))\n              }, null, 10, _hoisted_9),\n              _createElementVNode(\"div\", _hoisted_10, _toDisplayString(_ctx.displayName(item.key)), 1),\n              _createElementVNode(\"img\", {\n                class: \"vision\",\n                src: _ctx.visionSrc(item),\n                alt: item.元素\n              }, null, 8, _hoisted_11),\n              _withDirectives(_createElementVNode(\"div\", { class: \"selection-number\" }, _toDisplayString(_ctx.selectionNumber(item.key)), 513), [\n                [_vShow, _ctx.selectionNumber(item.key)]\n              ])\n            ]))\n          }), 128))\n        ])\n      ]))\n    : _createCommentVNode(\"\", true)\n}","\r\nimport {\r\n  TCharacterEntry,\r\n  ELEMENT_IMG_SRC,\r\n  TVisionKey,\r\n  WEAPON_IMG_SRC,\r\n  TWeaponTypeKey,\r\n  CHARACTER_MASTER_LIST,\r\n  STAR_BACKGROUND_IMAGE_CLASS,\r\n} from \"@/master\";\r\nimport { defineComponent, reactive, computed, PropType } from \"vue\";\r\nimport CompositionFunction from \"./CompositionFunction.vue\";\r\n\r\ninterface ICheckList {\r\n  [key: string]: boolean;\r\n}\r\n\r\nexport default defineComponent({\r\n  name: \"CharacterSelect\",\r\n  props: {\r\n    character: { type: String },\r\n    characters: { type: Array as PropType<string[]> },\r\n    visible: { type: Boolean, required: true },\r\n  },\r\n  emits: [\"update:character\", \"update:characters\"],\r\n  setup(props, context) {\r\n    const { displayName } = CompositionFunction();\r\n\r\n    const visionSrc = (item: TCharacterEntry) => ELEMENT_IMG_SRC[item.元素];\r\n    const bgImageClass = (item: TCharacterEntry) =>\r\n      (\" \" + STAR_BACKGROUND_IMAGE_CLASS[item.レアリティ]) as string;\r\n    const selectedClass = (item: TCharacterEntry) => {\r\n      if (props.character && props.character == item.key) {\r\n        return \" selected\";\r\n      }\r\n      if (props.characters && props.characters.includes(item.key)) {\r\n        return \" selected\";\r\n      }\r\n      return \"\";\r\n    };\r\n\r\n    const elementList = Object.keys(ELEMENT_IMG_SRC) as TVisionKey[];\r\n    const elementSrc = (element: TVisionKey) => ELEMENT_IMG_SRC[element] as string;\r\n    const elementCheckList = reactive({}) as ICheckList;\r\n    for (let key of elementList) {\r\n      elementCheckList[key] = false;\r\n    }\r\n\r\n    const weaponList = Object.keys(WEAPON_IMG_SRC) as TWeaponTypeKey[];\r\n    const weaponSrc = (weapon: TWeaponTypeKey) => WEAPON_IMG_SRC[weapon] as string;\r\n    const weaponCheckList = reactive({}) as ICheckList;\r\n    for (let key of weaponList) {\r\n      weaponCheckList[key] = false;\r\n    }\r\n\r\n    const checkListOnChange = function (item: string, checkList: ICheckList) {\r\n      if (!checkList[item]) return;\r\n      Object.keys(checkList)\r\n        .filter((s) => s != item)\r\n        .forEach((key) => {\r\n          checkList[key] = false;\r\n        });\r\n    };\r\n\r\n    const filteredList = computed(() => {\r\n      const result = [];\r\n      const elementChecked =\r\n        Object.keys(elementCheckList).filter((s) => elementCheckList[s]).length > 0;\r\n      const weaponChecked =\r\n        Object.keys(weaponCheckList).filter((s) => weaponCheckList[s]).length > 0;\r\n      for (let entry of CHARACTER_MASTER_LIST as TCharacterEntry[]) {\r\n        if (elementChecked && !elementCheckList[entry.元素]) continue;\r\n        if (weaponChecked && !weaponCheckList[entry.武器]) continue;\r\n        result.push(entry);\r\n      }\r\n      return result;\r\n    });\r\n\r\n    const selectionNumber = (character: string) => {\r\n      let result = \"\";\r\n      if (props.characters) {\r\n        const index = props.characters.indexOf(character);\r\n        if (index != -1) {\r\n          result = String(index + 1);\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n\r\n    const characterOnClick = (character: string) => {\r\n      if (props.character) {\r\n        context.emit(\"update:character\", character);\r\n      }\r\n      if (props.characters) {\r\n        const characters: string[] = props.characters.map((s) => s);\r\n        const index = props.characters.indexOf(character);\r\n        if (index != -1) {\r\n          characters[index] = \"\";\r\n        } else {\r\n          const blankIndex = props.characters.indexOf(\"\");\r\n          if (blankIndex != -1) {\r\n            characters[blankIndex] = character;\r\n          }\r\n        }\r\n        context.emit(\"update:characters\", characters);\r\n      }\r\n    };\r\n\r\n    return {\r\n      displayName,\r\n\r\n      visionSrc,\r\n      bgImageClass,\r\n      selectedClass,\r\n      elementList,\r\n      elementSrc,\r\n      elementCheckList,\r\n      weaponList,\r\n      weaponSrc,\r\n      weaponCheckList,\r\n      checkListOnChange,\r\n      filteredList,\r\n\r\n      selectionNumber,\r\n      characterOnClick,\r\n    };\r\n  },\r\n});\r\n","import { render } from \"./CharacterSelect.vue?vue&type=template&id=6b0e72ca&scoped=true&ts=true\"\nimport script from \"./CharacterSelect.vue?vue&type=script&lang=ts\"\nexport * from \"./CharacterSelect.vue?vue&type=script&lang=ts\"\n\nimport \"./CharacterSelect.vue?vue&type=style&index=0&id=6b0e72ca&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\Github\\\\gencalc\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6b0e72ca\"]])\n\nexport default __exports__","\r\nimport i18n from \"@/i18n\";\r\nimport { STAT_PERCENT_LIST } from \"@/input\";\r\nimport { nextTick } from \"vue\";\r\nimport { useI18n } from \"vue-i18n\";\r\n\r\nexport default function CompositionFunction() {\r\n    const { t, te } = useI18n({\r\n        useScope: \"global\",\r\n    });\r\n\r\n    const localeList = [\r\n        { name: \"日本語\", value: \"ja-jp\" },\r\n        { name: \"English\", value: \"en-us\" },\r\n        { name: \"简体中文\", value: \"zh-cn\" },\r\n        { name: \"繁體中文\", value: \"zh-tw\" },\r\n        { name: \"한국어\", value: \"ko-kr\" },\r\n        { name: \"Deutsch\", value: \"de-de\" },\r\n        { name: \"Español\", value: \"es-es\" },\r\n        { name: \"Français\", value: \"fr-fr\" },\r\n        { name: \"Indonesia\", value: \"id-id\" },\r\n        { name: \"Português\", value: \"pt-pt\" },\r\n        { name: \"Pусский\", value: \"ru-ru\" },\r\n        { name: 'ภาษาไทย', value: 'th-th' },\r\n        { name: \"Tiếng Việt\", value: \"vi-vn\" },\r\n    ];\r\n\r\n    const setI18nLanguage = function (locale: string) {\r\n        i18n.global.locale.value = locale;\r\n        loadLocaleMessages(locale);\r\n        document.querySelector('html')?.setAttribute('lang', locale)\r\n    }\r\n\r\n    const loadLocaleMessages = async function (locale: string) {\r\n        if (locale != 'ja-jp') {\r\n            const messages = await fetch(`./locales/${locale}.json`).then(resp => resp.json());\r\n            i18n.global.setLocaleMessage(locale, messages);\r\n        }\r\n        return nextTick();\r\n    }\r\n\r\n    const displayName = function (key: any): string {\r\n        if (!key) return key;\r\n        if (i18n.global.locale.value === 'ja-jp') { // 日本語はtranslateしません\r\n            let result = String(key);\r\n            if (['ダメージバフ', 'ダメージアップ', '反応ボーナス', '敵'].includes(result)) {\r\n                return result;\r\n            }\r\n            result = result.replace(/ダメージバフ$/, 'ダメージ');\r\n            result = result.replace(/ダメージアップ$/, 'ダメージ');\r\n            result = result.replace('凍結反応ボーナス', '凍結反応の継続時間');\r\n            result = result.replace(/反応ボーナス$/, '反応ダメージ');\r\n            result = result.replace(/^敵/, '敵の');\r\n            return result;\r\n        }\r\n        if (te(key)) return t(key);\r\n        const re = new RegExp('(.*?)([\\\\s_\\\\(\\\\)/]+)(.*)');\r\n        let result = '';\r\n        let work = key;\r\n        while (work) {\r\n            const reRet = re.exec(work);\r\n            if (!reRet) {\r\n                result += t(work);\r\n                break;\r\n            }\r\n            if (reRet[1]) result += t(reRet[1]);\r\n            result += reRet[2];\r\n            work = reRet[3];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const percent = function (stat: string) {\r\n        const tempArr = stat.split('.');\r\n        let work = tempArr[0].replace(/V[1-3]$/, '');\r\n        let hasPercent = work.endsWith(\"%\") || STAT_PERCENT_LIST.includes(work);\r\n        if (!hasPercent) {\r\n            ['会心率', '会心ダメージ', 'クールタイム', '攻撃速度'].forEach(postfix => {\r\n                if (work.endsWith(postfix)) hasPercent = true;\r\n            })\r\n        }\r\n        return hasPercent ? '%' : '';\r\n    }\r\n\r\n    const displayStatName = function (stat: string) {\r\n        let result = stat.replace(/V[1-3]$/, '');\r\n        const tempArr = result.split('.');\r\n        if (tempArr.length == 1) {\r\n            result = displayName(result);\r\n            result = result.replace('ダメージ会心', 'ダメージの会心')\r\n        } else if (i18n.global.locale.value === 'ja-jp') {\r\n            result = tempArr[tempArr.length - 1] + 'の' + displayName(tempArr[0]);\r\n        } else {\r\n            result = displayName(tempArr[tempArr.length - 1]) + ' ' + displayName(tempArr[0]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const displayStatValue = function (stat: string, value: number, opt_s?: number): string {\r\n        const myPercent = percent(stat);\r\n        let p = myPercent ? 10 : 1;\r\n        if (opt_s) p = Math.pow(10, opt_s);\r\n        return String(Math.round(value * p) / p) + myPercent;\r\n    }\r\n\r\n    const displayStatAbbrev = function (stat: string) {\r\n        let result = stat;\r\n        const tempArr = stat.split('.');\r\n        if (tempArr.length == 1) {\r\n            stat = stat.replace(/V\\d$/, '');\r\n            stat = stat.replace(/TOP$/, '');\r\n            if (stat.startsWith('敵')) stat = stat.replace(/^敵/, '');\r\n            if (stat.endsWith('ダメージバフ')) stat = stat.replace(/ダメージバフ$/, '');\r\n            else if (stat.endsWith('ダメージアップ')) stat = stat.replace(/ダメージアップ$/, '');\r\n            else if (stat.endsWith('元素ダメージ')) stat = stat.replace(/元素ダメージ$/, '');\r\n            else if (stat.endsWith('物理ダメージ')) stat = stat.replace(/ダメージ$/, '');\r\n            else if (stat.endsWith('反応ボーナス')) stat = stat.replace(/反応ボーナス$/, '');\r\n            else if (stat.endsWith('耐性')) stat = stat.replace(/耐性$/, '');\r\n            result = displayName(stat);\r\n        } else {\r\n            result = displayStatName(stat);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /** $event.target.valueでのtypescriptエラー回避のために */\r\n    const targetValue = function (event: Event) {\r\n        if (event.target instanceof HTMLInputElement) return event.target.value;\r\n        if (event.target instanceof HTMLSelectElement) return event.target.value;\r\n        return undefined;\r\n    }\r\n\r\n    const displayOptionName = function (name: string) {\r\n        return displayName(name.replace(/^required_/, \"\"));\r\n    }\r\n\r\n    return {\r\n        localeList,\r\n        setI18nLanguage,\r\n        loadLocaleMessages,\r\n        displayName,\r\n        displayStatName,\r\n        displayStatValue,\r\n        displayStatAbbrev,\r\n        targetValue,\r\n        displayOptionName,\r\n        percent,\r\n    }\r\n}\r\n","import script from \"./CompositionFunction.vue?vue&type=script&lang=ts\"\nexport * from \"./CompositionFunction.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["isNumber","value","isFinite","overwriteObject","dst","src","_","srcKeys","Object","keys","key","includes","basename","path","split","pop","shift","i18n","createI18n","legacy","locale","fallbackLocale","isGlobal","基礎ステータスARRAY","基本ステータスARRAY","高級ステータスARRAY","元素ステータス_ダメージARRAY","元素ステータス_耐性ARRAY","ダメージバフARRAY","実数ダメージ加算ARRAY","元素反応バフARRAY","ステータスその他ARRAY","ステータス連動ARRAY","ステータスチーム内最高ARRAY","敵ステータス_元素耐性ARRAY","敵ステータス_その他ARRAY","ステータスARRAY_MAP","Map","STAT_PERCENT_LIST","makeStatusTenmplate","statsObj","forEach","stat","ステータスTEMPLATE","makeEnemyStatusTemplate","聖遺物メイン効果_生の花ARRAY","聖遺物メイン効果_死の羽ARRAY","聖遺物メイン効果_時の砂ARRAY","聖遺物メイン効果_空の杯ARRAY","聖遺物メイン効果_理の冠ARRAY","聖遺物サブ効果ARRAY","聖遺物優先するサブ効果ARRAY","聖遺物ステータスTEMPLATE","元素反応TEMPLATE","元素","蒸発倍率","溶解倍率","過負荷ダメージ","感電ダメージ","超電導ダメージ","拡散ダメージ","拡散元素","結晶吸収量","燃焼ダメージ","開花ダメージ","烈開花ダメージ","超開花ダメージ","超激化ダメージ","草激化ダメージ","燃焼ダメージ会心率","燃焼ダメージ会心ダメージ","開花ダメージ会心率","開花ダメージ会心ダメージ","烈開花ダメージ会心率","烈開花ダメージ会心ダメージ","超開花ダメージ会心率","超開花ダメージ会心ダメージ","DAMAGE_RESULT_TEMPLATE","元素反応","通常攻撃","重撃","落下攻撃","元素スキル","元素爆発","その他","キャラクター注釈","突破レベルレベルARRAY","Array","from","length","i","ARTIFACT_SET_MASTER_DUMMY","レアリティ","image","IMG_SRC_DUMMY","CHARACTER_INPUT_TEMPLATE","character","characterMaster","突破レベル","レベル","命ノ星座","通常攻撃レベル","元素スキルレベル","元素爆発レベル","weapon","weaponMaster","武器突破レベル","武器レベル","武器精錬ランク","artifactSets","artifactSetMasters","damageDetailMyCharacter","damageDetailMyWeapon","damageDetailMyArtifactSets","damageDetailElementalResonance","buildname","recommendationSelectedIndex","saveDisabled","removeDisabled","ARTIFACT_TEMPLATE","name","rarity","setname","cat_id","mainStat","mainStatValue","subStats","ARTIFACT_DETAIL_INPUT_TEMPLATE","聖遺物メイン効果","聖遺物優先するサブ効果","聖遺物優先するサブ効果上昇値","GENSEN_MASTER_LIST","聖遺物優先するサブ効果上昇回数","聖遺物ステータス","聖遺物ステータスメイン効果","聖遺物ステータスサブ効果","聖遺物優先するサブ効果Disabled","artifact_list","CONDITION_INPUT_TEMPLATE","checkboxList","selectList","numberList","conditionValues","conditionAdjustments","攻撃元素","STATS_INPUT_TEMPLATE","statAdjustments","statAdjustmentsEx","enemyMaster","ENEMY_MASTER_LIST","SUPPORTER_INPUT_TEMPLATE","characterInput","artifactDetailInput","conditionInput","statsInput","damageResult","OPTION_INPUT_TEMPLATE","elementalResonance","supporterBuildname","supporters","teamMembers","teamOption","miscOption","parseLevelStr","levelStr","result","level","Number","String","replace","ascension","endsWith","Math","max","error","console","makeDefaultBuildname","makeBuildStorageKey","makeOptionStorageKey","makeArtifactScoringStorageKey","makeRecommendationList","opt_buildData","isSavable","push","build","overwrite","log","storageKeyArr","localStorage","startsWith","sort","re","RegExp","buildObj","JSON","parse","key2","optionsObj","options","key3","artifactScoringObj","artifactScoring","key4","supporterBuildnameObj","obj","myRecommendation","artifactRarerityArrArr","artifactRarerity4Num","artifactSet1","artifactSet2","ARTIFACT_SET_MASTER","makeArtifactSetAbbrev","statusName","RECOMMEND_ABBREV_MAP","substring","abbrRe","abbr","a","b","makePrioritySubstatValueList","prioritySubstats","index","opt_substat","ARTIFACT_SUB_MASTER","valueArr","diff","makeEasyInputSubstatValueList","substat","async","loadRecommendation","optionInput","getCharacterMasterDetail","artifactStatsSub","weaponType","WEAPON_MASTER","filter","s","getWeaponMasterDetail","prioritySubstatsDisabled","toKey","artifactSet","mainstat","doUpdate","substatValue","prioritySubstatValueList","v","substatCount","キャラクター構成PROPERTY_MAP","ELEMENTAL_RESONANCE_MASTER","astarIndex","indexOf","workCharacter","CHARACTER_MASTER","splice","debug","makeSavedata","resultObj","entry","makeOptionsSavedata","CHANGE_KIND_STATUS","CHANGE_KIND_TALENT","makeDamageDetailObjArrObjCharacter","myTalentDetail","myTalentLevel","myDefaultKind","myDefaultElement","myInputCategory","myStatusChangeDetailObjArr","myTalentChangeDetailObjArr","category","makeDamageDetailObjArr","workCategory","workObj","条件","詳細","workArr","cond","名前","種類","数値","対象","上限","HIT数","ダメージバフ","元素付与無効","除外条件","適用条件","拡散","conditionMap","exclusionMap","detailObj","makeConditionExclusionMapFromStr","isArray","set","makeDamageDetailObjArrObjWeapon","myLevel","condition","makeDamageDetailObjArrObjArtifactSets","damageDetailObjArr","makeDamageDetailObjArrObjElementalResonance","ELEMENTAL_RESONANCE_MASTER_LIST","makeDetailObj","defaultKind","defaultElement","inputCategory","opt_condition","my種類","my対象","my数値","DAMAGE_CATEGORY_ARRAY","analyzeFormulaStr","my条件","my上限","my下限","下限","getChangeKind","kind","exec","talentDataObj","statusChangeDetailObjArr","talentChangeDetailObjArr","resultArr","makeTeamOptionDetailObjArr","detailObjArr","conditionStr","exclusionCond","myCondStrArr","myCondStr","makeConditionExclusionMapFromStrSub","NUMBER_CONDITION_VALUE_RE","exclusion","myName","pushToMapValueArray","test","conditionObj","min","step","reRet","prefix","condValueArr","postfix","re2","rangeStart","rangeEnd","re2Ret","addDecimal","e","setupConditionValues","masters","master","myDamageDetail","排他","required","exclusions","get","conditionValue","minValue","checked","arr","selectedIndex","getStatValue","n","vStat","trunc","undefined","updateNumberConditionValues","numberEntryArr","maxValue","map","has","oldValue","getDecimalLength","multiplyDecimal","value1","value2","decimalLength","intValue1","intValue2","pow","opt_max","k","formulaStr","opt_defaultItem","workStr","analyzeFormulaStrSub","strArr","makeSharedata","savedata","sharedataArr","myBasename","newValue","ARTIFACT_STAT_JA_EN_ABBREV_MAP","join","openTwitter","text","url","opt_hashtags","opt_via","baseUrl","params","URLSearchParams","append","query","toString","shareUrl","window","open","shareByTwitter","sharedata","encoded","encodeURI","getMaxConstellation","getMaxTalentLevel","talentObj","work","pushBuildinfoToSession","builddata","teammembers","sessionStorage","setItem","stringify","popBuildinfoFromSession","getItem","removeItem","_hoisted_1","class","_hoisted_2","_hoisted_3","style","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","render","_ctx","_cache","$props","$setup","$data","$options","_component_ArtifactSetSelect","_resolveComponent","_openBlock","_createElementBlock","_createElementVNode","controls","type","onClick","$event","selectOnClick","selected","_Fragment","isEditing","_createCommentVNode","artifactImgSrc","alt","displayName","copiedArtifact","artifactIconOnClick","_toDisplayString","_withDirectives","onChange","args","_renderList","mainStatOptions","option","_vModelSelect","_vModelText","displayStatValue","subStat","subStatOptions","disabled","subStatOptionDisabled","_createVNode","visible","artifact","updateArtifactSet","_vShow","isSelecting","defineComponent","props","id","initials","Boolean","components","ArtifactSetSelect","emits","setup","context","CompositionFunction","reactive","ref","removable","initial","computed","getArtifactIconUrl","MAINSTAT_CAT_ARR","Set","emit","removeOnClick","watch","newVal","__exports__","artifactSetEffects","item","filteredList","_normalizeClass","bgImageClass","selectedClass","$emit","STAR_BACKGROUND_IMAGE_CLASS","artifactSetMastersRea","ARTIFACT_SET_MASTER_LIST","説明","elementList","elementCheckList","checkListOnChange","_vModelCheckbox","elementSrc","weaponList","weaponCheckList","weaponSrc","icon_url","characterOnClick","visionSrc","selectionNumber","characters","ELEMENT_IMG_SRC","element","WEAPON_IMG_SRC","checkList","elementChecked","weaponChecked","CHARACTER_MASTER_LIST","武器","blankIndex","t","te","useI18n","useScope","localeList","setI18nLanguage","loadLocaleMessages","document","querySelector","setAttribute","messages","fetch","then","resp","json","nextTick","percent","tempArr","hasPercent","displayStatName","opt_s","myPercent","p","round","displayStatAbbrev","targetValue","event","target","HTMLInputElement","HTMLSelectElement","displayOptionName"],"sourceRoot":""}