{"version":3,"file":"js/chunk-common.4254b968.js","mappings":"oNAUM,SAAUA,EAASC,GACrB,OAAOC,SAASD,IAAmB,MAATA,CAC9B,CAiBM,SAAUE,EAAgBC,EAAUC,GACtC,GAAIC,IAAAA,cAAgBD,IAAQC,IAAAA,cAAgBF,GAAM,CAC9C,MAAMG,EAAUC,OAAOC,KAAKJ,GAC5B,IAAK,MAAMK,KAAOH,EACdH,EAAIM,GAAOL,EAAIK,GAEnB,IAAK,MAAMA,KAAOF,OAAOC,KAAKL,GACrBG,EAAQI,SAASD,WAAaN,EAAIM,E,CAG/C,OAAON,CACX,CAGO,MAAMQ,EAAYC,GAAiBA,EAAMC,MAAM,KAAMC,MAAOD,MAAM,KAAME,O,qCCzC/E,MAAMC,GAAOC,EAAAA,EAAAA,GAAW,CACtBC,QAAQ,EACRC,OAAQ,QACRC,eAAgB,QAChBC,UAAU,IAEZ,K,g/CCJO,MAAMC,EAAe,CACxB,OACA,QACA,SAESC,EAAe,CACxB,OACA,MACA,MACA,QAESC,EAAe,CACxB,MACA,SACA,UACA,UACA,WACA,WACA,UAESC,EAAoB,CAC7B,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YAESC,EAAkB,CAC3B,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QAESC,EAAc,CACvB,aACA,WACA,aACA,cACA,aACA,WAESC,EAAgB,CACzB,cACA,YACA,cACA,eACA,cACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aAESC,EAAc,CACvB,WACA,WACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,aAESC,EAAgB,CACzB,SACA,MACA,OACA,OACA,MACA,OACA,QAESC,EAAe,CACxB,SACA,QACA,QACA,SACA,QACA,WACA,YACA,YACA,cAESC,EAAmB,CAC5B,WAESC,EAAmB,CAC5B,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAESC,EAAkB,CAC3B,QAGSC,EAAiB,IAAIC,IAAI,CAClC,CAAC,UAAWd,GACZ,CAAC,UAAWC,GACZ,CAAC,UAAWC,GACZ,CAAC,eAAgBC,GACjB,CAAC,aAAcC,GACf,CAAC,SAAUC,GACX,CAAC,WAAYC,GACb,CAAC,SAAUC,GACX,CAAC,MAAOC,GACR,CAAC,UAAWC,GACZ,CAAC,UAAWC,GACZ,CAAC,cAAeC,GAChB,CAAC,aAAcC,KAGNG,EAAoB,IAC1Bb,KAAiBC,KAAsBC,KAAoBC,KAAgBE,KAAgBI,EAC9F,OAAQ,QAOZ,SAASK,IACL,MAAMC,EAAmB,CAAC,EAW1B,OAVAJ,EAAeK,SAASxC,IACpBA,EAAMwC,SAAQC,IACVF,EAASE,GAAQ,CAAC,GACpB,IAENF,EAAS,OAAS,EAClBA,EAAS,UAAY,GACrBA,EAAS,YAAc,IACvBA,EAAS,QAAU,EACnBA,EAAS,QAAU,EACZA,CACX,CACO,MAAMG,EAAgBJ,IAE7B,SAASK,IACL,MAAMJ,EAAmB,CAAC,EAO1B,MANA,CAACb,GAAiBc,SAASxC,IACvBA,EAAMwC,SAAQC,IACVF,EAASE,GAAQ,CAAC,GACpB,IAENF,EAAS,OAAS,EACXA,CACX,CAC8BI,IAAvB,MAEMC,EAAoB,wBAC7B,OAAQ,QACX,KACYC,EAAoB,wBAC7B,QAAS,SACZ,KACYC,EAAoB,wBAC7B,aACA,QACA,SACA,SACA,SACA,aACA,QACA,SACA,SACA,UACH,KACYC,EAAoB,wBAC7B,cACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,QACA,SACA,SACA,SACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,QACA,SACA,SACA,UACH,KACYC,EAAoB,wBAC7B,QACA,WACA,QACA,SACA,SACA,SACA,YACA,QACA,WACA,QACA,SACA,SACA,SACA,aACH,KAEYC,EAAe,wBACxB,MACA,KACA,OACA,MACA,OACA,MACA,OACA,MACA,SACA,YACH,KACYC,EAAmB,UAC5B,OACA,MACA,OACA,OACA,MACA,SACA,YACH,KAEYC,EAAmB,CAC5B,GAAM,EACN,MAAO,EACP,MAAO,EACP,OAAQ,EACR,MAAO,EACP,SAAU,EACV,WAAY,EACZ,MAAO,EACP,OAAQ,EACR,OAAQ,EACR,YAAa,EACb,YAAa,EACb,YAAa,EACb,YAAa,EACb,YAAa,EACb,YAAa,EACb,YAAa,EACb,WAAY,EACZ,UAAW,GAGFC,EAAe,CACxBC,KAAI,IACJC,SAAQ,EACRC,SAAQ,EACRC,SAAQ,EACRC,SAAQ,EACRC,UAAS,EACTC,SAAQ,EACRC,UAAS,EACTC,SAAQ,EACRC,OAAM,IACNC,QAAO,EACPC,UAAS,EACTC,SAAQ,EACRC,SAAQ,EACRC,UAAS,EACTC,UAAS,EACTC,UAAS,EACTC,UAAS,EACTC,YAAW,EACXC,eAAc,EACdC,YAAW,EACXC,eAAc,EACdC,aAAY,EACZC,gBAAe,EACfC,aAAY,EACZC,gBAAe,GAkBNC,EAAyB,CAClCC,OAAM3E,IAAAA,UAAY+C,GAClB6B,OAAM,GACNC,KAAI,GACJC,OAAM,GACNC,QAAO,GACPC,OAAM,GACNC,MAAK,GACLC,WAAU,IAGDC,EAAgB,CACzBC,MAAMC,KAAK,CAAEC,OAAQ,KAAM,CAACtF,EAAGuF,IAAMA,EAAI,IACzCH,MAAMC,KAAK,CAAEC,OAAQ,KAAM,CAACtF,EAAGuF,IAAMA,EAAI,KACzCH,MAAMC,KAAK,CAAEC,OAAQ,KAAM,CAACtF,EAAGuF,IAAMA,EAAI,KACzCH,MAAMC,KAAK,CAAEC,OAAQ,KAAM,CAACtF,EAAGuF,IAAMA,EAAI,KACzCH,MAAMC,KAAK,CAAEC,OAAQ,KAAM,CAACtF,EAAGuF,IAAMA,EAAI,KACzCH,MAAMC,KAAK,CAAEC,OAAQ,KAAM,CAACtF,EAAGuF,IAAMA,EAAI,KACzCH,MAAMC,KAAK,CAAEC,OAAQ,KAAM,CAACtF,EAAGuF,IAAMA,EAAI,MAiChCC,EAA4B,CACrCpF,IAAK,OACLqF,QAAO,EACPC,MAAOC,EAAAA,IAGEC,EAA2B,CACpCC,UAAW,OACXC,gBAAiB,CAAC,EAClBC,QAAO,EACPC,MAAK,GACLC,OAAM,EACNC,UAAS,EACTC,WAAU,EACVC,UAAS,EACTC,OAAQ,OACRC,aAAc,CAAC,EACfC,UAAS,EACTC,QAAO,GACPC,UAAS,EACTC,aAAc,CAAC,OAA2B,QAC1CC,mBAAoB,CAACnB,EAA2BA,GAChDoB,wBAAyB,KACzBC,qBAAsB,KACtBC,2BAA4B,KAC5BC,+BAAgC,KAChCC,UAAW,GACXC,4BAA6B,EAC7BC,cAAc,EACdC,gBAAgB,GAIPC,EAAoB,CAC7BC,KAAM,GACNC,OAAQ,EACRC,QAAS,OACTC,OAAQ,EACRC,SAAU,GACVC,cAAe,EACfC,SAAU,CACN,CAAEN,KAAM,KAAM1H,MAAO,GACrB,CAAE0H,KAAM,MAAO1H,MAAO,GACtB,CAAE0H,KAAM,MAAO1H,MAAO,GACtB,CAAE0H,KAAM,OAAQ1H,MAAO,KAKlBiI,EAAiC,CAC1CC,WAAU,CAAC,GAAI,GAAI,GAAI,GAAI,IAC3BC,cAAa,CAAC,GAAI,GAAI,IACtBC,iBAAgB3C,MAAMC,KAAK2C,EAAAA,GAAmB,GAAGC,QACjDC,kBAAiB9C,MAAMC,KAAK2C,EAAAA,GAAmB,GAAGG,QAClDC,WAAUpI,IAAAA,UAAY8C,GACtBuF,gBAAerI,IAAAA,UAAY8C,GAC3BwF,eAActI,IAAAA,UAAY8C,GAC1ByF,uBAAqB,EACrBC,cAAe,IA2BNC,EAA2B,CACpCC,aAAc,GACdC,WAAY,GACZC,WAAY,GACZC,gBAAiB,CAAC,EAClBC,qBAAsB,CAAC,EACvBC,OAAM,CAAC,KAAM,KAAM,OAIVC,EAAuB,CAChC9G,SAAUlC,IAAAA,UAAYqC,GACtB4G,gBAAiBjJ,IAAAA,UAAYqC,GAC7B6G,kBAAmB,CAAC,EACpBC,YAAaC,EAAAA,GAAkB,IAEnC,IAAK,MAAMhH,MAAQlC,OAAOC,KAAK6I,EAAqBC,iBAChDD,EAAqBC,gBAAgB7G,IAAQ,EAS1C,MAAMiH,EAA2B,CACpCC,eAAgBtJ,IAAAA,UAAY4F,GAC5B2D,oBAAqBvJ,IAAAA,UAAY4H,GACjC4B,eAAgBxJ,IAAAA,UAAYyI,GAC5BgB,WAAYzJ,IAAAA,UAAYgJ,GACxBU,aAAc1J,IAAAA,UAAY0E,IAIjBiF,EAAwB,CACjCC,mBAAoB,CAChBf,gBAAiB,CAAC,EAClBC,qBAAsB,CAAC,GAE3Be,mBAAoB,CAAC,EACrBC,WAAY,CAAC,EACbC,YAAa,GACbC,WAAYhK,IAAAA,UAAYyI,GACxBwB,WAAYjK,IAAAA,UAAYyI,IAK5B,SAASyB,EAAcC,GACnB,IAAIC,EAA2B,CAAC,EAAG,GACnC,IACI,IAAIC,EAEAA,EADArK,IAAAA,SAAWmK,GACHG,OAAOC,OAAOJ,GAAUK,QAAQ,IAAK,KAErCF,OAAOH,GAEnB,IAAIM,EAAY,EAChB,IAAK,IAAIlF,EAAKJ,EAAcG,OAAS,EAAIC,GAAK,EAAGA,IAE7C,GADAkF,EAAYlF,IACRJ,EAAcI,GAAG,GAAK8E,GAA1B,CACIlF,EAAcI,GAAG,IAAM8E,GAAUE,OAAOJ,GAAUO,SAAS,MAC3DD,IAEJ,KAJyC,CAM7CL,EAAS,CAACO,KAAKC,IAAI,EAAGH,GAAYJ,E,CACpC,MAAOQ,GACLC,QAAQD,MAAMV,E,CAGlB,OAAOC,CACX,CAQM,SAAUW,EAAqBlF,GACjC,MAAO,OAASA,CACpB,CAEM,SAAUmF,EAAoBnF,EAAmCmB,GACnE,IAAIoD,EAAS,MAAQvE,EAIrB,OAHImB,GAAaA,GAAa+D,EAAqBlF,KAC/CuE,GAAU,IAAMpD,GAEboD,CACX,CAEM,SAAUa,EAAqBpF,EAAmCmB,GACpE,MAAO,QAAUgE,EAAoBnF,EAAWmB,EACpD,CAEM,SAAUkE,EAA8BrF,EAAmCmB,GAC7E,OAAOgE,EAAoBnF,EAAWmB,GAAWwD,QAAQ,MAAO,kBACpE,CAOM,SAAUW,EACZrF,EACAsF,GAEA,MAAMhB,EAA4B,GAE5BvE,EAAYC,EAAgB,MAClC,IAAIuF,EAA4B,KAE5BD,IACAhB,EAAOkB,KAAK,CAAEjE,KAAM,gBAAiBkE,MAAOH,EAAeI,WAAW,IACtEH,GAAY,EACZP,QAAQW,IAAIL,IAGhB,MAAMM,EAA0B,GAChCxL,OAAOC,KAAKwL,cAAcxJ,SAAQ/B,IAC1BA,EAAIwL,WAAWZ,EAAoBnF,MACnC6F,EAAcJ,KAAKlL,GACF,MAAbiL,IACAA,GAAY,G,IAIxBK,EAAcG,OACd,MAAMC,EAAK,IAAIC,OAAO,OAASlG,EAAY,KA6E3C,OA5EA6F,EAAcvJ,SAAQ/B,IAClB,IAAI4G,EAEAA,EADA5G,GAAO4K,EAAoBnF,GACfkF,EAAqBlF,GAErBzF,EAAIoK,QAAQsB,EAAI,IAEhC,MAAME,EAAWC,KAAKC,MAAMP,aAAavL,IACnC+L,EAAO,QAAU/L,EACvB,GAAI+L,KAAQR,aAAc,CACtB,MAAMS,EAAaH,KAAKC,MAAMP,aAAaQ,IAC3CH,EAASK,QAAUD,C,CAEvB,MAAME,EAAOlM,EAAIoK,QAAQ,MAAO,mBAChC,GAAI8B,KAAQX,aAAc,CACtB,MAAMY,EAAqBN,KAAKC,MAAMP,aAAaW,IACnDN,EAASQ,gBAAkBD,C,CAE/B,MAAME,EAAOrM,EAAIoK,QAAQ,MAAO,sBAChC,GAAIiC,KAAQd,aAAc,CACtB,MAAMe,EAAwBT,KAAKC,MAAMP,aAAac,IACtDT,EAASnC,mBAAqB6C,C,CAElCtC,EAAOkB,KAAK,CAAEjE,KAAML,EAAWuE,MAAOS,EAAUR,WAAW,GAAO,IAGtE1F,EAAgB,WAAW3D,SAASwK,IAChC,MAAMC,EAAmBD,EACzB,CAAC,eAAgB,eAAgB,gBAAgBxK,SAAQC,IAC/CA,KAAQuK,IACVA,EAAIvK,GAAQ,K,IAGpB,MAAMyK,EAAyB,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAC/E,IAAIC,EAAuB,EAC3B,MAAMC,EAAeH,EAAiB,aAChCI,EAAeJ,EAAiB,aACY,GAA9CK,EAAAA,GAAoBF,GAAc,UAClCD,IAE8C,GAA9CG,EAAAA,GAAoBD,GAAc,UAClCF,IAEJ,IAAK,IAAIvH,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,MAAM8B,EAAO,YAAc9B,EAAI,GACzB8B,KAAQuF,IACD,GAALrH,EACAqH,EAAiBvF,GAAQwF,EAAuBC,GAAsBvH,GAAK,MAC/D,GAALA,IACPqH,EAAiBvF,GAAQwF,EAAuBC,GAAsBvH,GAAK,Q,CAKvF,IAAIyB,EAAY4F,EAAiB,MACjC5F,GAAa,IACT4F,EAAiB,cAAgBA,EAAiB,aAClD5F,GAAa4F,EAAiB,cAE9B5F,GAAakG,EAAsBN,EAAiB,cACpD5F,GAAa,IACbA,GAAakG,EAAsBN,EAAiB,eAExD5F,GAAa,KACb,IAAK,IAAIzB,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,MAAM4H,EAAaP,EAAiB,WAAarH,GAAG/E,MAAM,KAAK,GAC3D4M,EAAAA,GAAqBC,IAAIF,GACzBnG,GAAaoG,EAAAA,GAAqBE,IAAIH,GAEtCnG,GAAamG,EAAWI,UAAU,EAAG,E,CAG7CvG,GAAa,IACboD,EAAOkB,KAAK,CAAEjE,KAAML,EAAWuE,MAAOqB,EAAkBpB,WAAW,GAAQ,IAGxEpB,CACX,CAGA,SAAS8C,EAAsB7F,GAC3B,MAAMmG,EAAS,uCACf,IAAIC,EAAOpG,EAAKmD,QAAQgD,EAAQ,IAShC,OARIC,EAAKnI,OAAS,IACdmI,EAAOpG,EAAK7G,MAAMgN,GAAQ3B,MAAK,CAAC6B,EAAGC,IACxBA,EAAErI,OAASoI,EAAEpI,SACrB,IAEHmI,EAAKnI,OAAS,IACdmI,EAAOA,EAAKF,UAAU,EAAG,IAEtBE,CACX,CAEM,SAAUG,EACZC,EACAC,EACAC,GAEA,MAAM3D,EAAmB,GACzB,GAAIyD,EAAiBC,KACZC,IAAaA,EAAcF,EAAiBC,IAC7CC,GAAeA,KAAeC,EAAAA,IAAqB,CACnD,MAAMC,EAAWD,EAAAA,GAAoBD,GACrC,IAAK,IAAIxI,EAAI,EAAGA,EAAI0I,EAAS3I,OAAQC,IAEjC,GADA6E,EAAOkB,KAAK2C,EAAS1I,IACjBA,EAAI0I,EAAS3I,OAAS,EAAG,CACzB,MAAM4I,EAAOD,EAAS1I,EAAI,GAAK0I,EAAS1I,GACxC6E,EAAOkB,KAAK2C,EAAS1I,GAAK2I,EAAO,E,EAKjD,OAAO9D,CACX,CAEM,SAAU+D,EACZC,GAEA,MAAMhE,EAAmB,GACzB,GAAIgE,GAAWA,KAAWJ,EAAAA,GAAqB,CAC3C,MAAMC,EAAWD,EAAAA,GAAoBI,GACrC,IAAK,IAAI7I,EAAI,EAAGA,EAAI0I,EAAS3I,OAAQC,IAEjC,GADA6E,EAAOkB,KAAK2C,EAAS1I,IACjBA,EAAI0I,EAAS3I,OAAS,EAAG,CACzB,MAAM4I,EAAOD,EAAS1I,EAAI,GAAK0I,EAAS1I,GACxC6E,EAAOkB,KAAK2C,EAAS1I,GAAK2I,EAAO,E,EAI7C,OAAO9D,CACX,CAGOiE,eAAeC,EAClBhF,EACAC,EACAC,EACA+E,EACAhD,GAEA,IACI,MAAM1F,EAAYyD,EAAezD,UAC3BC,QAAwB0I,EAAAA,EAAAA,IAAyB3I,GACvDyD,EAAexD,gBAAkBA,EACjC,MAAM2I,EAAmBzO,IAAAA,UAAY8C,GAEjC,QAASyI,KACRjC,EAAevD,MAAOuD,EAAetD,KAAOkE,EAAcqB,EAAM,SAErE,CAAC,OAAQ,UAAW,WAAY,WAAWpJ,SAAQ/B,IAC3CA,KAAOmL,IACNjC,EAAuBlJ,GAAOkK,OAAOiB,EAAMnL,I,IAIpD,MAAMsO,EAAa5I,EAAgB,MAC/B,OAAQyF,IACJrL,OAAOC,KAAKwO,EAAAA,GAAcD,IAAarO,SAASkL,EAAM,OACtDjC,EAAejD,OAASkF,EAAM,MAE9BjC,EAAejD,OAASnG,OAAOC,KAAKwO,EAAAA,GAAcD,IAAaE,QAAOC,GAAKA,EAAEjD,WAAW,QAAO,GAEnGtC,EAAehD,mBAAqBwI,EAAAA,EAAAA,IAAsBxF,EAAejD,OAAQqI,IAEjF,UAAWnD,KACVjC,EAAe/C,QAAS+C,EAAe9C,OAAS0D,EAAcqB,EAAM,WAErE,UAAWA,IACXjC,EAAe7C,QAAU6D,OAAOiB,EAAM,WAG1C,IAAIwD,GAA2B,EAC/B,IAAK,MAAM3O,KAAOF,OAAOC,KAAKoL,GAAOqD,QAAQC,GAAcA,EAAEjD,WAAW,aAAa,CACjF,IAAIoD,EAAQ5O,EAAIoK,QAAQ,WAAY,IACvB,MAATwE,IAAeA,EAAQA,EAAMxE,QAAQ,KAAM,OAC3Ce,EAAMnL,IAAsB,GAAdmL,EAAMnL,MACpB2O,GAA2B,EAC1BN,EAAyBO,GAAS1E,OAAOiB,EAAMnL,I,CA0FxD,GAvFAmJ,EAAoBhB,oBAAsBwG,EAE1C,CAAC,YAAa,aAAa5M,SAAQ,CAAC/B,EAAK0N,KACrC,KAAM1N,KAAOmL,GAAQ,OACrB,MAAM0D,EAAc1D,EAAMnL,GACtB6O,GAAeA,KAAehC,EAAAA,IAC9B3D,EAAe5C,aAAaoH,GAASmB,EACrC3F,EAAe3C,mBAAmBmH,GAASb,EAAAA,GAAoBgC,IAE/D3F,EAAe3C,mBAAmBmH,GAAStI,C,IAInD,CAAC,YAAa,aAAarD,SAAQ,CAAC/B,EAAK0N,KAEjCvE,EAAoB,YAAYuE,GADhC1N,KAAOmL,EACkCA,EAAMnL,GAEN,CAAC,OAAQ,SAAS0N,E,IAGnE,CAAC,YAAa,YAAa,aAAa3L,SAAQ,CAAC/B,EAAK0N,KAClD,KAAM1N,KAAOmL,GAAQ,OACrB,MAAM2D,EAAW3D,EAAMnL,GACvBmJ,EAAoB,YAAYuE,EAAQ,GAAKoB,CAAQ,IAQpDH,IACD,CAAC,eAAgB,eAAgB,gBAAgB5M,SAAQ,CAAC/B,EAAK0N,KAC3D,KAAM1N,KAAOmL,GAAQ,OACrB,MAAM6C,EAAU7C,EAAMnL,GACtBmJ,EAAoB,eAAeuE,GAASM,CAAO,IAEvD,CAAC,kBAAmB,kBAAmB,mBAAmBjM,SAAQ,CAAC/B,EAAK0N,KACpE,IAAIqB,GAAW,EAMf,GALI5F,EAAoB,eAAeuE,IAC9B1N,KAAOmL,IAAU7L,EAAAA,EAAAA,IAAS6L,EAAMnL,MACjC+O,GAAW,GAGfA,EAAU,CACV,MAAMC,EAAe9E,OAAOiB,EAAMnL,IAC5BgO,EAAU7E,EAAoB,eAAeuE,GAC7CuB,EAA2BzB,EAA6B,CAACQ,GAAU,GACzEiB,EAAyBlN,SAAQ,CAACmN,EAAG/J,KAC7B6J,GAAgBE,IAChB/F,EAAoB,kBAAkBuE,GAASvI,E,SAInDgE,EAAoB,eAAeuE,KAAWvE,EAAoB,kBAAkBuE,KACpFvE,EAAoB,kBAAkBuE,GAAS9F,EAAAA,GAAmB,GAAGC,OAAO6F,G,IAIxF,CAAC,mBAAoB,mBAAoB,oBAAoB3L,SAAQ,CAAC/B,EAAK0N,KACvE,IAAIqB,GAAW,EAMf,GALI5F,EAAoB,eAAeuE,IAC9B1N,KAAOmL,IAAU7L,EAAAA,EAAAA,IAAS6L,EAAMnL,MACjC+O,GAAW,GAGfA,EAAU,CACV,MAAMI,EAAejF,OAAOiB,EAAMnL,IAClCmJ,EAAoB,mBAAmBuE,GAASyB,C,MAE5ChG,EAAoB,eAAeuE,KAAWvE,EAAoB,mBAAmBuE,KACrFvE,EAAoB,mBAAmBuE,GAAS9F,EAAAA,GAAmB,GAAGG,OAAO2F,G,KAM7F5N,OAAOC,KAAKoL,GAAOqD,QAAOC,IAAMW,EAAAA,GAAqBnC,IAAIwB,KAAO,CAAC,UAAW,kBAAmB,qBAAsB,iBAAiBxO,SAASwO,KAAI1M,SAAQ/B,IACrI,MAAdmL,EAAMnL,GACNoJ,EAAeX,gBAAgBzI,GAAOmL,EAAMnL,GACrCJ,IAAAA,SAAWuL,EAAMnL,IACxBoJ,EAAeX,gBAAgBzI,GAAOkK,OAAOiB,EAAMnL,IAEnDoJ,EAAeX,gBAAgBzI,GAAOmL,EAAMnL,E,IAIhD,YAAamL,EAAO,CACpB,MAAMpL,EAAOD,OAAOC,KAAKoL,EAAMc,SAC3BlM,EAAKmF,UACLzF,EAAAA,EAAAA,IAAgB0O,EAAY3E,mBAAmBf,gBAAiB,CAAC,IACjEhJ,EAAAA,EAAAA,IAAgB0O,EAAYvE,WAAWnB,gBAAiB,CAAC,IACzDhJ,EAAAA,EAAAA,IAAgB0O,EAAYtE,WAAWpB,gBAAiB,CAAC,GACzD1I,EAAKgC,SAAQ/B,IACT,GAAIA,KAAOqP,EAAAA,IAAqC,gBAAPrP,EAErCmO,EAAY3E,mBAAmBf,gBAAgBzI,GAAOmL,EAAMc,QAAQjM,OACjE,CACH,MAAMsP,EAAatP,EAAIuP,QAAQ,KAC/B,IAAmB,GAAfD,EAAkB,CAClB,MAAME,EAAgBxP,EAAImN,UAAU,EAAGmC,GACnCE,KAAiBC,EAAAA,GAEjBtB,EAAYvE,WAAWnB,gBAAgBzI,GAAOmL,EAAMc,QAAQjM,GAG5DmO,EAAYtE,WAAWpB,gBAAgBzI,GAAOmL,EAAMc,QAAQjM,E,MAIhEmO,EAAYtE,WAAWpB,gBAAgBzI,GAAOmL,EAAMc,QAAQjM,E,MAOhF,GAAI,uBAAwBmL,EAAO,CAC/B,MAAMpL,EAAOD,OAAOC,KAAKoL,EAAM1B,oBAC3B1J,EAAKmF,UACLzF,EAAAA,EAAAA,IAAgB0O,EAAY1E,mBAAoB,CAAC,GACjD1J,EAAKgC,SAAQ/B,IACTmO,EAAY1E,mBAAmBzJ,GAAOmL,EAAM1B,mBAAmBzJ,EAAI,I,CAK/E,GAAI,kBAAmBmL,EAAO,CAC1B,MAAMuE,EAAgB5P,OAAOC,KAAKiH,GAAmByE,OAC/CkE,EAAUxE,EAAM/C,cAAcoG,QAAQC,GAAW7O,IAAAA,QAAUE,OAAOC,KAAK0O,GAAGhD,OAAQiE,KACxFvG,EAAoBf,cAAcwH,OAAO,EAAGzG,EAAoBf,cAAclD,UAAWyK,E,MAEzFxG,EAAoBf,cAAcwH,OAAO,EAAGzG,EAAoBf,cAAclD,SAGlFzF,EAAAA,EAAAA,IAAgB0J,EAAoBjB,aAAcmG,GAElD3D,QAAQmF,MAAM,qBAAsB3G,EAAgBC,EAAqBC,EAAgB+B,E,CAE7F,MAAOV,GACHC,QAAQD,MAAMvB,EAAgBC,EAAqBC,EAAgB+B,E,CAG3E,CAEM,SAAU2E,GAAa5G,EAAiCC,EAA2CC,GACrG,MAAM2G,EAAY,CAAC,EAGnBA,EAAU,UAAY7G,EAAezD,UAErCsK,EAAU,OAAS7G,EAAetD,KAAOb,EAAcmE,EAAevD,OAAO,IAAMuD,EAAetD,IAAM,IAAM,IAE9GmK,EAAU,QAAU7G,EAAerD,KAEnCkK,EAAU,WAAa7G,EAAepD,QAEtCiK,EAAU,YAAc7G,EAAenD,SAEvCgK,EAAU,WAAa7G,EAAelD,QAEtC+J,EAAU,MAAQ7G,EAAejD,OAEjC8J,EAAU,SAAW7G,EAAe9C,OAASrB,EAAcmE,EAAevD,OAAO,IAAMuD,EAAe9C,MAAQ,IAAM,IAEpH2J,EAAU,SAAW7G,EAAe7C,QAEpC0J,EAAU,aAAe7G,EAAe5C,aAAa,GAErDyJ,EAAU,aAAe7G,EAAe5C,aAAa,GAErDyJ,EAAU,aAAe5G,EAAoB1B,SAAS,GAEtDsI,EAAU,aAAe5G,EAAoB1B,SAAS,GAEtDsI,EAAU,aAAe5G,EAAoB1B,SAAS,GAEtDsI,EAAU,aAAe5G,EAAoB1B,SAAS,GAEtDsI,EAAU,aAAe5G,EAAoB1B,SAAS,GAEtDsI,EAAU,aAAe5G,EAAoBjB,aAAa,MAE1D6H,EAAU,cAAgB5G,EAAoBjB,aAAa,OAE3D6H,EAAU,cAAgB5G,EAAoBjB,aAAa,OAE3D6H,EAAU,eAAiB5G,EAAoBjB,aAAa,QAE5D6H,EAAU,cAAgB5G,EAAoBjB,aAAa,OAE3D6H,EAAU,iBAAmB5G,EAAoBjB,aAAa,UAE9D6H,EAAU,mBAAqB5G,EAAoBjB,aAAa,YAEhE6H,EAAU,cAAgB5G,EAAoBjB,aAAa,OAE3D6H,EAAU,eAAiB5G,EAAoBjB,aAAa,QAE5D6H,EAAU,eAAiB5G,EAAoBjB,aAAa,QAE5D6H,EAAU,gBAAkB5G,EAAoBzB,YAAY,GAE5DqI,EAAU,mBAAqB5G,EAAoBxB,eAAe,GAElEoI,EAAU,oBAAsB5G,EAAoBrB,gBAAgB,GAEpEiI,EAAU,gBAAkB5G,EAAoBzB,YAAY,GAE5DqI,EAAU,mBAAqB5G,EAAoBxB,eAAe,GAElEoI,EAAU,oBAAsB5G,EAAoBrB,gBAAgB,GAEpEiI,EAAU,gBAAkB5G,EAAoBzB,YAAY,GAE5DqI,EAAU,mBAAqB5G,EAAoBxB,eAAe,GAElEoI,EAAU,oBAAsB5G,EAAoBrB,gBAAgB,GAEpE,IAAK,MAAMkI,KAAS5G,EAAed,aAC/ByH,EAAUC,EAAM/I,MAAQmC,EAAeX,gBAAgBuH,EAAM/I,MAEjE,IAAK,MAAM+I,KAAS5G,EAAeb,WAC/BwH,EAAUC,EAAM/I,MAAQmC,EAAeX,gBAAgBuH,EAAM/I,MAKjE,OAFA8I,EAAU,iBAAmB5G,EAAoBf,cAE1C2H,CACX,CAEM,SAAUE,GAAoBxK,EAAmB0I,GACnD,MAAM4B,EAAY,CAAC,EAGnB,CACI,MAAMtH,EAAkB0F,EAAY3E,mBAAmBf,gBACvD3I,OAAOC,KAAK0I,GAAiB1G,SAAQ/B,IAC7ByI,EAAgBzI,KAChB+P,EAAU/P,GAAOyI,EAAgBzI,G,IAM7C,CACI,MAAMyI,EAAkB0F,EAAYvE,WAAWnB,gBAC/C3I,OAAOC,KAAK0I,GAAiB1G,SAAQ/B,IAC7BA,EAAIwL,WAAW/F,EAAY,MAC3BgD,EAAgBzI,KAChB+P,EAAU/P,GAAOyI,EAAgBzI,G,IAM7C,CACI,MAAMyI,EAAkB0F,EAAYtE,WAAWpB,gBAC/C3I,OAAOC,KAAK0I,GAAiB1G,SAAQ/B,IAC7ByI,EAAgBzI,KAChB+P,EAAU/P,GAAOyI,EAAgBzI,G,IAK7C,OAAO+P,CACX,CAaO,MAAMG,GAAqB,aACrBC,GAAqB,YAE5B,SAAUC,GAAmClH,GAC/C,MAAMc,EAAS,CAAC,EAChB,IACI,MAAMtE,EAAkBwD,EAAexD,gBAEvC,IAAI2K,EACAC,EACAC,EACAC,EACJ,MAAMC,EAAkB,SAElBC,EAA6B,GAC7BC,EAA6B,GAGnCL,EAAgBpH,EAAe,WAC/BsH,EAA6C,OAA1B9K,EAAgB,MAAiBA,EAAgB,MAAQ,KAC5E,CAAC,OAAQ,KAAM,QAAQ3D,SAAQ6O,IAC3BP,EAAiB3K,EAAgBkL,GACjCL,EAAgBK,EAAW,OAC3B5G,EAAO4G,GAAYC,GAAuBR,EAAgBC,EAAeC,EAAeC,EAAkBE,EAA4BC,EAA4BF,EAAgB,IAGtL,CAAC,OAAQ,KAAM,QAAQ1O,SAAQ6O,IAC3B,MAAME,EAAe,KAAOF,EAC5B,GAAIE,KAAgBpL,EAAiB,CAEjC,GADA2K,EAAiB3K,EAAgBoL,GAC7B,OAAQT,EAER,OADAE,EAAgBF,EAAe,MACvBE,GACJ,IAAK,YACDD,EAAgBpH,EAAe,YAC/B,MACJ,IAAK,WACDoH,EAAgBpH,EAAe,WAC/B,MAGR,OAAQmH,IACRG,EAAmBH,EAAe,OAEtC,MAAMU,EAAU,CACZC,KAAIX,EAAe,MACnBY,KAAIJ,GAAuBR,EAAgBC,EAAeC,EAAeC,EAAkBE,EAA4BC,EAA4BF,IAEvJzG,EAAO8G,GAAgBC,C,KAK/BT,EAAgBpH,EAAe,YAC/BqH,EAAgB,YAChBC,EAAmB9K,EAAgB,MACnCsE,EAAO,SAAW6G,GAAuBnL,EAAgB,SAAU4K,EAAeC,EAAeC,EAAkBE,EAA4BC,EAA4BF,GAG3KH,EAAgBpH,EAAe,WAC/BqH,EAAgB,WAChBC,EAAmB9K,EAAgB,MACnCsE,EAAO,QAAU6G,GAAuBnL,EAAgB,QAAS4K,EAAeC,EAAeC,EAAkBE,EAA4BC,EAA4BF,GAEzKzG,EAAO,OAAS,GAGZ,YAAatE,GACbA,EAAgB,WAAW3D,SAASsO,IAChC,MAAMa,EAAUL,GAAuBR,EAAgB,KAAM,KAAM,KAAMK,EAA4BC,EAA4BF,GAC7HS,EAAQhM,OAAS,GAAG8E,EAAO,OAAOkB,QAAQgG,EAAQ,IAK9DxL,EAAgB,QAAQ3D,SAASsO,IAC7B,MAAMa,EAAUL,GAAuBR,EAAgB,KAAM,KAAM,KAAMK,EAA4BC,EAA4BF,GAC7HS,EAAQhM,OAAS,GAAG8E,EAAO,OAAOkB,QAAQgG,EAAQ,IAItD,SAAUxL,GACV5F,OAAOC,KAAK2F,EAAgB,SAAS3D,SAAQ/B,IACzC,GAAIkK,OAAOlK,GAAOkJ,EAAerD,KAAM,OACvCwK,EAAiB3K,EAAgB,QAAQ1F,GACzC,MAAMkR,EAAUL,GAAuBR,EAAgB,KAAM,KAAM,KAAMK,EAA4BC,EAA4BF,GAC7HS,EAAQhM,OAAS,GAAG8E,EAAO,OAAOkB,QAAQgG,EAAQ,IAKjC,KAAzBxL,EAAgB,QACqE,GAAjFiL,EAA2BnC,QAAOC,GAAKA,EAAEuC,IAAMvC,EAAEuC,GAAGxF,WAAW,SAAQtG,QACvE,CAAC,MAAO,MAAO,MAAO,OAAOnD,SAAQoP,IACjCR,EAA2BzF,KAAK,CAC5BkG,KAAI,KACJC,KAAI,OACJzO,KAAI,KACJ0O,KAAI,KACJN,KAAI,MAAQG,EACZI,KAAI,KACJC,KAAI,KACJC,OAAM,KACNC,SAAQ,KACRC,SAAQ,KACRC,OAAM,KACNC,OAAM,MACR,IAGN,aAAcnM,EACgE,GAA1E5F,OAAOC,KAAK2F,EAAgB,aAAa8I,QAAOC,GAAU,MAALA,IAAWvJ,SAChEQ,EAAgB,YAAY,MAAQ,GAGxCA,EAAgB,YAAc,CAAEoM,KAAI,IAI5C9H,EAAOkG,IAAsBQ,EAC7B1G,EAAOmG,IAAsBQ,EAE7B,MAAMoB,EAAe,IAAIpQ,IACnBqQ,EAAe,IAAIrQ,IACzB+O,EAA2BlC,QAAOC,GAAKA,EAAE,QAAO1M,SAAQkQ,IACpDC,GAAiCD,EAAU,MAAOF,EAAcC,EAAa,IAEjFrB,EAA2BnC,QAAOC,GAAKA,EAAE,QAAO1M,SAAQkQ,IACpDC,GAAiCD,EAAU,MAAOF,EAAcC,EAAa,IAGjFD,EAAahQ,SAAQ,CAACxC,EAAOS,KACrBT,GAASyF,MAAMmN,QAAQ5S,KAClBA,EAAM,GAAGiM,WAAW,cACrBuG,EAAaK,IAAIpS,EAAK,CAAC,MAAOT,I,IAI1CyK,EAAO,MAAQ+H,EACf/H,EAAO,MAAQgI,EAEf9I,EAAe1C,wBAA0BwD,C,CAC3C,MAAOS,GACLC,QAAQD,MAAMvB,EAAgBc,E,CAGlC,OAAOA,CACX,CAEM,SAAUqI,GAAgCnJ,GAC5C,MAAMc,EAAS,CAAC,EAChB,IACI,MAAM/C,EAAOiC,EAAejD,OACtBC,EAAegD,EAAehD,aACpC,IAAKe,IAASf,EAAc,OAAO8D,EAEnC,IAAIqG,EACJ,MAAMiC,EAAUpJ,EAAe7C,QACzBoK,EAAkB,KAElBC,EAA6B,GAC7BC,EAA6B,GAE/B,UAAWzK,IACXmK,EAAiBnK,EAAa,SAC9B8D,EAAO,OAAS6G,GAAuBR,EAAgBiC,EAAS,KAAM,KAAM5B,EAA4BC,EAA4BF,IAGxIzG,EAAOkG,IAAsBQ,EAC7B1G,EAAOmG,IAAsBQ,EAE7B,MAAMoB,EAAe,IAAIpQ,IACnBqQ,EAAe,IAAIrQ,IACzB+O,EAA2BlC,QAAOC,GAAKA,EAAE,QAAO1M,SAAQkQ,IACpD,IAAIM,EAAYN,EAAU,MACtBrS,IAAAA,cAAgB2S,IAAcD,KAAWC,IACzCA,EAAYA,EAAUD,IAE1BJ,GAAiCK,EAAWR,EAAcC,EAAa,IAE3ErB,EAA2BnC,QAAOC,GAAKA,EAAE,QAAO1M,SAAQkQ,IACpD,IAAIM,EAAYN,EAAU,MACtBrS,IAAAA,cAAgB2S,IAAcD,KAAWC,IACzCA,EAAYA,EAAUD,IAE1BJ,GAAiCK,EAAWR,EAAcC,EAAa,IAE3ED,EAAahQ,SAAQ,CAACxC,EAAOS,KACrBT,GAASyF,MAAMmN,QAAQ5S,KAClBA,EAAM,GAAGiM,WAAW,cACrBuG,EAAaK,IAAIpS,EAAK,CAAC,MAAOT,I,IAI1CyK,EAAO,MAAQ+H,EACf/H,EAAO,MAAQgI,EAEf9I,EAAezC,qBAAuBuD,C,CACxC,MAAOS,GACLC,QAAQD,MAAMvB,EAAgBc,E,CAGlC,OAAOA,CACX,CAEM,SAAUwI,GAAsCtJ,GAClD,MAAMc,EAAS,GACf,IACI,IAAIqG,EACJ,MAAMI,EAAkB,WAElBC,EAA6B,GAC7BC,EAA6B,GAE7BpK,EAAqB2C,EAAe3C,mBAAmBiI,QAAQC,GAAWA,IAEhF,GAAIlI,EAAmBrB,OAAS,EAAG,CAC/B,MAAMuN,EAAqB,GACvB,WAAYlM,EAAmB,KAC/B8J,EAAiB9J,EAAmB,GAAG,UACvCkM,EAAmBvH,QAAQ2F,GAAuBR,EAAgB,KAAM,KAAM,KAAMK,EAA4BC,EAA4BF,KAE/G,GAA7BlK,EAAmBrB,SACfqB,EAAmB,IAAMA,EAAmB,IAC5C8J,EAAiB9J,EAAmB,GAAG,UACvCkM,EAAmBvH,QAAQ2F,GAAuBR,EAAgB,KAAM,KAAM,KAAMK,EAA4BC,EAA4BF,MAE5IJ,EAAiB9J,EAAmB,GAAG,UACvCkM,EAAmBvH,QAAQ2F,GAAuBR,EAAgB,KAAM,KAAM,KAAMK,EAA4BC,EAA4BF,MAGpJzG,EAAO,OAASyI,C,CAGpBzI,EAAOkG,IAAsBQ,EAC7B1G,EAAOmG,IAAsBQ,EAE7B,MAAMoB,EAAe,IAAIpQ,IACnBqQ,EAAe,IAAIrQ,IACzB+O,EAA2BlC,QAAOC,GAAKA,EAAE,QAAO1M,SAAQkQ,IACpDC,GAAiCD,EAAU,MAAOF,EAAcC,EAAa,IAEjFrB,EAA2BnC,QAAOC,GAAKA,EAAE,QAAO1M,SAAQkQ,IACpDC,GAAiCD,EAAU,MAAOF,EAAcC,EAAa,IAEjFD,EAAahQ,SAAQ,CAACxC,EAAOS,KACrBT,GAASyF,MAAMmN,QAAQ5S,KAClBA,EAAM,GAAGiM,WAAW,cACrBuG,EAAaK,IAAIpS,EAAK,CAAC,MAAOT,I,IAI1CyK,EAAO,MAAQ+H,EACf/H,EAAO,MAAQgI,EAEf9I,EAAexC,2BAA6BsD,C,CAC9C,MAAOS,GACLC,QAAQD,MAAMvB,EAAgBc,E,CAGlC,OAAOA,CACX,CAEM,SAAU0I,GAA4CxJ,GACxD,MAAMc,EAAS,GACf,IACI,MAAMyG,EAAkB,OAClBgC,EAAqB,GACrB/B,EAA6B,GAC7BC,EAA6B,GACnC,IAAK,MAAMN,KAAkBsC,EAAAA,GAAiC,CAC1D,MAAM5B,EAAUnR,IAAAA,UAAYyQ,GACxBU,EAAQE,IACRF,EAAQE,GAAGlP,SAASkQ,IAChBA,EAAUb,GAAKf,EAAerQ,GAAG,IAGzCyS,EAAmBvH,QAAQ2F,GAAuBE,EAAS,KAAM,KAAM,KAAML,EAA4BC,EAA4BF,G,CAEzIzG,EAAO,OAASyI,EAChBzI,EAAOkG,IAAsBQ,EAC7B1G,EAAOmG,IAAsBQ,EAE7B,MAAMoB,EAAe,IAAIpQ,IACnBqQ,EAAe,IAAIrQ,IACzB+O,EAA2BlC,QAAOC,GAAKA,EAAE,QAAO1M,SAAQkQ,IACpDC,GAAiCD,EAAU,MAAOF,EAAcC,EAAa,IAEjFrB,EAA2BnC,QAAOC,GAAKA,EAAE,QAAO1M,SAAQkQ,IACpDC,GAAiCD,EAAU,MAAOF,EAAcC,EAAa,IAEjFD,EAAahQ,SAAQ,CAACxC,EAAOS,KACrBT,GAASyF,MAAMmN,QAAQ5S,KAClBA,EAAM,GAAGiM,WAAW,cACrBuG,EAAaK,IAAIpS,EAAK,CAAC,MAAOT,I,IAI1CyK,EAAO,MAAQ+H,EACf/H,EAAO,MAAQgI,EAEf9I,EAAevC,+BAAiCqD,C,CAClD,MAAOS,GACLC,QAAQD,MAAMvB,EAAgBc,E,CAGlC,OAAOA,CACX,CAEA,SAAS4I,GACLX,EACAhI,EACA4I,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAO,OAAQhB,EAAYA,EAAU,MAAQY,EAC7CK,EAAO,MACe,GAAtBD,EAAK1D,QAAQ,MACb2D,EAAOD,EAAK9F,UAAU8F,EAAK1D,QAAQ,KAAO,GAC1C0D,EAAOA,EAAK9F,UAAU,EAAG8F,EAAK1D,QAAQ,OAC/B,OAAQ0C,IACfiB,EAAOjB,EAAU,OAErB,IAAIkB,EAAO,KACP,OAAQlB,IACRkB,EAAOlB,EAAU,OACb3S,EAAAA,EAAAA,IAAS6T,IAASvT,IAAAA,SAAWuT,KAEtBvT,IAAAA,cAAgBuT,IAASlJ,GAASA,KAASkJ,EAClDA,EAAOA,EAAKlJ,GAEZS,QAAQD,MAAMwH,EAAWhI,EAAO4I,EAAaC,EAAgBK,IAG7DA,EADAC,EAAAA,GAAsBnT,SAASgT,EAAO,SAAWA,EAAK3I,SAAS,QACxD+I,GAAkBF,EAAM,OAExBE,GAAkBF,EAAMF,IAGvC,IAAIK,EAAO,KAGHA,EAFJ,OAAQrB,EACJrS,IAAAA,cAAgBqS,EAAU,QAAUhI,GAASA,KAASgI,EAAU,MACzDA,EAAU,MAAMhI,GAEhBgI,EAAU,MAGde,GAAiB,KAE5B,IAAIO,EAAO,KACP,OAAQtB,IACRsB,EAAOtB,EAAU,MACbrS,IAAAA,cAAgB2T,IAAStJ,GAASA,KAASsJ,IAC3CA,EAAOA,EAAKtJ,IAEhBsJ,EAAOF,GAAkBE,IAE7B,IAAIC,EAAO,KACP,OAAQvB,IACRuB,EAAOvB,EAAU,MACbrS,IAAAA,cAAgB4T,IAASvJ,GAASA,KAASuJ,IAC3CA,EAAOA,EAAKvJ,IAEhBuJ,EAAOH,GAAkBG,IAE7B,MAAMzD,EAA8B,CAChCqB,KAAIa,EAAU,MACdZ,KAAI4B,EACJrQ,KAAI,OAAQqP,EAAYA,EAAU,MAAQa,EAC1CxB,KAAI6B,EACJnC,KAAIsC,EACJ/B,KAAI2B,EACJ1B,KAAI+B,EACJE,KAAID,EACJ/B,OAAM,SAAUQ,EAAYA,EAAU,QAAU,KAChDP,SAAQ,WAAYO,EAAYA,EAAU,UAAY,KACtDN,SAAQ,WAAYM,EAAYA,EAAU,UAA6B,MAAjBc,EACtDnB,OAAM,SAAUK,EAAYA,EAAU,QAAU,KAChDJ,OAAM,SAAUI,EAAYA,EAAU,QAAU,MAEpD,OAAOlC,CACX,CAEM,SAAU2D,GAAcC,GAC1B,OAAIA,KAAQ1R,GACL,IAAI0J,OAAO,kBAAkBiI,KAAKD,IAClC,CAAC,cAAc1T,SAAS0T,IACxB,IAAIhI,OAAO,cAAciI,KAAKD,IAC9B,CAAC,OAAQ,UAAU1T,SAAS0T,IAC5B,CAAC,QAAQ1T,SAAS0T,IAClB,CAAC,OAAQ,QAAQ1T,SAAS0T,IAC1B,CAAC,OAAQ,SAAU,OAAQ,QAAQ1T,SAAS0T,IAC5CA,EAAKrJ,SAAS,SACdqJ,EAAKrJ,SAAS,WACdqJ,EAAKrJ,SAAS,QACdqJ,EAAKrJ,SAAS,UAEV,SACAqJ,EAAKrJ,SAAS,OAClBqJ,EAAKrJ,SAAS,OACN,QAARqJ,GACK,QAARA,EAEO,cALJ,CAQX,CAEM,SAAU9C,GACZgD,EACA5J,EACA4I,EACAC,EACAgB,EACAC,EACAhB,EACAC,GAEA,MAAMgB,EAAY,GAClB,MAAM,OAAQH,GAEdA,EAAc,MAAM9R,SAASkQ,IACzB,MAAMlC,EAAY6C,GAAcX,EAAWhI,EAAO4I,EAAaC,EAAgBC,EAAeC,GACxFC,EAAOlD,EAAUsB,GACvB,OAAgC,MAA5ByC,GAA2D,UAAvBJ,GAAcT,IAClDlD,EAAU,MAAQ,OAAQkC,EAAYA,EAAU,MAAQ,UACxD6B,EAAyB5I,KAAK6E,IAGF,MAA5BgE,GAA2D,UAAvBL,GAAcT,IAClDlD,EAAU,MAAQ,OAAQkC,EAAYA,EAAU,MAAQ,UACxD8B,EAAyB7I,KAAK6E,SAGlCiE,EAAU9I,KAAK6E,EAAU,IAGtBiE,GAlB8BA,CAmBzC,CAEM,SAAUC,GACZC,GAEA,MAAMF,EAAY,GASlB,OAPAE,EAAanS,SAASkQ,IAClB,MAAMlC,EAAY6C,GAAcX,EAAW,KAAM,KAAM,KAAM,MACzDlC,GACAiE,EAAU9I,KAAK6E,E,IAIhBiE,CACX,CAaM,SAAU9B,GACZiC,EACApC,EACAC,GAGA,IAAIoC,EAA+B,KAC/BC,EAAeF,EAAa/T,MAAM,KAClCiU,EAAanP,OAAS,IACtBkP,EAAgBC,EAAa,IAEjC,MAAMC,EAAYD,EAAa,IACA,GAA3BC,EAAU/E,QAAQ,MAElB8E,EAAeC,EAAUlU,MAAM,KAC/BiU,EAAatS,SAASuS,IAClBC,GAAoCD,EAAWvC,EAAcC,EAAcoC,EAAc,MAI7FC,EAAeC,EAAUlU,MAAM,KAC/BiU,EAAatS,SAASuS,IAClBC,GAAoCD,EAAWvC,EAAcC,EAAcoC,EAAc,IAGrG,CAEO,MAAMI,GAA4B,eAEzC,SAASD,GACLJ,EACApC,EACAC,EACAyC,GAEA,MAAMJ,EAAeF,EAAa/T,MAAM,QAClCsU,EAASL,EAAa,GAC5B,GAA2B,GAAvBA,EAAanP,OACbyP,GAAoB5C,EAAc2C,EAAQ,WACvC,GAA2B,GAAvBL,EAAanP,OACpB,GAAIsP,GAA0BI,KAAKP,EAAa,IAC5C,IACI,MAAMtD,EAAUlF,KAAKC,MAAMuI,EAAa,IACxC,GAAI,QAAStD,EAAS,CAClB,MAAM8D,EAAe,CACjBC,IAAK/D,EAAQ+D,IACbtK,IAAKuG,EAAQvG,IACbuK,KAAMhE,EAAQgE,MAElBJ,GAAoB5C,EAAc2C,EAAQG,E,MAE1CnK,QAAQD,MAAM0J,EAAcpC,EAAcC,EAAcyC,E,CAE9D,MAAOhK,GACLC,QAAQD,MAAMA,GACdC,QAAQD,MAAM0J,EAAcpC,EAAcC,EAAcyC,E,MAEzD,IAAqC,GAAjCJ,EAAa,GAAG9E,QAAQ,KAAY,CAC3C,MAAM7D,EAAK,IAAIC,OAAO,oCAChBqJ,EAAQtJ,EAAGkI,KAAKS,EAAa,IACnC,GAAIW,EAAO,CACP,MAAMC,EAASD,EAAM,GACfE,EAAeF,EAAM,GAAG5U,MAAM,KAC9B+U,EAAUH,EAAM,GACtBE,EAAanT,SAAQxC,IACjBoV,GAAoB5C,EAAc2C,EAAQO,EAAS1V,EAAQ4V,EAAQ,G,OAGxE,IAAqC,GAAjCd,EAAa,GAAG9E,QAAQ,KAAY,CAC3C,MAAM7D,EAAK,IAAIC,OAAO,+CAChByJ,EAAM,IAAIzJ,OAAO,oBACjBqJ,EAAQtJ,EAAGkI,KAAKS,EAAa,IACnC,GAAIW,EAAO,CACP,MAAMC,EAASD,EAAM,GACfK,EAAanL,OAAO8K,EAAM,IAC1BM,EAAWpL,OAAO8K,EAAM,IAC9B,IAAID,EAAOM,EACPF,EAAUH,EAAM,GACpB,GAAIG,EAAS,CACT,MAAMI,EAASH,EAAIxB,KAAKuB,GACpBI,IACAR,EAAO7K,OAAOqL,EAAO,IACrBJ,EAAUI,EAAO,G,CAGzB,IAAK,IAAIpQ,EAAIkQ,EAAYlQ,EAAImQ,EAAUnQ,EAAIqQ,GAAWrQ,EAAG4P,EAAMO,GAC3DX,GAAoB5C,EAAc2C,EAAQO,EAAS9K,OAAOhF,GAAKgQ,GAEnER,GAAoB5C,EAAc2C,EAAQO,EAAS9K,OAAOmL,GAAYH,E,MAEtER,GAAoB5C,EAAc2C,EAAQL,EAAa,G,MAG3DM,GAAoB5C,EAAc2C,EAAQL,EAAa,SAG3D3J,QAAQD,MAAM0J,EAAcpC,EAAcC,EAAcyC,GAExDA,GACAA,EAAUrU,MAAM,KAAK2B,SAAQ0T,IACzBd,GAAoB3C,EAAc0C,EAAQe,EAAE,GAGxD,CAEM,SAAUC,GACZtM,EACAF,EACAiF,GAEA,IACI,MAAM1F,EAAkBW,EAAeX,gBACjCH,EAAec,EAAed,aAC9BC,EAAaa,EAAeb,WAC5BC,EAAaY,EAAeZ,WAElCF,EAAasH,OAAO,EAAGtH,EAAapD,QACpCqD,EAAWqH,OAAO,EAAGrH,EAAWrD,QAEhC,MAAMyQ,EAAU,CAACzM,EAAexD,gBAAiBwD,EAAehD,gBAAiBgD,EAAe3C,oBAChG,IAAK,MAAMqP,KAAUD,EAAQnH,QAAOC,GAAKA,IAAI,CACzC,GAAI,aAAcmH,EACd,IAAK,MAAM5V,KAAOF,OAAOC,KAAM6V,EAAe,aACpC5V,KAAOyI,IACTA,EAAgBzI,GAAQ4V,EAAe,YAAY5V,IAK/D,GAAI,WAAY4V,GAAU,aAAeA,EAAe,UACpD,IAAK,MAAM5V,KAAOF,OAAOC,KAAM6V,EAAe,UAAU,aAC9C5V,KAAOyI,IACTA,EAAgBzI,GAAQ4V,EAAe,UAAU,YAAY5V,G,CAM7E,IAAK,MAAM6V,IAAkB,CAAC3M,EAAe1C,wBAAyB0C,EAAezC,qBAAsByC,EAAexC,4BACtH,GAAImP,EAAgB,CAChB,MAAM9D,EAAsD8D,EAAe7E,GACrEgB,EAA6C6D,EAAeC,GAElE/D,EAAahQ,SAAQ,CAACxC,EAAiCS,KACnD,GAAa,MAATT,EACsD,GAAlD+I,EAAakG,QAAOC,GAAKA,EAAExH,MAAQjH,IAAKkF,QACxCoD,EAAa4C,KAAK,CAAEjE,KAAMjH,SAE3B,GAAIgF,MAAMmN,QAAQ5S,IACrB,GAAoD,GAAhDgJ,EAAWiG,QAAOC,GAAKA,EAAExH,MAAQjH,IAAKkF,OAAa,CACnD,MAAM6Q,EAAWxW,EAAM,GAAGiM,WAAW,aACrCjD,EAAW2C,KAAK,CACZjE,KAAMjH,EACNiM,QAAS1M,EACTwW,SAAUA,G,OAGf,GAAInW,IAAAA,cAAgBL,IAC6B,GAAhDiJ,EAAWgG,QAAOC,GAAKA,EAAExH,MAAQjH,IAAKkF,OAAa,CACnD,MAAM8K,EAAQ,CACV/I,KAAMjH,EACN8U,IAAMvV,EAAcuV,IACpBtK,IAAMjL,EAAciL,IACpBuK,KAAOxV,EAAcwV,MAEzBvM,EAAW0C,KAAK8E,E,CAGxB,GAAIhQ,KAAOyI,GAA2C,MAAxBA,EAAgBzI,GAAc,CACxD,MAAMgW,EAAahE,EAAa9E,IAAIlN,GACpC,GAAIgW,EACA,IAAK,MAAMvB,KAAauB,EACpB,GAAIvB,KAAahM,EAAiB,CAC9B,MAAMwN,EAAiBlE,EAAa7E,IAAIuH,GACxC,GAAuB,OAAnBwB,EACAxN,EAAgBgM,IAAa,OAC1B,GAAIzP,MAAMmN,QAAQ5S,GACrBkJ,EAAgBgM,GAAa,OAC1B,GAAI7U,IAAAA,cAAgBL,GAAQ,CAC/B,MAAM2W,EAAY3W,EAAcuV,KAC5BxV,EAAAA,EAAAA,IAAS4W,GACTzN,EAAgBgM,GAAayB,EAE7BzN,EAAgBgM,GAAa,C,QAOjD,GAAc,OAAVlV,EAAgB,CAChB,IAAI4W,GAAU,EACd,MAAMC,EAAMpE,EAAa9E,IAAIlN,GACzBoW,GAAOA,EAAI5H,QAAOC,GAAKhG,EAAgBgG,KAAIvJ,OAAS,IACpDiR,GAAU,GAEd1N,EAAgBzI,GAAOmW,C,MACpB,GAAInR,MAAMmN,QAAQ5S,GAAQ,CAC7B,IAAI8W,EAAgB9W,EAAM2F,OAAS,EACnC,MAAMkR,EAAMpE,EAAa9E,IAAIlN,GACzBoW,GAAOA,EAAI5H,QAAOC,GAAKhG,EAAgBgG,KAAIvJ,OAAS,IACpDmR,EAAgB,GAEpB5N,EAAgBzI,GAAOqW,C,MACpB,GAAIzW,IAAAA,cAAgBL,GAAQ,CAC/B,MAAM2W,EAAY3W,EAAcuV,KAC5BxV,EAAAA,EAAAA,IAAS4W,GACTzN,EAAgBzI,GAAOkW,EAEvBzN,EAAgBzI,GAAO,C,KAQ/C,GAAImO,EAAY3E,mBAAoB,CAChC,MAAMuI,EAAmD,IAAIpQ,IACvDqQ,EAA6C,IAAIrQ,IACvD,IAAK,MAAM3B,KAAOF,OAAOC,KAAKsP,EAAAA,IAA6B,CACvD,IAAKlB,EAAY3E,mBAAmBf,gBAAgBzI,GAAM,SAC1D,MAAM4V,EAAUvG,EAAAA,GAAmCrP,GACnD,GAAK4V,EAAO3E,GACZ,IAAK,MAAMgB,KAAa2D,EAAO3E,GACtBgB,EAAUjB,IACfkB,GAAiCD,EAAUjB,GAAIe,EAAcC,E,CAGrED,EAAahQ,SAAQ,CAACxC,EAAiCS,KACnD,GAAa,MAATT,EACsD,GAAlD+I,EAAakG,QAAOC,GAAKA,EAAExH,MAAQjH,IAAKkF,QACxCoD,EAAa4C,KAAK,CAAEjE,KAAMjH,SAE3B,GAAIgF,MAAMmN,QAAQ5S,IAC+B,GAAhDgJ,EAAWiG,QAAOC,GAAKA,EAAExH,MAAQjH,IAAKkF,OAAa,CACnD,MAAM6Q,EAAWxW,EAAM,GAAGiM,WAAW,aACrCjD,EAAW2C,KAAK,CACZjE,KAAMjH,EACNiM,QAAS1M,EACTwW,SAAUA,G,CAKtB,GAAI/V,KAAOyI,GAA2C,MAAxBA,EAAgBzI,GAAc,CACxD,MAAMgW,EAAahE,EAAa9E,IAAIlN,GACpC,GAAIgW,EACA,IAAK,MAAMvB,KAAauB,EACpB,GAAIvB,KAAahM,EAAiB,CAC9B,MAAMwN,EAAiBlE,EAAa7E,IAAIuH,GACjB,OAAnBwB,EACAxN,EAAgBgM,IAAa,EACtBzP,MAAMmN,QAAQ5S,KACrBkJ,EAAgBgM,GAAa,E,OAM7C,GAAc,OAAVlV,EAAgB,CAChB,IAAI4W,GAAU,EACd,MAAMC,EAAMpE,EAAa9E,IAAIlN,GACzBoW,GAAOA,EAAI5H,QAAOC,GAAKhG,EAAgBgG,KAAIvJ,OAAS,IACpDiR,GAAU,GAEd1N,EAAgBzI,GAAOmW,C,MACpB,GAAInR,MAAMmN,QAAQ5S,GAAQ,CAC7B,IAAI8W,EAAgB9W,EAAM2F,OAAS,EACnC,MAAMkR,EAAMpE,EAAa9E,IAAIlN,GACzBoW,GAAOA,EAAI5H,QAAOC,GAAKhG,EAAgBgG,KAAIvJ,OAAS,IACpDmR,EAAgB,GAEpB5N,EAAgBzI,GAAOqW,C,MAKzC,MAAO5L,GACLC,QAAQD,MAAMrB,EAAgBF,E,CAGtC,CAEM,SAAUoN,GAAatU,EAAcF,GACvC,IAAIkI,EACJ,GAAIhI,KAAQF,EACRkI,EAASlI,EAASE,OACf,CACH,MAAM0J,EAAK,gBACLsJ,EAAQtJ,EAAGkI,KAAK5R,GACtB,GAAIgT,GACIA,EAAM,KAAMlT,EAAU,CACtBkI,EAASlI,EAASkT,EAAM,IACxB,IAAIuB,EAAIrM,OAAO8K,EAAM,IACrB,IAAK,IAAI7P,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,GAAKoR,EAAI,GAAM,EAAG,CACd,MAAMC,EAAgBxB,EAAM,GAAK,IAAM7P,EACnCqR,KAAS1U,IACTkI,GAAUlI,EAAS0U,G,CAG3BD,EAAIhM,KAAKkM,MAAMF,EAAI,E,GASnC,YAJeG,IAAX1M,IACAU,QAAQiM,KAAK3U,EAAMF,GACnBkI,EAAS,GAENA,CACX,CAEM,SAAU4M,GACZxN,EACAF,EACApH,GAEA,IAAK,MAAM+T,IAAkB,CAAC3M,EAAe1C,wBAAyB0C,EAAezC,qBAAsByC,EAAexC,4BACtH,GAAImP,EAAgB,CAChB,MAAM9D,EAAsD8D,EAAe7E,GAC3Ee,EAAahQ,SAAQ,CAACxC,EAAiCS,KACnD,GAAIJ,IAAAA,cAAgBL,GAAQ,CACxB,MAAMsX,EAAiBzN,EAAeZ,WAAWgG,QAAOC,GAAKA,EAAExH,MAAQjH,IACvE,GAAI6W,EAAe3R,OAAS,EAAG,CAC3B,IAAIgR,EAAY3W,EAAcuV,IAC1BgC,EAAYvX,EAAciL,IAC9B,IAAI5K,IAAAA,SAAWsW,IAAatW,IAAAA,SAAWkX,MAC/BlX,IAAAA,SAAWsW,KACXA,EAAWI,GAAaJ,EAAUpU,IAElClC,IAAAA,SAAWkX,KACXA,EAAWR,GAAaQ,EAAUhV,IAEtC+U,EAAe,GAAG/B,IAAMoB,EACxBW,EAAe,GAAGrM,IAAMsM,EACpB9W,KAAOoJ,EAAeX,iBAAiB,CACvC,MAAMlJ,EAAQ6J,EAAeX,gBAAgBzI,GACzCJ,IAAAA,SAAWL,KACPA,EAAQ2W,EACR9M,EAAeX,gBAAgBzI,GAAOkW,OAClBQ,IAAbI,GAA0BvX,EAAQuX,IACzC1N,EAAeX,gBAAgBzI,GAAO8W,G,OAU9E,CAEA,SAASnC,GAAoBoC,EAAoB/W,EAAUT,GACvD,GAAa,MAATA,EACKwX,EAAI9J,IAAIjN,IACT+W,EAAI3E,IAAIpS,EAAK,WAEd,GAAIJ,IAAAA,SAAWL,GAClB,GAAIwX,EAAI9J,IAAIjN,GAAM,CACd,MAAMgX,EAAWD,EAAI7J,IAAIlN,GACT,MAAZgX,EACAD,EAAI3E,IAAIpS,EAAK,CAACT,IACPyF,MAAMmN,QAAQ6E,GAChBA,EAAS/W,SAASV,IACnBwX,EAAI7J,IAAIlN,GAAKkL,KAAK3L,GAGtBmL,QAAQD,MAAMsM,EAAK/W,EAAKT,E,MAG5BwX,EAAI3E,IAAIpS,EAAK,CAACT,SAEXK,IAAAA,cAAgBL,IACvBwX,EAAI3E,IAAIpS,EAAKT,EAErB,CAEA,SAAS0X,GAAiB1X,GACtB,MAAM6W,GAAO,GAAK7W,GAAOa,MAAM,KAC/B,OAAOgW,EAAIlR,OAAS,EAAIkR,EAAI,GAAGlR,OAAS,CAC5C,CAEM,SAAUgS,GAAgBC,EAAgBC,GAC5C,MAAMC,EAAgBJ,GAAiBE,GAAUF,GAAiBG,GAC5DE,EAAYpN,QAAQ,GAAKiN,GAAQ/M,QAAQ,IAAK,KAC9CmN,EAAYrN,QAAQ,GAAKkN,GAAQhN,QAAQ,IAAK,KAC9CJ,EAAUsN,EAAYC,EAAahN,KAAKiN,IAAI,GAAIH,GACtD,OAAOnN,OAAOF,EAClB,CAEM,SAAUwL,GAAW2B,EAAgBC,EAAgBK,GACvD,MAAMC,EAAInN,KAAKiN,IAAI,GAAIjN,KAAKC,IAAIyM,GAAiBE,GAASF,GAAiBG,KAC3E,IAAIpN,GAAUkN,GAAgBC,EAAQO,GAAKR,GAAgBE,EAAQM,IAAMA,EAIzE,YAHehB,GAAXe,IACAzN,EAASO,KAAKuK,IAAI9K,EAAQyN,IAEvBzN,CACX,CAEA,SAASqJ,GACLsE,EACAC,EAAiC,MAEjC,MAAM5D,EAAY,GACZtI,EAAK,IAAIC,OAAO,uCACtB,IAAIkM,EAAU1N,OAAOwN,GAErB,MAAO,EAAM,CACT,MAAM3C,EAAQtJ,EAAGkI,KAAKiE,GACtB,IAAK7C,EAAO,CACRhB,EAAU9I,KAAK2M,GACf,K,CAMJ,GAJI7C,EAAM,IACNhB,EAAU9I,KAAK8J,EAAM,IAEzBhB,EAAU9I,KAAK4M,GAAqB9C,EAAM,GAAI4C,KACzC5C,EAAM,GACP,MAEJ6C,EAAU7C,EAAM,E,CAEpB,OAAOhB,CACX,CAEA,SAAS8D,GACLH,EACAC,EAAiC,MAEjC,MAAM5D,EAAY,GAClB,IAAI1U,EAAAA,EAAAA,IAASqY,GACT3D,EAAU9I,KAAKhB,OAAOyN,QACnB,CACH,MAAMI,EAAUJ,EAAsBvX,MAAM,KACvB,GAAjB2X,EAAO7S,OACP8O,EAAU9I,KAAK6M,EAAO,KAEtB/D,EAAU9I,KAAKhB,OAAO6N,EAAO,IAAM,KACnC/D,EAAU9I,KAAK,KACX6M,EAAO,GAAG7S,OAAS,EACnB8O,EAAU9I,KAAK6M,EAAO,IACI,MAAnBH,GACP5D,EAAU9I,KAAK0M,G,CAI3B,OAAO5D,CACX,CAEM,SAAUgE,GAAcC,GAC1B,MAAMC,EAAe,GAErB,IAAIzS,EACA6I,EAkDJ,OAhDAc,EAAAA,GAAqBrN,SAAQ,CAACxC,EAAOS,KACjC,IACImY,EADAC,EAAWH,EAASjY,GAExB,OAAQA,GACJ,IAAK,SACDyF,EAAY2S,EACZD,GAAajY,EAAAA,EAAAA,IAASuP,EAAAA,GAAiBhK,GAAW,WAClD2S,EAAWD,EAAW/X,MAAM,KAAK+X,EAAW/X,MAAM,KAAK8E,OAAS,GAChE,MACJ,IAAK,KACDoJ,EAAamB,EAAAA,GAAiBhK,GAAW,MACzC0S,GAAajY,EAAAA,EAAAA,IAAUqO,EAAAA,GAAsBD,GAAY8J,GAAU,WACnEA,EAAWD,EAAW/X,MAAM,KAAK+X,EAAW/X,MAAM,KAAK8E,OAAS,GAChE,MACJ,IAAK,YACL,IAAK,YACe,QAAZkT,EACAA,EAAW,IAEXD,GAAajY,EAAAA,EAAAA,IAAS2M,EAAAA,GAAoBuL,GAA6B,UACvEA,EAAWD,EAAW/X,MAAM,KAAK+X,EAAW/X,MAAM,KAAK8E,OAAS,IAEpE,MACJ,IAAK,YACL,IAAK,YACL,IAAK,YACL,IAAK,YACL,IAAK,YACGkT,IACAA,EAAWA,EAAShY,MAAM,KAAK,GAAK,IAAMiY,EAAAA,GAA+BnL,IAAIkL,EAAShY,MAAM,KAAK,KAErG,MACJ,IAAK,eACL,IAAK,eACL,IAAK,eACGgY,IACAA,EAAWC,EAAAA,GAA+BnL,IAAIkL,IAElD,MAERF,EAAahN,KAAKkN,EAAS,IAE/BtY,OAAOC,KAAKkY,GAAUlW,SAAQ/B,IACrBoP,EAAAA,GAAqBnC,IAAIjN,IAC1BkY,EAAahN,KAAKlL,EAAM,IAAMiY,EAASjY,G,IAIxCkY,EAAaI,KAAK,IAC7B,CAEA,SAASC,GAAYC,EAAcC,EAAaC,EAAuBC,GACnE,MAAMC,EAAU,oCACVC,EAAS,IAAIC,gBACnBD,EAAOE,OAAO,OAAQP,GACtBK,EAAOE,OAAO,MAAON,GACjBC,GACAG,EAAOE,OAAO,WAAYL,GAE1BC,GACAE,EAAOE,OAAO,MAAOJ,GAEzB,MAAMK,EAAQH,EAAOI,WACfC,EAAW,GAAGN,IAAUI,IAC9BtO,QAAQW,IAAIwN,GACZnO,QAAQW,IAAI6N,GACZC,OAAOC,KAAKF,EAChB,CAEM,SAAUG,GACZnQ,EACAC,EACAC,GAEA,MAAM6O,EAAWnI,GAAa5G,EAAgBC,EAAqBC,GAC7DkQ,EAAYtB,GAAcC,GAE1BO,EAAOtP,EAAetC,UACtB2S,EAAUC,UAAUF,GACpBb,EAAM,4CAAmDc,EAE/DhB,GAAYC,EAAMC,EACtB,CAEM,SAAUgB,GAAoB/T,GAChC,IAAI8E,EAAM,EAIV,MAHI,SAAU9E,IACV8E,EAAM1K,OAAOC,KAAK2F,EAAgBG,MAAMX,QAErCsF,CACX,CAEM,SAAUkP,GAAkBhU,EAAmC1F,GACjE,IAAIwK,EAAM,GACV,GAAIxK,KAAO0F,EAAiB,CACxB,MAAMiU,EAAajU,EAAwB1F,GAC3C,GAAI,OAAQ2Z,EACR,IAAK,MAAM1H,KAAa0H,EAAU1I,GAC9B,GAAI,OAAQgB,GAAarS,IAAAA,cAAgBqS,EAAUX,IAAK,CACpD,MAAMsI,EAAO9Z,OAAOC,KAAKkS,EAAUX,IAAIpM,OACnCsF,EAAMoP,IAAMpP,EAAMoP,E,EAKtC,OAAOpP,CACX,CAEM,SAAUqP,GAAuBpU,EAAmCmB,EAAoBkT,EAAiBC,GAC3GC,eAAeC,QAAQ,YAAaxU,GAChCmB,GACAoT,eAAeC,QAAQ,YAAarT,GAEpCkT,GACAE,eAAeC,QAAQ,YAAapO,KAAKqO,UAAUJ,IAEnDC,GACAC,eAAeC,QAAQ,cAAepO,KAAKqO,UAAUH,GAE7D,CAEM,SAAUI,KACZ,MAAMnQ,EAAiG,MAAC0M,OAAWA,OAAWA,OAAWA,GACnIjR,EAAYuU,eAAeI,QAAQ,aACzC,GAAI3U,EAAW,CACXuE,EAAO,GAAKvE,EACZ,MAAMmB,EAAYoT,eAAeI,QAAQ,aACrCxT,IACAoD,EAAO,GAAKpD,GAEhB,MAAMkT,EAAYE,eAAeI,QAAQ,aACrCN,IACA9P,EAAO,GAAK6B,KAAKC,MAAMgO,IAE3B,MAAMC,EAAcC,eAAeI,QAAQ,eACvCL,IACA/P,EAAO,GAAK6B,KAAKC,MAAMiO,IAE3BrP,QAAQW,IAAI5F,EAAWmB,EAAWkT,EAAWC,E,CAMjD,OAJAC,eAAeK,WAAW,aAC1BL,eAAeK,WAAW,aAC1BL,eAAeK,WAAW,aAC1BL,eAAeK,WAAW,eACnBrQ,CACX,C,0FCvkEA,MAAMsQ,EAAe/D,KAAMgE,EAAAA,EAAAA,IAAa,mBAAmBhE,EAAEA,KAAIiE,EAAAA,EAAAA,MAAcjE,GACzEkE,EAAa,CAAEC,MAAO,YACtBC,EAAa,CACjB3a,IAAK,EACL0a,MAAO,YAEHE,EAAa,CACjBF,MAAO,cACPG,MAAO,CAAC,MAAQ,QAEZC,EAAa,CAAEJ,MAAO,WACtBK,EAAa,CACjB/a,IAAK,EACL0a,MAAO,6BAEHM,EAAa,CACjBhb,IAAK,EACL0a,MAAO,6BAEHO,EAAa,CAAEP,MAAO,gBACtBQ,EAAa,CAAC,MAAO,OACrBC,EAAa,CAAET,MAAO,WACtBU,EAAc,CAClBpb,IAAK,EACL0a,MAAO,iBAEHW,EAAc,CAAC,SACfC,EAAc,CAAC,QACfC,EAAc,CAClBvb,IAAK,EACL0a,MAAO,WACPG,MAAO,CAAC,OAAS,UAEbW,EAAc,CAAExb,IAAK,GACrByb,EAA4BnB,GAAa,KAAmBoB,EAAAA,EAAAA,GAAoB,SAAU,CAAEnc,MAAO,KAAO,QAAS,KACnHoc,EAA4BrB,GAAa,KAAmBoB,EAAAA,EAAAA,GAAoB,SAAU,CAAEnc,MAAO,KAAO,QAAS,KACnHqc,EAAc,CAClBH,EACAE,GAEIE,EAAc,CAAE7b,IAAK,GACrB8b,EAAc,CAAEjB,MAAO,CAAC,MAAQ,QAChCkB,EAAc,CAAErB,MAAO,oBACvBsB,EAAc,CAAEtB,MAAO,SACvBuB,EAAc,CAAC,uBACfC,EAAc,CAAC,QAAS,YACxBC,EAAc,CAAEzB,MAAO,SACvB0B,EAAc,CAAC,sBAAuB,QACtCC,EAAc,CAAErc,IAAK,GACrBsc,EAAc,CAClB5B,MAAO,cACPG,MAAO,CAAC,MAAQ,QAEZ0B,EAAc,CAClBvc,IAAK,EACL0a,MAAO,SAEH8B,EAAc,CAAE9B,MAAO,WACvB+B,EAAc,CAClBzc,IAAK,EACL0c,KAAM,UAEFC,EAAc,CAClB3c,IAAK,EACL0a,MAAO,4BACPG,MAAO,CAAC,MAAQ,WAEZ+B,EAAc,CAClB5c,IAAK,EACL0a,MAAO,6BAEHmC,EAAc,CAAEnC,MAAO,gBACvBoC,EAAc,CAAC,MAAO,OACtBC,EAAc,CAAErC,MAAO,WACvBsC,EAAc,CAClBtC,MAAO,WACPG,MAAO,CAAC,OAAS,UAEboC,EAAc,CAAEpC,MAAO,CAAC,MAAQ,QAChCqC,EAAc,CAAExC,MAAO,oBAEvB,SAAUyC,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMC,GAA+BC,EAAAA,EAAAA,IAAkB,qBAEvD,OAAQC,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAOpD,EAAY,CAC1C,YAAhB2C,EAAKU,UACDF,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,QAASlD,EAAY,EACtDe,EAAAA,EAAAA,GAAoB,KAAM,KAAM,EAC9BA,EAAAA,EAAAA,GAAoB,KAAMd,EAAY,EACpCc,EAAAA,EAAAA,GAAoB,MAAOZ,EAAY,EACrCY,EAAAA,EAAAA,GAAoB,SAAU,CAC5BgB,KAAM,SACNqB,QAASV,EAAO,KAAOA,EAAO,GAAMW,GAAiBZ,EAAKa,WAAab,EAAKa,YAC3E,CACAb,EAAKa,YACDL,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,OAAQ9C,EAAY,iBACtD6C,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,OAAQ7C,EAAY,gBAG/DU,EAAAA,EAAAA,GAAoB,MAAOT,EAAY,EACrCS,EAAAA,EAAAA,GAAoB,MAAO,CACzBhB,MAAO,gBACP/a,IAAKyd,EAAKc,eACVC,IAAKf,EAAKgB,YAAYhB,EAAKiB,eAAepX,MAC1C8W,QAASV,EAAO,KAAOA,EAAO,GAAMW,GAAiBZ,EAAKkB,wBACzD,KAAM,EAAGpD,IACZQ,EAAAA,EAAAA,GAAoB,MAAOP,GAAYoD,EAAAA,EAAAA,IAAiBnB,EAAKgB,YAAYhB,EAAKiB,eAAepX,OAAQ,KAEtGmW,EAAKa,YACDL,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAOzC,EAAa,EACrDoD,EAAAA,EAAAA,KAAgB9C,EAAAA,EAAAA,GAAoB,SAAU,CAC5C,sBAAuB2B,EAAO,KAAOA,EAAO,GAAMW,GAAkBZ,EAAKiB,eAAehX,SAAY2W,GACpGS,SAAUpB,EAAO,KAAOA,EAAO,GAErD,IAAIqB,IAAUtB,EAAKqB,UAAYrB,EAAKqB,YAAYC,KACzB,GACAd,EAAAA,EAAAA,KAAW,IAAOC,EAAAA,EAAAA,IAAoBc,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,IAAYxB,EAAKyB,iBAAkBC,KACjFlB,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,SAAU,CAClD7d,IAAK8e,EACLvf,MAAOuf,IACNP,EAAAA,EAAAA,IAAiBnB,EAAKgB,YAAYU,IAAU,EAAGzD,MAChD,OACH,KAAM,CACP,CAAC0D,EAAAA,GAAe3B,EAAKiB,eAAehX,aAEtCmX,EAAAA,EAAAA,KAAgB9C,EAAAA,EAAAA,GAAoB,QAAS,CAC3CgB,KAAM,SACN,sBAAuBW,EAAO,KAAOA,EAAO,GAAMW,GAAkBZ,EAAKiB,eAAe/W,cAAiB0W,GACzGjJ,KAAMqI,EAAK4B,SAAS5B,EAAKiB,eAAehX,UACxCyN,IAAK,IACL2J,SAAUpB,EAAO,KAAOA,EAAO,GAErD,IAAIqB,IAAUtB,EAAKqB,UAAYrB,EAAKqB,YAAYC,KACzB,KAAM,GAAIpD,GAAc,CACzB,CAAC2D,EAAAA,GAAa7B,EAAKiB,eAAe/W,sBAGrCsW,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAOtC,GAAagD,EAAAA,EAAAA,IAAiBnB,EAAKgB,YAAYhB,EAAKiB,eAAehX,UAAU+C,QAAQ,KAAM,IAAM,IAAMgT,EAAK8B,iBAAiB9B,EAAKiB,eAAehX,SAC7L+V,EAAKiB,eAAe/W,gBAAiB,IACtC8V,EAAKa,YACDL,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAOrC,EAAa,EACrDgD,EAAAA,EAAAA,KAAgB9C,EAAAA,EAAAA,GAAoB,SAAU,CAC5ChB,MAAO,OACP,sBAAuB2C,EAAO,KAAOA,EAAO,GAAMW,GAAkBZ,EAAKiB,eAAenX,OAAU8W,GAClGS,SAAUpB,EAAO,KAAOA,EAAO,GAErD,IAAIqB,IAAUtB,EAAK+B,cAAgB/B,EAAK+B,gBAAgBT,KACjC9C,EAAa,KAAM,CACpB,CAACmD,EAAAA,GAAe3B,EAAKiB,eAAenX,eAGvC0W,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAOhC,EAAa,GACpD+B,EAAAA,EAAAA,KAAW,IAAOC,EAAAA,EAAAA,IAAoBc,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,IAAY,IAAI5Z,MAAMoY,EAAKiB,eAAenX,SAAUkY,KAClGxB,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAO,CAC/CnD,MAAO,OACP/a,IAAK,kBACLK,IAAKof,OAEL,YAGZ1D,EAAAA,EAAAA,GAAoB,KAAMI,EAAa,EACrCJ,EAAAA,EAAAA,GAAoB,QAASK,EAAa,GACvC6B,EAAAA,EAAAA,KAAW,IAAOC,EAAAA,EAAAA,IAAoBc,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,IAAYxB,EAAKiB,eAAe9W,UAAU,CAAC8X,EAAS3R,MAClGkQ,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,KAAM,CAAE7d,IAAK0N,GAAS,CAC7D0P,EAAKa,YACDL,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoBc,EAAAA,GAAW,CAAE3e,IAAK,GAAK,EACxD0b,EAAAA,EAAAA,GAAoB,KAAMM,EAAa,EACrCwC,EAAAA,EAAAA,KAAgB9C,EAAAA,EAAAA,GAAoB,SAAU,CAC5C,sBAAwBsC,GAAkBqB,EAAQpY,KAAQ+W,EAC1DS,SAAUpB,EAAO,KAAOA,EAAO,GAE7D,IAAIqB,IAAUtB,EAAKqB,UAAYrB,EAAKqB,YAAYC,KACjB,GACAd,EAAAA,EAAAA,KAAW,IAAOC,EAAAA,EAAAA,IAAoBc,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,IAAYxB,EAAKkC,gBAAiBR,KAChFlB,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,SAAU,CAClD7d,IAAK8e,EACLvf,MAAOuf,EACPS,SAAUnC,EAAKoC,sBAAsBV,EAAQO,EAAQpY,QACpDsX,EAAAA,EAAAA,IAAiBnB,EAAKgB,YAAYU,IAAU,EAAG5C,MAChD,OACH,GAAID,GAAc,CACnB,CAAC8C,EAAAA,GAAeM,EAAQpY,WAG5ByU,EAAAA,EAAAA,GAAoB,KAAMS,EAAa,EACrCqC,EAAAA,EAAAA,KAAgB9C,EAAAA,EAAAA,GAAoB,QAAS,CAC3CgB,KAAM,SACN,sBAAwBsB,GAAkBqB,EAAQ9f,MAASye,EAC3DjJ,KAAMqI,EAAK4B,SAASK,EAAQpY,MAC5B6N,IAAK,IACL2J,SAAUpB,EAAO,KAAOA,EAAO,GAE7D,IAAIqB,IAAUtB,EAAKqB,UAAYrB,EAAKqB,YAAYC,KACjB,KAAM,GAAItC,GAAc,CACzB,CAAC6C,EAAAA,GAAaI,EAAQ9f,YAGzB,OACFqe,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,KAAMxB,GAAakC,EAAAA,EAAAA,IAAiBnB,EAAKgB,YAAYiB,EAAQpY,MAAMmD,QAAQ,KAAM,IAAM,IAAMgT,EAAK8B,iBAAiBG,EAAQpY,KAAMoY,EAAQ9f,QAAS,SAEzL,iBAKXqe,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,QAAS,CAC1C7d,IAAK,EACL0a,MAAO,WACPqD,QAASV,EAAO,MAAQA,EAAO,IAAOW,GAAiBZ,EAAKqC,kBAC3D,EACD/D,EAAAA,EAAAA,GAAoB,KAAM,KAAM,EAC9BA,EAAAA,EAAAA,GAAoB,KAAMY,EAAa,CACpCc,EAAKsC,QACD9B,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAOtB,GAAagC,EAAAA,EAAAA,IAAiBhU,KAAKoV,MAAmB,GAAbvC,EAAKsC,OAAc,IAAK,KAC3GE,EAAAA,EAAAA,IAAoB,IAAI,IAC5BlE,EAAAA,EAAAA,GAAoB,MAAOc,EAAa,CACrB,cAAhBY,EAAKU,UACDF,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,SAAUpB,EAAa,CACvDW,EAAKyC,WACDjC,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,OAAQlB,EAAa,yBACvDiB,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,OAAQjB,EAAa,kCAE9DgD,EAAAA,EAAAA,IAAoB,IAAI,MAE9BlE,EAAAA,EAAAA,GAAoB,MAAOmB,EAAa,EACtCnB,EAAAA,EAAAA,GAAoB,MAAO,CACzBhB,MAAO,gBACP/a,IAAKyd,EAAKc,eACVC,IAAKf,EAAKgB,YAAYhB,EAAKiB,eAAepX,OACzC,KAAM,EAAG6V,IACZpB,EAAAA,EAAAA,GAAoB,MAAOqB,GAAawB,EAAAA,EAAAA,IAAiBnB,EAAKgB,YAAYhB,EAAKiB,eAAepX,OAAQ,MAExGyU,EAAAA,EAAAA,GAAoB,MAAOsB,GAAauB,EAAAA,EAAAA,IAAiBnB,EAAKgB,YAAYhB,EAAKiB,eAAehX,UAAU+C,QAAQ,KAAM,IAAM,IAAMgT,EAAK8B,iBAAiB9B,EAAKiB,eAAehX,SAC1K+V,EAAKiB,eAAe/W,gBAAiB,IACvCoU,EAAAA,EAAAA,GAAoB,MAAO,KAAM,GAC9BkC,EAAAA,EAAAA,KAAW,IAAOC,EAAAA,EAAAA,IAAoBc,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,IAAY,IAAI5Z,MAAMoY,EAAKiB,eAAenX,SAAUkY,KAClGxB,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAO,CAC/CnD,MAAO,OACP/a,IAAK,kBACLK,IAAKof,OAEL,WAGR1D,EAAAA,EAAAA,GAAoB,KAAMuB,EAAa,EACrCvB,EAAAA,EAAAA,GAAoB,QAASwB,EAAa,GACvCU,EAAAA,EAAAA,KAAW,IAAOC,EAAAA,EAAAA,IAAoBc,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,IAAYxB,EAAKiB,eAAe9W,UAAU,CAAC8X,EAAS3R,MAClGkQ,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,KAAM,CAAE7d,IAAK0N,GAAS,EAC9DgO,EAAAA,EAAAA,GAAoB,KAAM,MAAM6C,EAAAA,EAAAA,IAAiBnB,EAAKgB,YAAYiB,EAAQpY,MAAMmD,QAAQ,KAAM,IAAM,IAAMgT,EAAK8B,iBAAiBG,EAAQpY,KAAMoY,EAAQ9f,QAAS,QAE/J,gBAKhBif,EAAAA,EAAAA,KAAgB9C,EAAAA,EAAAA,GAAoB,MAAO,KAAM,EAC/CoE,EAAAA,EAAAA,IAAapC,EAA8B,CACzCqC,SAAS,EACTrS,MAAO,EACP,eAAgB0P,EAAK4C,SAAS7Y,QAC9B,uBAAwBiW,EAAK7W,mBAC7Ba,OAAQgW,EAAK4C,SAAS5Y,OACtB,uBAAwBgW,EAAK6C,mBAC5B,KAAM,EAAG,CAAC,eAAgB,uBAAwB,SAAU,0BAC9D,KAAM,CACP,CAACC,EAAAA,GAAQ9C,EAAK+C,eAGpB,C,mFCtQA,IAAeC,EAAAA,EAAAA,IAAgB,CAC7BnZ,KAAM,eACNoZ,MAAO,CACLL,SAAU,CAAEtD,KAAM5c,OAA+BiW,UAAU,GAC3DuK,GAAI,CAAE5D,KAAMxS,QACZ4T,QAAS3T,OACToW,QAASC,QACTX,SAAUW,QACVd,MAAOxV,QAETuW,WAAY,CACVC,kBAAiBA,EAAAA,GAEnBC,MAAO,CAAC,kBAAmB,mBAC3BC,KAAAA,CAAMP,EAAOQ,GACX,MAAM,YAAEzC,EAAW,iBAAEc,EAAgB,QAAE4B,IAAYC,EAAAA,EAAAA,KAE7C1C,GAAiB2C,EAAAA,EAAAA,IAASphB,IAAAA,UAAYygB,EAAML,WAC5CzZ,GAAqBya,EAAAA,EAAAA,IAAS,CAAC5b,EAAAA,GAA2BA,EAAAA,KAC1D6Y,GAAYgD,EAAAA,EAAAA,KAAI,GAChBC,GAAaD,EAAAA,EAAAA,KAAI,GACjBd,GAAac,EAAAA,EAAAA,KAAI,GAEjB/C,GAAiBiD,EAAAA,EAAAA,KAAS,KACvBC,EAAAA,EAAAA,IAAmB/C,EAAelX,QAASkX,EAAejX,UAG7Dia,EAAmB,CACvB,EAAKrc,MAAMC,KAAK,IAAIqc,IAAInf,EAAAA,GAAkB4U,KAAItI,GAAKA,EAAErE,QAAQ,OAAQ,QACrE,EAAKpF,MAAMC,KAAK,IAAIqc,IAAIlf,EAAAA,GAAkB2U,KAAItI,GAAKA,EAAErE,QAAQ,OAAQ,QACrE,EAAKpF,MAAMC,KAAK,IAAIqc,IAAIjf,EAAAA,GAAkB0U,KAAItI,GAAKA,EAAErE,QAAQ,OAAQ,QACrE,EAAKpF,MAAMC,KAAK,IAAIqc,IAAIhf,EAAAA,GAAkByU,KAAItI,GAAKA,EAAErE,QAAQ,OAAQ,QACrE,EAAKpF,MAAMC,KAAK,IAAIqc,IAAI/e,EAAAA,GAAkBwU,KAAItI,GAAKA,EAAErE,QAAQ,OAAQ,SAGjEyU,GAAkBsC,EAAAA,EAAAA,KAAS,IACvBE,EAAyBhD,EAAejX,UAG5CkY,GAAiB6B,EAAAA,EAAAA,KAAS,IACvB3e,EAAAA,KAGHwc,EAAYhd,GACT8e,EAAQ9e,GAAQ,GAAM,EAGzBwd,EAAyBA,CAACjgB,EAAesgB,KAC7C,GAAItgB,GAASsgB,EAAU,OAAO,EAC9B,MAAMjG,EAAOyE,EAAe9W,SAASwP,KAAItI,GAAKA,EAAExH,OAChD,OAAO2S,EAAK3Z,SAASV,EAAM,EAGvBkf,EAAWA,KACfoC,EAAQU,KAAK,kBAAmBlB,EAAMC,GAAIjC,EAAe,EAGrDc,EAAeA,KACnBd,EAAenX,OAASgD,OAAOmU,EAAenX,OAAO,EAGjDoX,EAAsBA,KACtBL,EAAU1e,MACZ4gB,EAAW5gB,OAAS4gB,EAAW5gB,MAE/B4gB,EAAW5gB,OAAQ,C,EAIjBkgB,EAAgBA,KACE,eAAlBY,EAAMvC,SACR+C,EAAQU,KAAK,kBAAmBlB,EAAMC,G,EAIpCL,EAAqBpR,IACzBwP,EAAelX,QAAU0H,EACzB,MAAM+G,EAAS/I,EAAAA,GAAoBgC,GACnCwP,EAAenX,OAAS0O,EAAOvQ,MAC3B,kBAAmBuQ,IACrByI,EAAepX,KAAO2O,EAAOxN,cAAciW,EAAejX,OAAS,IAErE+Y,EAAW5gB,OAAQ,EACnBkf,GAAU,EAGZ,SAAS+C,SACe9K,IAAlB2J,EAAME,UACc,aAAlBF,EAAMvC,QACRG,EAAU1e,MAAQ8gB,EAAME,QACG,eAAlBF,EAAMvC,UACfoD,EAAW3hB,MAAQ8gB,EAAME,SAG/B,CAUA,OATAiB,KAEAC,EAAAA,EAAAA,IAAMpB,GAAO,CAACqB,EAAQC,MACpBliB,EAAAA,EAAAA,IAAgB4e,EAAgBqD,EAAO1B,UACnC0B,EAAOnB,SAAWoB,EAAOpB,SAC3BiB,G,IAIG,CACLpD,cAAac,mBAEbb,iBACA9X,qBACA0X,YACAiD,aACAf,aAEAjC,iBACAW,kBACAS,iBACAE,wBACAR,WAEAP,WACAU,eACAb,sBACA2B,oBACAR,gBAEJ,I,SC/HF,MAAMmC,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAASzE,GAAQ,CAAC,YAAY,qBAEzF,S,+ECPA,MACM1C,EAAa,CAAEza,IAAK,GACpB2a,EAAa,CAAED,MAAO,SACtBE,EAAa,CAAEF,MAAO,eACtBI,EAAa,CAAEJ,MAAO,eACtBK,EAAa,CAAC,MAAO,MAAO,WAC5BC,EAAa,CAAEN,MAAO,WAEtB,SAAUyC,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,OAAQL,EAAK2C,UACRnC,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAOpD,EAAY,EACpDiB,EAAAA,EAAAA,GAAoB,QAAS,KAAM,GAChCkC,EAAAA,EAAAA,KAAW,IAAOC,EAAAA,EAAAA,IAAoBc,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,IAAYxB,EAAKyE,oBAAqBC,KACpFlE,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoBc,EAAAA,GAAW,CAAE3e,IAAK8hB,GAAQ,EAClEpG,EAAAA,EAAAA,GAAoB,KAAM,KAAM,EAC9BA,EAAAA,EAAAA,GAAoB,KAAMf,GAAY4D,EAAAA,EAAAA,IAAiBnB,EAAKgB,YAAY0D,EAAK9hB,MAAO,MAEtF0b,EAAAA,EAAAA,GAAoB,KAAM,KAAM,EAC9BA,EAAAA,EAAAA,GAAoB,KAAMd,GAAY2D,EAAAA,EAAAA,IAAiBuD,EAAKviB,OAAQ,MAErE,OACD,SAENmc,EAAAA,EAAAA,GAAoB,KAAMZ,EAAY,GACnC8C,EAAAA,EAAAA,KAAW,IAAOC,EAAAA,EAAAA,IAAoBc,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,IAAYxB,EAAK2E,cAAeD,KAC9ElE,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,KAAM,CAC9CnD,MAAO,eACP1a,IAAK8hB,EAAK9hB,KACT,EACD0b,EAAAA,EAAAA,GAAoB,MAAO,CACzBhB,OAAOsH,EAAAA,EAAAA,IAAgB,eAAiB5E,EAAK6E,aAAaH,GAAQ1E,EAAK8E,cAAcJ,IACrFniB,IAAKyd,EAAKgE,mBAAmBU,EAAK9hB,IAAKod,EAAKhW,QAC5C+W,IAAK2D,EAAK9hB,IACV+d,QAAUC,GAAiBZ,EAAK+E,MAAM,sBAAuBL,EAAK9hB,MACjE,KAAM,GAAI+a,IACbW,EAAAA,EAAAA,GAAoB,MAAOV,GAAYuD,EAAAA,EAAAA,IAAiBnB,EAAKgB,YAAY0D,EAAK9hB,MAAO,QAErF,YAGR4f,EAAAA,EAAAA,IAAoB,IAAI,EAC9B,C,0CCjCA,GAAeQ,EAAAA,EAAAA,IAAgB,CAC7BnZ,KAAM,oBACNoZ,MAAO,CACLN,QAAS,CAAErD,KAAM8D,QAASzK,UAAU,GACpCrI,MAAO,CAAEgP,KAAMxS,OAAQ6L,UAAU,GACjClH,YAAa,CAAE6N,KAAMvS,OAAQ4L,UAAU,GACvCxP,mBAAoB,CAAEmW,KAAM1X,MAAwC+Q,UAAU,GAC9E3O,OAAQ,CAAEsV,KAAMxS,SAElByW,MAAO,CAAC,uBACRC,KAAAA,CAAMP,GACJ,MAAM,YAAEjC,IAAgB2C,EAAAA,EAAAA,KAElBkB,EAAgBH,GACnB,IAAMM,EAAAA,GAA4BN,EAAKzc,OACpC6c,EAAiBJ,GACdA,EAAK9hB,KAAOqgB,EAAMxR,YAAc,YAAc,GAEjDwT,GAAwBrB,EAAAA,EAAAA,IAASX,EAAM9Z,oBAEvCwb,GAAeZ,EAAAA,EAAAA,KAAS,IACrBmB,EAAAA,KAGHT,GAAqBV,EAAAA,EAAAA,KAAS,KAClC,MAAMnX,EAAS,GA0Bf,OAzBIqY,EAAsBnd,OAAS,IAC7B,WAAYmd,EAAsB,IACpCrY,EAAOkB,KAAK,CACVlL,IAAKqiB,EAAsB,GAAGriB,IAAzBqiB,UACL9iB,MAAO8iB,EAAsB,GAAG,WAAWE,KAG3CF,EAAsBnd,OAAS,IAC7Bmd,EAAsB,GAAGriB,KAAOqiB,EAAsB,GAAGriB,IACvD,WAAYqiB,EAAsB,IACpCrY,EAAOkB,KAAK,CACVlL,IAAKqiB,EAAsB,GAAGriB,IAAzBqiB,UACL9iB,MAAO8iB,EAAsB,GAAG,WAAWE,KAI3C,WAAYF,EAAsB,IACpCrY,EAAOkB,KAAK,CACVlL,IAAKqiB,EAAsB,GAAGriB,IAAzBqiB,UACL9iB,MAAO8iB,EAAsB,GAAG,WAAWE,OAM9CvY,CAAM,IAGf,MAAO,CACLoU,cACAgD,mBAAkB,KAElBa,eACAC,gBACAH,eACAF,qBAEJ,I,QClEF,MAAMD,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASzE,GAAQ,CAAC,YAAY,qBAEzF,O,yFCPA,MACM1C,EAAa,CAAEza,IAAK,GACpB2a,EAAa,CAAED,MAAO,eACtBE,EAAa,CAAC,sBAAuB,YACrCE,EAAa,CAAC,MAAO,OACrBC,EAAa,CAAEL,MAAO,eACtBM,EAAa,CAAC,sBAAuB,YACrCC,EAAa,CAAC,MAAO,OACrBC,EAAa,CAAER,MAAO,eACtBS,EAAa,CAAC,MAAO,MAAO,WAC5BC,EAAc,CAAEV,MAAO,WACvBW,EAAc,CAAC,MAAO,OAEtB,SAAU8B,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,OAAQL,EAAK2C,UACRnC,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAOpD,EAAY,EACpDiB,EAAAA,EAAAA,GAAoB,KAAMf,EAAY,GACnCiD,EAAAA,EAAAA,KAAW,IAAOC,EAAAA,EAAAA,IAAoBc,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,IAAYxB,EAAKoF,aAAcV,KAC7ElE,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,KAAM,CAAE7d,IAAK8hB,GAAQ,EAC7DpG,EAAAA,EAAAA,GAAoB,QAAS,KAAM,EACjC8C,EAAAA,EAAAA,KAAgB9C,EAAAA,EAAAA,GAAoB,QAAS,CAC3ChB,MAAO,SACPgC,KAAM,WACN,sBAAwBsB,GAAkBZ,EAAKqF,iBAAiBX,GAAS9D,EACzES,SAAWT,GAAiBZ,EAAKsF,kBAAkBZ,EAAM1E,EAAKqF,mBAC7D,KAAM,GAAI7H,GAAa,CACxB,CAAC+H,EAAAA,GAAiBvF,EAAKqF,iBAAiBX,OAE1CpG,EAAAA,EAAAA,GAAoB,MAAO,CACzBhB,MAAO,SACP/a,IAAKyd,EAAKwF,WAAWd,GACrB3D,IAAK2D,GACJ,KAAM,EAAGhH,UAGd,SAENY,EAAAA,EAAAA,GAAoB,KAAMX,EAAY,GACnC6C,EAAAA,EAAAA,KAAW,IAAOC,EAAAA,EAAAA,IAAoBc,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,IAAYxB,EAAKyF,YAAaf,KAC5ElE,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,KAAM,CAAE7d,IAAK8hB,GAAQ,EAC7DpG,EAAAA,EAAAA,GAAoB,QAAS,KAAM,EACjC8C,EAAAA,EAAAA,KAAgB9C,EAAAA,EAAAA,GAAoB,QAAS,CAC3ChB,MAAO,SACPgC,KAAM,WACN,sBAAwBsB,GAAkBZ,EAAK0F,gBAAgBhB,GAAS9D,EACxES,SAAWT,GAAiBZ,EAAKsF,kBAAkBZ,EAAM1E,EAAK0F,kBAC7D,KAAM,GAAI9H,GAAa,CACxB,CAAC2H,EAAAA,GAAiBvF,EAAK0F,gBAAgBhB,OAEzCpG,EAAAA,EAAAA,GAAoB,MAAO,CACzBhB,MAAO,SACP/a,IAAKyd,EAAK2F,UAAUjB,GACpB3D,IAAK2D,GACJ,KAAM,EAAG7G,UAGd,SAENS,EAAAA,EAAAA,GAAoB,KAAMR,EAAY,GACnC0C,EAAAA,EAAAA,KAAW,IAAOC,EAAAA,EAAAA,IAAoBc,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,IAAYxB,EAAK2E,cAAeD,KAC9ElE,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,KAAM,CAC9CnD,MAAO,eACP1a,IAAK8hB,EAAK9hB,KACT,EACD0b,EAAAA,EAAAA,GAAoB,MAAO,CACzBhB,OAAOsH,EAAAA,EAAAA,IAAgB,YAAc5E,EAAK6E,aAAaH,GAAQ1E,EAAK8E,cAAcJ,IAClFniB,IAAKmiB,EAAKkB,SACV7E,IAAK2D,EAAK9hB,IACV+d,QAAUC,GAAiBZ,EAAK6F,iBAAiBnB,EAAK9hB,MACrD,KAAM,GAAImb,IACbO,EAAAA,EAAAA,GAAoB,MAAON,GAAamD,EAAAA,EAAAA,IAAiBnB,EAAKgB,YAAY0D,EAAK9hB,MAAO,IACtF0b,EAAAA,EAAAA,GAAoB,MAAO,CACzBhB,MAAO,SACP/a,IAAKyd,EAAK8F,UAAUpB,GACpB3D,IAAK2D,EAAKlf,IACT,KAAM,EAAGyY,IACZmD,EAAAA,EAAAA,KAAgB9C,EAAAA,EAAAA,GAAoB,MAAO,CAAEhB,MAAO,qBAAsB6D,EAAAA,EAAAA,IAAiBnB,EAAK+F,gBAAgBrB,EAAK9hB,MAAO,KAAM,CAChI,CAACkgB,EAAAA,GAAQ9C,EAAK+F,gBAAgBrB,EAAK9hB,aAGrC,YAGR4f,EAAAA,EAAAA,IAAoB,IAAI,EAC9B,C,0CCrEA,GAAeQ,EAAAA,EAAAA,IAAgB,CAC7BnZ,KAAM,kBACNoZ,MAAO,CACL5a,UAAW,CAAEiX,KAAMvS,QACnBiZ,WAAY,CAAE1G,KAAM1X,OACpB+a,QAAS,CAAErD,KAAM8D,QAASzK,UAAU,IAEtC4K,MAAO,CAAC,mBAAoB,qBAC5BC,KAAAA,CAAMP,EAAOQ,GACX,MAAM,YAAEzC,IAAgB2C,EAAAA,EAAAA,KAElBmC,EAAapB,GAA0BuB,EAAAA,GAAgBvB,EAAKlf,IAC5Dqf,EAAgBH,GACnB,IAAMM,EAAAA,GAA4BN,EAAKzc,OACpC6c,EAAiBJ,GACjBzB,EAAM5a,WAAa4a,EAAM5a,WAAaqc,EAAK9hB,KAG3CqgB,EAAM+C,YAAc/C,EAAM+C,WAAWnjB,SAAS6hB,EAAK9hB,KAF9C,YAKF,GAGHwiB,EAAc1iB,OAAOC,KAAKsjB,EAAAA,IAC1BT,EAAcU,GAAwBD,EAAAA,GAAgBC,GACtDb,GAAmBzB,EAAAA,EAAAA,IAAS,CAAC,GACnC,IAAK,IAAIhhB,KAAOwiB,EACdC,EAAiBziB,IAAO,EAG1B,MAAM6iB,EAAa/iB,OAAOC,KAAKwjB,EAAAA,IACzBR,EAAa9c,GAA2Bsd,EAAAA,GAAetd,GACvD6c,GAAkB9B,EAAAA,EAAAA,IAAS,CAAC,GAClC,IAAK,IAAIhhB,KAAO6iB,EACdC,EAAgB9iB,IAAO,EAGzB,MAAM0iB,EAAoB,SAAUZ,EAAc0B,GAC3CA,EAAU1B,IACfhiB,OAAOC,KAAKyjB,GACThV,QAAQC,GAAMA,GAAKqT,IACnB/f,SAAS/B,IACRwjB,EAAUxjB,IAAO,CAAK,GAE5B,EAEM+hB,GAAeZ,EAAAA,EAAAA,KAAS,KAC5B,MAAMnX,EAAS,GACTyZ,EACJ3jB,OAAOC,KAAK0iB,GAAkBjU,QAAQC,GAAMgU,EAAiBhU,KAAIvJ,OAAS,EACtEwe,EACJ5jB,OAAOC,KAAK+iB,GAAiBtU,QAAQC,GAAMqU,EAAgBrU,KAAIvJ,OAAS,EAC1E,IAAK,IAAI8K,KAAS2T,EAAAA,GACZF,IAAmBhB,EAAiBzS,EAAMpN,KAC1C8gB,IAAkBZ,EAAgB9S,EAAM4T,KAC5C5Z,EAAOkB,KAAK8E,GAEd,OAAOhG,CAAM,IAGTmZ,EAAmB1d,IACvB,IAAIuE,EAAS,GACb,GAAIqW,EAAM+C,WAAY,CACpB,MAAM1V,EAAQ2S,EAAM+C,WAAW7T,QAAQ9J,IACzB,GAAViI,IACF1D,EAASG,OAAOuD,EAAQ,G,CAG5B,OAAO1D,CAAM,EAGTiZ,EAAoBxd,IAIxB,GAHI4a,EAAM5a,WACRob,EAAQU,KAAK,mBAAoB9b,GAE/B4a,EAAM+C,WAAY,CACpB,MAAMA,EAAuB/C,EAAM+C,WAAWrM,KAAKtI,GAAMA,IACnDf,EAAQ2S,EAAM+C,WAAW7T,QAAQ9J,GACvC,IAAc,GAAViI,EACF0V,EAAW1V,GAAS,OACf,CACL,MAAMmW,EAAaxD,EAAM+C,WAAW7T,QAAQ,KACzB,GAAfsU,IACFT,EAAWS,GAAcpe,E,CAG7Bob,EAAQU,KAAK,oBAAqB6B,E,GAItC,MAAO,CACLhF,cAEA8E,YACAjB,eACAC,gBACAM,cACAI,aACAH,mBACAI,aACAE,YACAD,kBACAJ,oBACAX,eAEAoB,kBACAF,mBAEJ,I,QCvHF,MAAMrB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASzE,GAAQ,CAAC,YAAY,qBAEzF,O,mGCHc,SAAU4D,IACpB,MAAM,EAAE+C,EAAC,GAAEC,IAAOC,EAAAA,EAAAA,IAAQ,CACtBC,SAAU,WAGRC,EAAa,CACf,CAAEjd,KAAM,MAAO1H,MAAO,SACtB,CAAE0H,KAAM,UAAW1H,MAAO,SAC1B,CAAE0H,KAAM,OAAQ1H,MAAO,SACvB,CAAE0H,KAAM,OAAQ1H,MAAO,SACvB,CAAE0H,KAAM,MAAO1H,MAAO,SACtB,CAAE0H,KAAM,UAAW1H,MAAO,SAC1B,CAAE0H,KAAM,UAAW1H,MAAO,SAC1B,CAAE0H,KAAM,WAAY1H,MAAO,SAC3B,CAAE0H,KAAM,YAAa1H,MAAO,SAC5B,CAAE0H,KAAM,YAAa1H,MAAO,SAC5B,CAAE0H,KAAM,UAAW1H,MAAO,SAC1B,CAAE0H,KAAM,UAAW1H,MAAO,SAC1B,CAAE0H,KAAM,aAAc1H,MAAO,UAG3B4kB,EAAkB,SAAUzjB,GAC9BH,EAAAA,EAAK6jB,OAAO1jB,OAAOnB,MAAQmB,EAC3B2jB,EAAmB3jB,GACnB4jB,SAASC,cAAc,SAASC,aAAa,OAAQ9jB,EACzD,EAEM2jB,EAAqBpW,eAAgBvN,GACvC,GAAc,SAAVA,EAAmB,CACnB,MAAM+jB,QAAiBC,MAAM,aAAahkB,UAAeikB,MAAKC,GAAQA,EAAKC,SAC3EtkB,EAAAA,EAAK6jB,OAAOU,iBAAiBpkB,EAAQ+jB,E,CAEzC,OAAOM,EAAAA,EAAAA,KACX,EAEM3G,EAAc,SAAUpe,GAC1B,IAAKA,EAAK,OAAOA,EACjB,GAAiC,UAA7BO,EAAAA,EAAK6jB,OAAO1jB,OAAOnB,MAAmB,CACtC,IAAIyK,EAASG,OAAOnK,GACpB,MAAI,CAAC,SAAU,UAAW,SAAU,KAAKC,SAAS+J,KAGlDA,EAASA,EAAOI,QAAQ,UAAW,QACnCJ,EAASA,EAAOI,QAAQ,WAAY,QACpCJ,EAASA,EAAOI,QAAQ,WAAY,aACpCJ,EAASA,EAAOI,QAAQ,UAAW,UACnCJ,EAASA,EAAOI,QAAQ,KAAM,OANnBJ,C,CASf,GAAI+Z,EAAG/jB,GAAM,OAAO8jB,EAAE9jB,GACtB,MAAM0L,EAAK,IAAIC,OAAO,6BACtB,IAAI3B,EAAS,GACT4P,EAAO5Z,EACX,MAAO4Z,EAAM,CACT,MAAM5E,EAAQtJ,EAAGkI,KAAKgG,GACtB,IAAK5E,EAAO,CACRhL,GAAU8Z,EAAElK,GACZ,K,CAEA5E,EAAM,KAAIhL,GAAU8Z,EAAE9O,EAAM,KAChChL,GAAUgL,EAAM,GAChB4E,EAAO5E,EAAM,E,CAEjB,OAAOhL,CACX,EAEM8W,EAAU,SAAU9e,GACtB,MAAMgjB,EAAUhjB,EAAK5B,MAAM,KAC3B,IAAIwZ,EAAOoL,EAAQ,GAAG5a,QAAQ,UAAW,IACrC6a,EAAarL,EAAKtP,SAAS,MAAQ1I,EAAAA,GAAkB3B,SAAS2Z,GAMlE,OALKqL,GACD,CAAC,MAAO,SAAU,SAAU,QAAQljB,SAAQoT,IACpCyE,EAAKtP,SAAS6K,KAAU8P,GAAa,EAAI,IAG9CA,EAAa,IAAM,EAC9B,EAEMC,EAAkB,SAAUljB,GAC9B,IAAIgI,EAAShI,EAAKoI,QAAQ,UAAW,IACrC,MAAM4a,EAAUhb,EAAO5J,MAAM,KAS7B,OARsB,GAAlB4kB,EAAQ9f,QACR8E,EAASoU,EAAYpU,GACrBA,EAASA,EAAOI,QAAQ,SAAU,YAElCJ,EADoC,UAA7BzJ,EAAAA,EAAK6jB,OAAO1jB,OAAOnB,MACjBylB,EAAQA,EAAQ9f,OAAS,GAAK,IAAMkZ,EAAY4G,EAAQ,IAExD5G,EAAY4G,EAAQA,EAAQ9f,OAAS,IAAM,IAAMkZ,EAAY4G,EAAQ,IAE3Ehb,CACX,EAEMkV,EAAmB,SAAUld,EAAczC,EAAe4lB,GAC5D,MAAMC,EAAYtE,EAAQ9e,GAC1B,IAAIqjB,EAAID,EAAY,GAAK,EAEzB,OADID,IAAOE,EAAI9a,KAAKiN,IAAI,GAAI2N,IACrBhb,OAAOI,KAAKoV,MAAMpgB,EAAQ8lB,GAAKA,GAAKD,CAC/C,EAEME,EAAoB,SAAUtjB,GAChC,IAAIgI,EAAShI,EACb,MAAMgjB,EAAUhjB,EAAK5B,MAAM,KAe3B,OAdsB,GAAlB4kB,EAAQ9f,QACRlD,EAAOA,EAAKoI,QAAQ,OAAQ,IAC5BpI,EAAOA,EAAKoI,QAAQ,OAAQ,IACxBpI,EAAKwJ,WAAW,OAAMxJ,EAAOA,EAAKoI,QAAQ,KAAM,KAChDpI,EAAKsI,SAAS,UAAWtI,EAAOA,EAAKoI,QAAQ,UAAW,IACnDpI,EAAKsI,SAAS,WAAYtI,EAAOA,EAAKoI,QAAQ,WAAY,IAC1DpI,EAAKsI,SAAS,UAAWtI,EAAOA,EAAKoI,QAAQ,UAAW,IACxDpI,EAAKsI,SAAS,UAAWtI,EAAOA,EAAKoI,QAAQ,QAAS,IACtDpI,EAAKsI,SAAS,UAAWtI,EAAOA,EAAKoI,QAAQ,UAAW,IACxDpI,EAAKsI,SAAS,QAAOtI,EAAOA,EAAKoI,QAAQ,MAAO,KACzDJ,EAASoU,EAAYpc,IAErBgI,EAASkb,EAAgBljB,GAEtBgI,CACX,EAGMub,EAAc,SAAUC,GAC1B,OAAIA,EAAMC,kBAAkBC,kBACxBF,EAAMC,kBAAkBE,kBADyBH,EAAMC,OAAOlmB,WAClE,CAEJ,EAEMqmB,EAAoB,SAAU3e,GAChC,OAAOmX,EAAYnX,EAAKmD,QAAQ,aAAc,IAClD,EAEA,MAAO,CACH8Z,aACAC,kBACAE,qBACAjG,cACA8G,kBACAhG,mBACAoG,oBACAC,cACAK,oBACA9E,UAER,CCjJA,MAAMc,EAAc,EAEpB,O","sources":["webpack://gencalc/./src/common.ts","webpack://gencalc/./src/i18n.ts","webpack://gencalc/./src/input.ts","webpack://gencalc/./src/components/ArtifactItem.vue?52dd","webpack://gencalc/./src/components/ArtifactItem.vue?f1bd","webpack://gencalc/./src/components/ArtifactItem.vue","webpack://gencalc/./src/components/ArtifactSetSelect.vue?96cd","webpack://gencalc/./src/components/ArtifactSetSelect.vue?c0d4","webpack://gencalc/./src/components/ArtifactSetSelect.vue","webpack://gencalc/./src/components/CharacterSelect.vue?9536","webpack://gencalc/./src/components/CharacterSelect.vue?1f8b","webpack://gencalc/./src/components/CharacterSelect.vue","webpack://gencalc/./src/components/CompositionFunction.vue?c68d","webpack://gencalc/./src/components/CompositionFunction.vue"],"sourcesContent":["import _ from 'lodash';\r\n\r\nexport type TKeyValue = {\r\n    key: string, value: any,\r\n};\r\n\r\nexport function isString(value: any): boolean {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\n\r\nexport function isNumber(value: any): boolean {\r\n    return isFinite(value) && value != null;\r\n}\r\n\r\nexport function isBoolean(value: any): boolean {\r\n    return value === true || value === false;\r\n}\r\n\r\nexport function isPlainObject(value: any): boolean {\r\n    const myType = Object.prototype.toString.call(value);\r\n    return myType === '[object Object]';\r\n}\r\n\r\n// /** 簡易なdeep copy。undefinedなどは消失します */\r\n// export function deepcopy(value: any): any {\r\n//     const result = JSON.parse(JSON.stringify(value));\r\n//     return result;\r\n// }\r\n\r\nexport function overwriteObject(dst: any, src: any) {\r\n    if (_.isPlainObject(src) && _.isPlainObject(dst)) {\r\n        const srcKeys = Object.keys(src);\r\n        for (const key of srcKeys) {\r\n            dst[key] = src[key];\r\n        }\r\n        for (const key of Object.keys(dst)) {\r\n            if (!srcKeys.includes(key)) delete dst[key];\r\n        }\r\n    }\r\n    return dst;\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport const basename = (path: string) => path!.split('/')!.pop()!.split('.')!.shift()!;\r\n","import { createI18n } from 'vue-i18n'\r\n\r\nconst i18n = createI18n({\r\n  legacy: false,\r\n  locale: 'ja-jp',\r\n  fallbackLocale: 'en-us',\r\n  isGlobal: true,\r\n})\r\nexport default i18n;\r\n","import { ARTIFACT_SET_MASTER, ARTIFACT_STAT_JA_EN_ABBREV_MAP, ARTIFACT_SUB_MASTER, CHARACTER_MASTER, DAMAGE_CATEGORY_ARRAY, ELEMENTAL_RESONANCE_MASTER, ELEMENTAL_RESONANCE_MASTER_LIST, ENEMY_MASTER_LIST, GENSEN_MASTER_LIST, getCharacterMasterDetail, getWeaponMasterDetail, IMG_SRC_DUMMY, RECOMMEND_ABBREV_MAP, TAnyObject, TArtifactSet, TArtifactSetEntry, TArtifactSetKey, TArtifactSubKey, TCharacterDetail, TCharacterKey, TEnemyEntry, TWeaponDetail, TWeaponKey, TWeaponTypeKey, WEAPON_MASTER, キャラクター構成PROPERTY_MAP } from '@/master';\r\nimport _ from 'lodash';\r\nimport { basename, isNumber, overwriteObject } from './common';\r\n\r\nexport const 基礎ステータスARRAY = [\r\n    '基礎HP',\r\n    '基礎攻撃力',\r\n    '基礎防御力'\r\n];\r\nexport const 基本ステータスARRAY = [\r\n    'HP上限',\r\n    '攻撃力',\r\n    '防御力',\r\n    '元素熟知'\r\n];\r\nexport const 高級ステータスARRAY = [\r\n    '会心率',\r\n    '会心ダメージ',\r\n    '与える治療効果',\r\n    '受ける治療効果',\r\n    '元素チャージ効率',\r\n    'クールタイム短縮',\r\n    'シールド強化'\r\n];\r\nexport const 元素ステータス_ダメージARRAY = [\r\n    '炎元素ダメージバフ',\r\n    '水元素ダメージバフ',\r\n    '風元素ダメージバフ',\r\n    '雷元素ダメージバフ',\r\n    '草元素ダメージバフ',\r\n    '氷元素ダメージバフ',\r\n    '岩元素ダメージバフ',\r\n    '物理ダメージバフ'\r\n];\r\nexport const 元素ステータス_耐性ARRAY = [\r\n    '炎元素耐性',\r\n    '水元素耐性',\r\n    '風元素耐性',\r\n    '雷元素耐性',\r\n    '草元素耐性',\r\n    '氷元素耐性',\r\n    '岩元素耐性',\r\n    '物理耐性'\r\n];\r\nexport const ダメージバフARRAY = [\r\n    '通常攻撃ダメージバフ',\r\n    '重撃ダメージバフ',\r\n    '落下攻撃ダメージバフ',\r\n    '元素スキルダメージバフ',\r\n    '元素爆発ダメージバフ',\r\n    '与えるダメージ',\r\n];\r\nexport const 実数ダメージ加算ARRAY = [\r\n    '通常攻撃ダメージアップ',\r\n    '重撃ダメージアップ',\r\n    '落下攻撃ダメージアップ',\r\n    '元素スキルダメージアップ',\r\n    '元素爆発ダメージアップ',\r\n    '炎元素ダメージアップ',\r\n    '水元素ダメージアップ',\r\n    '風元素ダメージアップ',\r\n    '雷元素ダメージアップ',\r\n    '草元素ダメージアップ',\r\n    '氷元素ダメージアップ',\r\n    '岩元素ダメージアップ',\r\n    '物理ダメージアップ'\r\n];\r\nexport const 元素反応バフARRAY = [\r\n    '蒸発反応ボーナス',\r\n    '溶解反応ボーナス',\r\n    '過負荷反応ボーナス',\r\n    '感電反応ボーナス',\r\n    '凍結反応ボーナス',\r\n    '超電導反応ボーナス',\r\n    '拡散反応ボーナス',\r\n    '結晶反応ボーナス',\r\n    '燃焼反応ボーナス',\r\n    '開花反応ボーナス',\r\n    '烈開花反応ボーナス',\r\n    '超開花反応ボーナス',\r\n    '超激化反応ボーナス',\r\n    '草激化反応ボーナス',\r\n];\r\nexport const ステータスその他ARRAY = [\r\n    'ダメージ軽減',\r\n    'HP%',\r\n    '攻撃力%',\r\n    '防御力%',\r\n    'HP+',\r\n    '攻撃力+',\r\n    '防御力+',\r\n];\r\nexport const ステータス連動ARRAY = [\r\n    'HP上限V1',\r\n    '攻撃力V1',\r\n    '防御力V1',\r\n    '元素熟知V1',\r\n    '会心率V1',\r\n    '会心ダメージV1',\r\n    '与える治療効果V1',\r\n    '受ける治療効果V1',\r\n    '元素チャージ効率V1',\r\n];\r\nexport const ステータスチーム内最高ARRAY = [\r\n    '元素熟知TOP',\r\n];\r\nexport const 敵ステータス_元素耐性ARRAY = [\r\n    '敵炎元素耐性',\r\n    '敵水元素耐性',\r\n    '敵風元素耐性',\r\n    '敵雷元素耐性',\r\n    '敵草元素耐性',\r\n    '敵氷元素耐性',\r\n    '敵岩元素耐性',\r\n    '敵物理耐性'\r\n];\r\nexport const 敵ステータス_その他ARRAY = [\r\n    '敵防御力'\r\n];\r\n\r\nexport const ステータスARRAY_MAP = new Map([\r\n    ['基礎ステータス', 基礎ステータスARRAY],\r\n    ['基本ステータス', 基本ステータスARRAY],\r\n    ['高級ステータス', 高級ステータスARRAY],\r\n    ['元素ステータス·ダメージ', 元素ステータス_ダメージARRAY],\r\n    ['元素ステータス·耐性', 元素ステータス_耐性ARRAY],\r\n    ['ダメージバフ', ダメージバフARRAY],\r\n    ['実数ダメージ加算', 実数ダメージ加算ARRAY],\r\n    ['元素反応バフ', 元素反応バフARRAY],\r\n    ['その他', ステータスその他ARRAY],\r\n    ['ステータス連動', ステータス連動ARRAY],\r\n    ['チーム内最高値', ステータスチーム内最高ARRAY],\r\n    ['敵ステータス·元素耐性', 敵ステータス_元素耐性ARRAY],\r\n    ['敵ステータス·その他', 敵ステータス_その他ARRAY],\r\n]);\r\n\r\nexport const STAT_PERCENT_LIST = [\r\n    ...高級ステータスARRAY, ...元素ステータス_ダメージARRAY, ...元素ステータス_耐性ARRAY, ...ダメージバフARRAY, ...元素反応バフARRAY, ...敵ステータス_元素耐性ARRAY,\r\n    '別枠乗算', '敵防御力',\r\n];\r\n\r\nexport type TStats = {\r\n    [key: string]: number,\r\n};\r\n\r\nfunction makeStatusTenmplate() {\r\n    const statsObj: TStats = {};\r\n    ステータスARRAY_MAP.forEach((value) => {\r\n        value.forEach(stat => {\r\n            statsObj[stat] = 0;\r\n        });\r\n    });\r\n    statsObj['会心率'] = 5;\r\n    statsObj['会心ダメージ'] = 50;\r\n    statsObj['元素チャージ効率'] = 100;\r\n    statsObj['敵レベル'] = 0;\r\n    statsObj['敵防御力'] = 0;\r\n    return statsObj;\r\n}\r\nexport const ステータスTEMPLATE = makeStatusTenmplate();\r\n\r\nfunction makeEnemyStatusTemplate() {\r\n    const statsObj: TStats = {};\r\n    [元素ステータス_耐性ARRAY].forEach((value) => {\r\n        value.forEach(stat => {\r\n            statsObj[stat] = 0;\r\n        });\r\n    });\r\n    statsObj['防御力'] = 0;\r\n    return statsObj;\r\n}\r\nexport const 敵ステータスTEMPLATE = makeEnemyStatusTemplate();\r\n\r\nexport const 聖遺物メイン効果_生の花ARRAY = [\r\n    '5_HP', '4_HP'\r\n];\r\nexport const 聖遺物メイン効果_死の羽ARRAY = [\r\n    '5_攻撃力', '4_攻撃力'\r\n];\r\nexport const 聖遺物メイン効果_時の砂ARRAY = [\r\n    '5_元素チャージ効率',\r\n    '5_HP%',\r\n    '5_攻撃力%',\r\n    '5_防御力%',\r\n    '5_元素熟知',\r\n    '4_元素チャージ効率',\r\n    '4_HP%',\r\n    '4_攻撃力%',\r\n    '4_防御力%',\r\n    '4_元素熟知'\r\n];\r\nexport const 聖遺物メイン効果_空の杯ARRAY = [\r\n    '5_炎元素ダメージバフ',\r\n    '5_水元素ダメージバフ',\r\n    '5_風元素ダメージバフ',\r\n    '5_雷元素ダメージバフ',\r\n    '5_草元素ダメージバフ',\r\n    '5_氷元素ダメージバフ',\r\n    '5_岩元素ダメージバフ',\r\n    '5_物理ダメージバフ',\r\n    '5_HP%',\r\n    '5_攻撃力%',\r\n    '5_防御力%',\r\n    '5_元素熟知',\r\n    '4_炎元素ダメージバフ',\r\n    '4_水元素ダメージバフ',\r\n    '4_風元素ダメージバフ',\r\n    '4_雷元素ダメージバフ',\r\n    '4_草元素ダメージバフ',\r\n    '4_氷元素ダメージバフ',\r\n    '4_岩元素ダメージバフ',\r\n    '4_物理ダメージバフ',\r\n    '4_HP%',\r\n    '4_攻撃力%',\r\n    '4_防御力%',\r\n    '4_元素熟知'\r\n];\r\nexport const 聖遺物メイン効果_理の冠ARRAY = [\r\n    '5_会心率',\r\n    '5_会心ダメージ',\r\n    '5_HP%',\r\n    '5_攻撃力%',\r\n    '5_防御力%',\r\n    '5_元素熟知',\r\n    '5_与える治療効果',\r\n    '4_会心率',\r\n    '4_会心ダメージ',\r\n    '4_HP%',\r\n    '4_攻撃力%',\r\n    '4_防御力%',\r\n    '4_元素熟知',\r\n    '4_与える治療効果'\r\n];\r\n\r\nexport const 聖遺物サブ効果ARRAY = [\r\n    'HP%',\r\n    'HP',\r\n    '攻撃力%',\r\n    '攻撃力',\r\n    '防御力%',\r\n    '防御力',\r\n    '元素熟知',\r\n    '会心率',\r\n    '会心ダメージ',\r\n    '元素チャージ効率',\r\n];\r\nexport const 聖遺物優先するサブ効果ARRAY = [\r\n    '攻撃力%',\r\n    'HP%',\r\n    '防御力%',\r\n    '元素熟知',\r\n    '会心率',\r\n    '会心ダメージ',\r\n    '元素チャージ効率',\r\n];\r\n\r\nexport const 聖遺物ステータスTEMPLATE = {\r\n    'HP': 0,\r\n    '攻撃力': 0,\r\n    '防御力': 0,\r\n    '元素熟知': 0,\r\n    '会心率': 0,\r\n    '会心ダメージ': 0,\r\n    '元素チャージ効率': 0,\r\n    'HP%': 0,\r\n    '攻撃力%': 0,\r\n    '防御力%': 0,\r\n    '炎元素ダメージバフ': 0,\r\n    '水元素ダメージバフ': 0,\r\n    '風元素ダメージバフ': 0,\r\n    '雷元素ダメージバフ': 0,\r\n    '草元素ダメージバフ': 0,\r\n    '氷元素ダメージバフ': 0,\r\n    '岩元素ダメージバフ': 0,\r\n    '物理ダメージバフ': 0,\r\n    '与える治療効果': 0,\r\n};\r\n\r\nexport const 元素反応TEMPLATE = {\r\n    元素: '炎',\r\n    蒸発倍率_炎: 0,                 // 1.5倍\r\n    蒸発倍率_水: 0,                 // 2倍\r\n    溶解倍率_氷: 0,                 // 1.5倍\r\n    溶解倍率_炎: 0,                 // 2倍\r\n    過負荷ダメージ: 0,\r\n    感電ダメージ: 0,\r\n    超電導ダメージ: 0,\r\n    拡散ダメージ: 0,\r\n    拡散元素: '炎',\r\n    結晶吸収量: 0,\r\n    氷砕きダメージ: 0,\r\n    燃焼ダメージ: 0,\r\n    開花ダメージ: 0,\r\n    烈開花ダメージ: 0,\r\n    超開花ダメージ: 0,\r\n    超激化ダメージ: 0,\r\n    草激化ダメージ: 0,\r\n    燃焼ダメージ会心率: 0,          // for ナヒーダ\r\n    燃焼ダメージ会心ダメージ: 0,    // for ナヒーダ\r\n    開花ダメージ会心率: 0,          // for ナヒーダ\r\n    開花ダメージ会心ダメージ: 0,    // for ナヒーダ\r\n    烈開花ダメージ会心率: 0,        // for ナヒーダ\r\n    烈開花ダメージ会心ダメージ: 0,  // for ナヒーダ\r\n    超開花ダメージ会心率: 0,        // for ナヒーダ\r\n    超開花ダメージ会心ダメージ: 0,  // for ナヒーダ\r\n};\r\nexport type TDamageResultElementalReaction = typeof 元素反応TEMPLATE;\r\nexport type TDamageResultElementalReactionKey = keyof typeof 元素反応TEMPLATE;\r\n\r\nexport type TDamageResultEntry = [string, string | null, number, number | null, number, string | null, number | null, number | null, number | null];    // 0:名前, 1:元素, 2:期待値, 3:会心, 4:非会心, 5:種類, 6:HIT数, 7:ダメージバフ, 8:敵の防御補正\r\nexport type TDamageResult = {\r\n    元素反応: TDamageResultElementalReaction,\r\n    通常攻撃: TDamageResultEntry[],\r\n    重撃: TDamageResultEntry[],\r\n    落下攻撃: TDamageResultEntry[],\r\n    元素スキル: TDamageResultEntry[],\r\n    元素爆発: TDamageResultEntry[],\r\n    その他: TDamageResultEntry[],\r\n    キャラクター注釈: string[],\r\n    [key: string]: TDamageResultElementalReaction | TDamageResultEntry[] | string[],\r\n};\r\n\r\nexport const DAMAGE_RESULT_TEMPLATE = {\r\n    元素反応: _.cloneDeep(元素反応TEMPLATE) as TDamageResultElementalReaction,\r\n    通常攻撃: [] as TDamageResultEntry[],\r\n    重撃: [] as TDamageResultEntry[],\r\n    落下攻撃: [] as TDamageResultEntry[],\r\n    元素スキル: [] as TDamageResultEntry[],\r\n    元素爆発: [] as TDamageResultEntry[],\r\n    その他: [] as TDamageResultEntry[],\r\n    キャラクター注釈: [] as string[],\r\n};\r\n\r\nexport const 突破レベルレベルARRAY = [\r\n    Array.from({ length: 20 }, (_, i) => i + 1),\r\n    Array.from({ length: 21 }, (_, i) => i + 20),\r\n    Array.from({ length: 11 }, (_, i) => i + 40),\r\n    Array.from({ length: 11 }, (_, i) => i + 50),\r\n    Array.from({ length: 11 }, (_, i) => i + 60),\r\n    Array.from({ length: 11 }, (_, i) => i + 70),\r\n    Array.from({ length: 11 }, (_, i) => i + 80),\r\n];\r\n\r\n\r\nexport type TDamageDetailObj = {\r\n    名前: string | null,\r\n    種類: string | null,\r\n    元素: string | null,\r\n    数値: number | string | Array<any> | null,\r\n    条件: string | null,\r\n    対象: string | null,\r\n    上限: number | string | Array<any> | null,\r\n    下限: number | string | Array<any> | null,\r\n    HIT数: number | null,\r\n    ダメージバフ: string | null,\r\n    元素付与無効: boolean | null,\r\n    除外条件: (string | object)[] | null,\r\n    適用条件: (string | object)[] | null,\r\n};\r\n\r\nexport type TDamageDetail = {\r\n    通常攻撃?: TDamageDetailObj[],\r\n    重撃?: TDamageDetailObj[],\r\n    落下攻撃?: TDamageDetailObj[],\r\n    元素スキル?: TDamageDetailObj[],\r\n    元素爆発?: TDamageDetailObj[],\r\n    その他?: TDamageDetailObj[],\r\n    ステータス変更系詳細: TDamageDetailObj[],\r\n    天賦性能変更系詳細: TDamageDetailObj[],\r\n    条件: Map<string, string[]>,\r\n    排他: Map<string, string[]>,\r\n};\r\n\r\nexport const ARTIFACT_SET_MASTER_DUMMY = {\r\n    key: 'NONE' as TArtifactSetKey,\r\n    レアリティ: 5,\r\n    image: IMG_SRC_DUMMY,\r\n} as TArtifactSet;\r\n\r\nexport const CHARACTER_INPUT_TEMPLATE = {\r\n    character: 'アンバー' as TCharacterKey,\r\n    characterMaster: {} as TCharacterDetail,\r\n    突破レベル: 6,\r\n    レベル: 90,\r\n    命ノ星座: 0,\r\n    通常攻撃レベル: 8,\r\n    元素スキルレベル: 8,\r\n    元素爆発レベル: 8,\r\n    weapon: '西風猟弓' as TWeaponKey,\r\n    weaponMaster: {} as TWeaponDetail,\r\n    武器突破レベル: 6,\r\n    武器レベル: 90,\r\n    武器精錬ランク: 1,\r\n    artifactSets: ['NONE' as TArtifactSetKey, 'NONE' as TArtifactSetKey],\r\n    artifactSetMasters: [ARTIFACT_SET_MASTER_DUMMY, ARTIFACT_SET_MASTER_DUMMY] as TArtifactSetEntry[],\r\n    damageDetailMyCharacter: null as TDamageDetail | null,\r\n    damageDetailMyWeapon: null as TDamageDetail | null,\r\n    damageDetailMyArtifactSets: null as TDamageDetail | null,\r\n    damageDetailElementalResonance: null as TDamageDetail | null,\r\n    buildname: '',\r\n    recommendationSelectedIndex: 0,\r\n    saveDisabled: true,     // ローカルストレージへの構成保存不可か？\r\n    removeDisabled: true,   // ローカルストレージの構成削除不可か？\r\n};\r\nexport type TCharacterInput = typeof CHARACTER_INPUT_TEMPLATE;\r\n\r\nexport const ARTIFACT_TEMPLATE = {\r\n    name: '',\r\n    rarity: 1,\r\n    setname: 'NONE',\r\n    cat_id: 1,\r\n    mainStat: '',\r\n    mainStatValue: 0,\r\n    subStats: [\r\n        { name: 'HP', value: 0 },\r\n        { name: '攻撃力', value: 0 },\r\n        { name: '防御力', value: 0 },\r\n        { name: '元素熟知', value: 0 },\r\n    ]\r\n};\r\nexport type TArtifact = typeof ARTIFACT_TEMPLATE;\r\n\r\nexport const ARTIFACT_DETAIL_INPUT_TEMPLATE = {\r\n    聖遺物メイン効果: ['', '', '', '', ''],\r\n    聖遺物優先するサブ効果: ['', '', ''],\r\n    聖遺物優先するサブ効果上昇値: Array.from(GENSEN_MASTER_LIST[2].values),     // 厳選1ヶ月\r\n    聖遺物優先するサブ効果上昇回数: Array.from(GENSEN_MASTER_LIST[2].counts),   // 厳選1ヶ月\r\n    聖遺物ステータス: _.cloneDeep(聖遺物ステータスTEMPLATE),\r\n    聖遺物ステータスメイン効果: _.cloneDeep(聖遺物ステータスTEMPLATE),\r\n    聖遺物ステータスサブ効果: _.cloneDeep(聖遺物ステータスTEMPLATE),\r\n    聖遺物優先するサブ効果Disabled: false,\r\n    artifact_list: [] as TArtifact[],\r\n};\r\nexport type TArtifactDetailInput = typeof ARTIFACT_DETAIL_INPUT_TEMPLATE;\r\n\r\nexport type TCheckboxEntry = {\r\n    name: string;\r\n    displayName?: string;\r\n};\r\nexport type TSelectEntry = {\r\n    name: string;\r\n    displayName?: string;\r\n    options: string[];\r\n    required: boolean;\r\n};\r\nexport type TNumberEntry = {\r\n    name: string;\r\n    displayName?: string;\r\n    min: number | string;\r\n    max?: number | string;\r\n    step?: number;\r\n};\r\nexport type TConditionValues = {\r\n    [key: string]: boolean | number | null,\r\n};\r\nexport type TConditionAdjustments = {\r\n    [key: string]: number | null,\r\n};\r\nexport const CONDITION_INPUT_TEMPLATE = {\r\n    checkboxList: [] as TCheckboxEntry[],\r\n    selectList: [] as TSelectEntry[],\r\n    numberList: [] as TNumberEntry[],\r\n    conditionValues: {} as TConditionValues,\r\n    conditionAdjustments: {} as TConditionAdjustments,\r\n    攻撃元素: [null, null, null] as (string | null)[],\r\n};\r\nexport type TConditionInput = typeof CONDITION_INPUT_TEMPLATE;\r\n\r\nexport const STATS_INPUT_TEMPLATE = {\r\n    statsObj: _.cloneDeep(ステータスTEMPLATE) as TStats,\r\n    statAdjustments: _.cloneDeep(ステータスTEMPLATE) as TStats,\r\n    statAdjustmentsEx: {} as TStats,\r\n    enemyMaster: ENEMY_MASTER_LIST[0] as TEnemyEntry,\r\n};\r\nfor (const stat of Object.keys(STATS_INPUT_TEMPLATE.statAdjustments)) {\r\n    STATS_INPUT_TEMPLATE.statAdjustments[stat] = 0;\r\n}\r\nexport type TStatsInput = typeof STATS_INPUT_TEMPLATE;\r\n\r\nexport type TElementalResonance = {\r\n    conditionValues: TConditionValues,\r\n    conditionAdjustments: TConditionAdjustments,\r\n};\r\n\r\nexport const SUPPORTER_INPUT_TEMPLATE = {\r\n    characterInput: _.cloneDeep(CHARACTER_INPUT_TEMPLATE) as TCharacterInput,\r\n    artifactDetailInput: _.cloneDeep(ARTIFACT_DETAIL_INPUT_TEMPLATE) as TArtifactDetailInput,\r\n    conditionInput: _.cloneDeep(CONDITION_INPUT_TEMPLATE) as TConditionInput,\r\n    statsInput: _.cloneDeep(STATS_INPUT_TEMPLATE) as TStatsInput,\r\n    damageResult: _.cloneDeep(DAMAGE_RESULT_TEMPLATE) as TDamageResult,\r\n};\r\nexport type TSupporterInput = typeof SUPPORTER_INPUT_TEMPLATE;\r\n\r\nexport const OPTION_INPUT_TEMPLATE = {\r\n    elementalResonance: {\r\n        conditionValues: {},\r\n        conditionAdjustments: {},\r\n    } as TElementalResonance,\r\n    supporterBuildname: {} as { [key: string]: string | undefined },\r\n    supporters: {} as { [key: string]: TSupporterInput | undefined },\r\n    teamMembers: [] as string[],\r\n    teamOption: _.cloneDeep(CONDITION_INPUT_TEMPLATE) as TConditionInput,\r\n    miscOption: _.cloneDeep(CONDITION_INPUT_TEMPLATE) as TConditionInput,\r\n};\r\nexport type TOptionInput = typeof OPTION_INPUT_TEMPLATE;\r\n\r\n/** レベル文字列（1+,20,20+,...,90）を突破レベルとレベルに分割します */\r\nfunction parseLevelStr(levelStr: number | string): [number, number] {\r\n    let result: [number, number] = [0, 1];\r\n    try {\r\n        let level: number;\r\n        if (_.isString(levelStr)) {\r\n            level = Number(String(levelStr).replace('+', ''));\r\n        } else {\r\n            level = Number(levelStr);\r\n        }\r\n        let ascension = 0;\r\n        for (let i = (突破レベルレベルARRAY.length - 1); i >= 0; i--) {\r\n            ascension = i;\r\n            if (突破レベルレベルARRAY[i][0] > level) continue;\r\n            if (突破レベルレベルARRAY[i][0] == level && !String(levelStr).endsWith('+')) {\r\n                ascension--;\r\n            }\r\n            break;\r\n        }\r\n        result = [Math.max(0, ascension), level];\r\n    } catch (error) {\r\n        console.error(levelStr);\r\n        // throw error;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport type TRecommendation = {\r\n    name: string,\r\n    build: any,\r\n    overwrite: boolean\r\n}\r\n\r\nexport function makeDefaultBuildname(character: any) {\r\n    return 'あなたの' + character;\r\n}\r\n\r\nexport function makeBuildStorageKey(character: TCharacterKey | string, buildname?: string) {\r\n    let result = '構成_' + character;\r\n    if (buildname && buildname != makeDefaultBuildname(character)) {\r\n        result += '_' + buildname;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function makeOptionStorageKey(character: TCharacterKey | string, buildname?: string) {\r\n    return 'オプション' + makeBuildStorageKey(character, buildname);\r\n}\r\n\r\nexport function makeArtifactScoringStorageKey(character: TCharacterKey | string, buildname?: string) {\r\n    return makeBuildStorageKey(character, buildname).replace(/^構成/, 'ArtifactScoring');\r\n}\r\n\r\nexport function makeSupporterBuildnameStorageKey(character: TCharacterKey | string, buildname?: string) {\r\n    return makeBuildStorageKey(character, buildname).replace(/^構成/, 'SupporterBuildname');\r\n}\r\n\r\n/** おすすめセットのリストを作成します. [おすすめセットの名前, おすすめセットの内容, 上書き可不可][] */\r\nexport function makeRecommendationList(\r\n    characterMaster: TAnyObject,\r\n    opt_buildData?: TAnyObject,\r\n): TRecommendation[] {\r\n    const result: TRecommendation[] = [];\r\n\r\n    const character = characterMaster['名前'];\r\n    let isSavable: boolean | null = null;\r\n\r\n    if (opt_buildData) {\r\n        result.push({ name: 'IMPORTED DATA', build: opt_buildData, overwrite: false });\r\n        isSavable = true;\r\n        console.log(opt_buildData);\r\n    }\r\n\r\n    const storageKeyArr: string[] = [];\r\n    Object.keys(localStorage).forEach(key => {\r\n        if (key.startsWith(makeBuildStorageKey(character))) {\r\n            storageKeyArr.push(key);\r\n            if (isSavable == null) {\r\n                isSavable = false;\r\n            }\r\n        }\r\n    });\r\n    storageKeyArr.sort();\r\n    const re = new RegExp('^構成_' + character + '_');\r\n    storageKeyArr.forEach(key => {\r\n        let buildname;\r\n        if (key == makeBuildStorageKey(character)) {\r\n            buildname = makeDefaultBuildname(character);\r\n        } else {\r\n            buildname = key.replace(re, '');\r\n        }\r\n        const buildObj = JSON.parse(localStorage[key]);\r\n        const key2 = 'オプション' + key;\r\n        if (key2 in localStorage) {\r\n            const optionsObj = JSON.parse(localStorage[key2]);\r\n            buildObj.options = optionsObj;\r\n        }\r\n        const key3 = key.replace(/^構成/, 'ArtifactScoring');\r\n        if (key3 in localStorage) {\r\n            const artifactScoringObj = JSON.parse(localStorage[key3]);\r\n            buildObj.artifactScoring = artifactScoringObj;\r\n        }\r\n        const key4 = key.replace(/^構成/, 'SupporterBuildname');\r\n        if (key4 in localStorage) {\r\n            const supporterBuildnameObj = JSON.parse(localStorage[key4]);\r\n            buildObj.supporterBuildname = supporterBuildnameObj;\r\n        }\r\n        result.push({ name: buildname, build: buildObj, overwrite: true });\r\n    });\r\n\r\n    characterMaster['おすすめセット'].forEach((obj: { [key: string]: any }) => {\r\n        const myRecommendation = obj;\r\n        ['聖遺物優先するサブ効果1', '聖遺物優先するサブ効果2', '聖遺物優先するサブ効果3'].forEach(stat => {\r\n            if (!(stat in obj)) {\r\n                obj[stat] = null;\r\n            }\r\n        });\r\n        const artifactRarerityArrArr = [[5, 5, 5, 5, 5], [4, 4, 5, 5, 5], [4, 4, 4, 5, 4]];\r\n        let artifactRarerity4Num = 0;\r\n        const artifactSet1 = myRecommendation['聖遺物セット効果1'] as TArtifactSetKey;\r\n        const artifactSet2 = myRecommendation['聖遺物セット効果2'] as TArtifactSetKey;\r\n        if (ARTIFACT_SET_MASTER[artifactSet1]['レアリティ'] == 4) {\r\n            artifactRarerity4Num++;\r\n        }\r\n        if (ARTIFACT_SET_MASTER[artifactSet2]['レアリティ'] == 4) {\r\n            artifactRarerity4Num++;\r\n        }\r\n        for (let i = 0; i < 2; i++) {\r\n            const name = '聖遺物メイン効果' + (i + 1);\r\n            if (!(name in myRecommendation)) {\r\n                if (i == 0) {\r\n                    myRecommendation[name] = artifactRarerityArrArr[artifactRarerity4Num][i] + '_HP';\r\n                } else if (i == 1) {\r\n                    myRecommendation[name] = artifactRarerityArrArr[artifactRarerity4Num][i] + '_攻撃力';\r\n                }\r\n            }\r\n        }\r\n\r\n        let buildname = myRecommendation['武器'];\r\n        buildname += ' ';\r\n        if (myRecommendation['聖遺物セット効果1'] == myRecommendation['聖遺物セット効果2']) {\r\n            buildname += myRecommendation['聖遺物セット効果1'];\r\n        } else {\r\n            buildname += makeArtifactSetAbbrev(myRecommendation['聖遺物セット効果1']);\r\n            buildname += '/';\r\n            buildname += makeArtifactSetAbbrev(myRecommendation['聖遺物セット効果2']);\r\n        }\r\n        buildname += ' [';\r\n        for (let i = 3; i <= 5; i++) {\r\n            const statusName = myRecommendation['聖遺物メイン効果' + i].split('_')[1];\r\n            if (RECOMMEND_ABBREV_MAP.has(statusName)) {\r\n                buildname += RECOMMEND_ABBREV_MAP.get(statusName);\r\n            } else {\r\n                buildname += statusName.substring(0, 1);\r\n            }\r\n        }\r\n        buildname += ']';\r\n        result.push({ name: buildname, build: myRecommendation, overwrite: false });\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\n/** 聖遺物セット名の略称を作成します */\r\nfunction makeArtifactSetAbbrev(name: string): string {\r\n    const abbrRe = /[\\p{sc=Hiragana}\\p{sc=Katakana}ー]+/ug;\r\n    let abbr = name.replace(abbrRe, '');\r\n    if (abbr.length > 2) {\r\n        abbr = name.split(abbrRe).sort((a, b) => {\r\n            return b.length - a.length;\r\n        })[0];\r\n    }\r\n    if (abbr.length > 3) {\r\n        abbr = abbr.substring(0, 2);\r\n    }\r\n    return abbr;\r\n}\r\n\r\nexport function makePrioritySubstatValueList(\r\n    prioritySubstats: TArtifactSubKey[],\r\n    index: number,\r\n    opt_substat?: TArtifactSubKey\r\n) {\r\n    const result: number[] = [];\r\n    if (prioritySubstats[index]) {\r\n        if (!opt_substat) opt_substat = prioritySubstats[index];\r\n        if (opt_substat && opt_substat in ARTIFACT_SUB_MASTER) {\r\n            const valueArr = ARTIFACT_SUB_MASTER[opt_substat];\r\n            for (let i = 0; i < valueArr.length; i++) {\r\n                result.push(valueArr[i]);\r\n                if (i < valueArr.length - 1) {\r\n                    const diff = valueArr[i + 1] - valueArr[i];\r\n                    result.push(valueArr[i] + diff / 2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function makeEasyInputSubstatValueList(\r\n    substat: TArtifactSubKey\r\n) {\r\n    const result: number[] = [];\r\n    if (substat && substat in ARTIFACT_SUB_MASTER) {\r\n        const valueArr = ARTIFACT_SUB_MASTER[substat];\r\n        for (let i = 0; i < valueArr.length; i++) {\r\n            result.push(valueArr[i]);\r\n            if (i < valueArr.length - 1) {\r\n                const diff = valueArr[i + 1] - valueArr[i];\r\n                result.push(valueArr[i] + diff / 2);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/** おすすめセットをロードします */\r\nexport async function loadRecommendation(\r\n    characterInput: TCharacterInput,\r\n    artifactDetailInput: TArtifactDetailInput,\r\n    conditionInput: TConditionInput,\r\n    optionInput: TOptionInput,\r\n    build: { [key: string]: any }\r\n) {\r\n    try {\r\n        const character = characterInput.character;\r\n        const characterMaster = await getCharacterMasterDetail(character);\r\n        characterInput.characterMaster = characterMaster;\r\n        const artifactStatsSub = _.cloneDeep(聖遺物ステータスTEMPLATE);\r\n\r\n        if ('レベル' in build) {\r\n            [characterInput.突破レベル, characterInput.レベル] = parseLevelStr(build['レベル']);\r\n        }\r\n        ['命ノ星座', '通常攻撃レベル', '元素スキルレベル', '元素爆発レベル'].forEach(key => {\r\n            if (key in build) {\r\n                (characterInput as any)[key] = Number(build[key]);\r\n            }\r\n        });\r\n\r\n        const weaponType = characterMaster['武器'];\r\n        if ('武器' in build) {\r\n            if (Object.keys(WEAPON_MASTER[weaponType]).includes(build['武器'])) {\r\n                characterInput.weapon = build['武器'] as TWeaponKey;\r\n            } else {\r\n                characterInput.weapon = Object.keys(WEAPON_MASTER[weaponType]).filter(s => s.startsWith('西風'))[0] as TWeaponKey;\r\n            }\r\n            characterInput.weaponMaster = await getWeaponMasterDetail(characterInput.weapon, weaponType);\r\n        }\r\n        if ('武器レベル' in build) {\r\n            [characterInput.武器突破レベル, characterInput.武器レベル] = parseLevelStr(build['武器レベル']);\r\n        }\r\n        if ('精錬ランク' in build) {\r\n            characterInput.武器精錬ランク = Number(build['精錬ランク']);\r\n        }\r\n\r\n        let prioritySubstatsDisabled = false;\r\n        for (const key of Object.keys(build).filter((s: string) => s.startsWith('聖遺物サブ効果'))) {\r\n            let toKey = key.replace(/^聖遺物サブ効果/, '');\r\n            if (toKey != 'HP') toKey = toKey.replace(/P$/, '%');\r\n            if (build[key] || build[key] == 0) {\r\n                prioritySubstatsDisabled = true;\r\n                (artifactStatsSub as any)[toKey] = Number(build[key]);\r\n            }\r\n        }\r\n        artifactDetailInput.聖遺物優先するサブ効果Disabled = prioritySubstatsDisabled;\r\n\r\n        ['聖遺物セット効果1', '聖遺物セット効果2'].forEach((key, index) => {\r\n            if (!(key in build)) return;\r\n            const artifactSet = build[key] as TArtifactSetKey;\r\n            if (artifactSet && artifactSet in ARTIFACT_SET_MASTER) {\r\n                characterInput.artifactSets[index] = artifactSet;\r\n                characterInput.artifactSetMasters[index] = ARTIFACT_SET_MASTER[artifactSet] as TArtifactSetEntry;\r\n            } else {\r\n                characterInput.artifactSetMasters[index] = ARTIFACT_SET_MASTER_DUMMY as TArtifactSetEntry;\r\n            }\r\n        });\r\n\r\n        ['聖遺物メイン効果1', '聖遺物メイン効果2'].forEach((key, index) => {\r\n            if (key in build) {\r\n                artifactDetailInput['聖遺物メイン効果'][index] = build[key];\r\n            } else {\r\n                artifactDetailInput['聖遺物メイン効果'][index] = ['5_HP', '5_攻撃力'][index];\r\n            }\r\n        });\r\n        ['聖遺物メイン効果3', '聖遺物メイン効果4', '聖遺物メイン効果5'].forEach((key, index) => {\r\n            if (!(key in build)) return;\r\n            const mainstat = build[key];\r\n            artifactDetailInput['聖遺物メイン効果'][index + 2] = mainstat;\r\n        });\r\n        // for (const entry of artifactDetailInput['聖遺物メイン効果']) {\r\n        //     const [rarity, stat] = entry.split('_');\r\n        //     artifactStatsMain[stat] += (ARTIFACT_MAIN_MASTER as any)[rarity][stat];\r\n        // }\r\n        // overwriteObject(artifactDetailInput.聖遺物ステータスメイン効果, artifactStatsMain);\r\n\r\n        if (!prioritySubstatsDisabled) {\r\n            ['聖遺物優先するサブ効果1', '聖遺物優先するサブ効果2', '聖遺物優先するサブ効果3'].forEach((key, index) => {\r\n                if (!(key in build)) return;\r\n                const substat = build[key];\r\n                artifactDetailInput['聖遺物優先するサブ効果'][index] = substat;\r\n            });\r\n            ['聖遺物優先するサブ効果1上昇値', '聖遺物優先するサブ効果2上昇値', '聖遺物優先するサブ効果3上昇値'].forEach((key, index) => {\r\n                let doUpdate = false;\r\n                if (artifactDetailInput['聖遺物優先するサブ効果'][index]) {\r\n                    if ((key in build) && isNumber(build[key])) {\r\n                        doUpdate = true;\r\n                    }\r\n                }\r\n                if (doUpdate) {\r\n                    const substatValue = Number(build[key]);\r\n                    const substat = artifactDetailInput['聖遺物優先するサブ効果'][index] as TArtifactSubKey;\r\n                    const prioritySubstatValueList = makePrioritySubstatValueList([substat], 0);\r\n                    prioritySubstatValueList.forEach((v, i) => {\r\n                        if (substatValue <= v) {\r\n                            artifactDetailInput['聖遺物優先するサブ効果上昇値'][index] = i;\r\n                        }\r\n                    })\r\n                } else {\r\n                    if (artifactDetailInput['聖遺物優先するサブ効果'][index] && !artifactDetailInput['聖遺物優先するサブ効果上昇値'][index]) {\r\n                        artifactDetailInput['聖遺物優先するサブ効果上昇値'][index] = GENSEN_MASTER_LIST[2].values[index];\r\n                    }\r\n                }\r\n            });\r\n            ['聖遺物優先するサブ効果1上昇回数', '聖遺物優先するサブ効果2上昇回数', '聖遺物優先するサブ効果3上昇回数'].forEach((key, index) => {\r\n                let doUpdate = false;\r\n                if (artifactDetailInput['聖遺物優先するサブ効果'][index]) {\r\n                    if ((key in build) && isNumber(build[key])) {\r\n                        doUpdate = true;\r\n                    }\r\n                }\r\n                if (doUpdate) {\r\n                    const substatCount = Number(build[key]);\r\n                    artifactDetailInput['聖遺物優先するサブ効果上昇回数'][index] = substatCount;\r\n                } else {\r\n                    if (artifactDetailInput['聖遺物優先するサブ効果'][index] && !artifactDetailInput['聖遺物優先するサブ効果上昇回数'][index]) {\r\n                        artifactDetailInput['聖遺物優先するサブ効果上昇回数'][index] = GENSEN_MASTER_LIST[2].counts[index];\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        Object.keys(build).filter(s => !キャラクター構成PROPERTY_MAP.has(s) && !['options', 'artifactScoring', 'supporterBuildname', 'artifact_list'].includes(s)).forEach(key => {\r\n            if (build[key] == null) {\r\n                conditionInput.conditionValues[key] = build[key];   // null\r\n            } else if (_.isString(build[key])) {\r\n                conditionInput.conditionValues[key] = Number(build[key]);\r\n            } else {\r\n                conditionInput.conditionValues[key] = build[key];\r\n            }\r\n        });\r\n\r\n        if ('options' in build) {\r\n            const keys = Object.keys(build.options);\r\n            if (keys.length) {\r\n                overwriteObject(optionInput.elementalResonance.conditionValues, {});\r\n                overwriteObject(optionInput.teamOption.conditionValues, {});\r\n                overwriteObject(optionInput.miscOption.conditionValues, {});\r\n                keys.forEach(key => {\r\n                    if (key in ELEMENTAL_RESONANCE_MASTER || key == 'dendroOption') {\r\n                        // 元素共鳴\r\n                        optionInput.elementalResonance.conditionValues[key] = build.options[key];\r\n                    } else {\r\n                        const astarIndex = key.indexOf('*');\r\n                        if (astarIndex != -1) {\r\n                            const workCharacter = key.substring(0, astarIndex);\r\n                            if (workCharacter in CHARACTER_MASTER) {\r\n                                // チーム\r\n                                optionInput.teamOption.conditionValues[key] = build.options[key];\r\n                            } else {\r\n                                // その他\r\n                                optionInput.miscOption.conditionValues[key] = build.options[key];\r\n                            }\r\n                        } else {\r\n                            // その他\r\n                            optionInput.miscOption.conditionValues[key] = build.options[key];\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        if ('supporterBuildname' in build) {\r\n            const keys = Object.keys(build.supporterBuildname);\r\n            if (keys.length) {\r\n                overwriteObject(optionInput.supporterBuildname, {});\r\n                keys.forEach(key => {\r\n                    optionInput.supporterBuildname[key] = build.supporterBuildname[key];\r\n                });\r\n            }\r\n        }\r\n\r\n        if ('artifact_list' in build) {\r\n            const ARTIFACT_KEYS = Object.keys(ARTIFACT_TEMPLATE).sort();\r\n            const newList = build.artifact_list.filter((s: any) => _.isEqual(Object.keys(s).sort(), ARTIFACT_KEYS));\r\n            artifactDetailInput.artifact_list.splice(0, artifactDetailInput.artifact_list.length, ...newList);\r\n        } else {\r\n            artifactDetailInput.artifact_list.splice(0, artifactDetailInput.artifact_list.length);\r\n        }\r\n\r\n        overwriteObject(artifactDetailInput.聖遺物ステータスサブ効果, artifactStatsSub);\r\n\r\n        console.debug('loadRecommendation', characterInput, artifactDetailInput, conditionInput, build);\r\n    }\r\n    catch (error) {\r\n        console.error(characterInput, artifactDetailInput, conditionInput, build);\r\n        // throw error;\r\n    }\r\n}\r\n\r\nexport function makeSavedata(characterInput: TCharacterInput, artifactDetailInput: TArtifactDetailInput, conditionInput: TConditionInput) {\r\n    const resultObj = {} as any;\r\n\r\n    // キャラクター\r\n    resultObj['キャラクター'] = characterInput.character;\r\n    // レベル\r\n    resultObj['レベル'] = characterInput.レベル + (突破レベルレベルARRAY[characterInput.突破レベル][0] == characterInput.レベル ? '+' : '');\r\n    // 命ノ星座\r\n    resultObj['命ノ星座'] = characterInput.命ノ星座;\r\n    // 通常攻撃レベル\r\n    resultObj['通常攻撃レベル'] = characterInput.通常攻撃レベル;\r\n    // 元素スキルレベル\r\n    resultObj['元素スキルレベル'] = characterInput.元素スキルレベル;\r\n    // 元素爆発レベル\r\n    resultObj['元素爆発レベル'] = characterInput.元素爆発レベル;\r\n    // 武器\r\n    resultObj['武器'] = characterInput.weapon;\r\n    // 武器レベル\r\n    resultObj['武器レベル'] = characterInput.武器レベル + (突破レベルレベルARRAY[characterInput.突破レベル][0] == characterInput.武器レベル ? '+' : '');\r\n    // 精錬ランク\r\n    resultObj['精錬ランク'] = characterInput.武器精錬ランク;\r\n    // 聖遺物セット効果1\r\n    resultObj['聖遺物セット効果1'] = characterInput.artifactSets[0];\r\n    // 聖遺物セット効果2\r\n    resultObj['聖遺物セット効果2'] = characterInput.artifactSets[1];\r\n    // 聖遺物メイン効果1\r\n    resultObj['聖遺物メイン効果1'] = artifactDetailInput.聖遺物メイン効果[0];\r\n    // 聖遺物メイン効果2\r\n    resultObj['聖遺物メイン効果2'] = artifactDetailInput.聖遺物メイン効果[1];\r\n    // 聖遺物メイン効果3\r\n    resultObj['聖遺物メイン効果3'] = artifactDetailInput.聖遺物メイン効果[2];\r\n    // 聖遺物メイン効果4\r\n    resultObj['聖遺物メイン効果4'] = artifactDetailInput.聖遺物メイン効果[3];\r\n    // 聖遺物メイン効果5\r\n    resultObj['聖遺物メイン効果5'] = artifactDetailInput.聖遺物メイン効果[4];\r\n    // 聖遺物サブ効果HP\r\n    resultObj['聖遺物サブ効果HP'] = artifactDetailInput.聖遺物ステータスサブ効果['HP'];\r\n    // 聖遺物サブ効果攻撃力\r\n    resultObj['聖遺物サブ効果攻撃力'] = artifactDetailInput.聖遺物ステータスサブ効果['攻撃力'];\r\n    // 聖遺物サブ効果防御力\r\n    resultObj['聖遺物サブ効果防御力'] = artifactDetailInput.聖遺物ステータスサブ効果['防御力'];\r\n    // 聖遺物サブ効果元素熟知\r\n    resultObj['聖遺物サブ効果元素熟知'] = artifactDetailInput.聖遺物ステータスサブ効果['元素熟知'];\r\n    // 聖遺物サブ効果会心率\r\n    resultObj['聖遺物サブ効果会心率'] = artifactDetailInput.聖遺物ステータスサブ効果['会心率'];\r\n    // 聖遺物サブ効果会心ダメージ\r\n    resultObj['聖遺物サブ効果会心ダメージ'] = artifactDetailInput.聖遺物ステータスサブ効果['会心ダメージ'];\r\n    // 聖遺物サブ効果元素チャージ効率\r\n    resultObj['聖遺物サブ効果元素チャージ効率'] = artifactDetailInput.聖遺物ステータスサブ効果['元素チャージ効率'];\r\n    // 聖遺物サブ効果HPP\r\n    resultObj['聖遺物サブ効果HPP'] = artifactDetailInput.聖遺物ステータスサブ効果['HP%'];\r\n    // 聖遺物サブ効果攻撃力P\r\n    resultObj['聖遺物サブ効果攻撃力P'] = artifactDetailInput.聖遺物ステータスサブ効果['攻撃力%'];\r\n    // 聖遺物サブ効果防御力P\r\n    resultObj['聖遺物サブ効果防御力P'] = artifactDetailInput.聖遺物ステータスサブ効果['防御力%'];\r\n    // 聖遺物優先するサブ効果1\r\n    resultObj['聖遺物優先するサブ効果1'] = artifactDetailInput.聖遺物優先するサブ効果[0];\r\n    // 聖遺物優先するサブ効果1上昇値\r\n    resultObj['聖遺物優先するサブ効果1上昇値'] = artifactDetailInput.聖遺物優先するサブ効果上昇値[0];\r\n    // 聖遺物優先するサブ効果1上昇回数\r\n    resultObj['聖遺物優先するサブ効果1上昇回数'] = artifactDetailInput.聖遺物優先するサブ効果上昇回数[0];\r\n    // 聖遺物優先するサブ効果2\r\n    resultObj['聖遺物優先するサブ効果2'] = artifactDetailInput.聖遺物優先するサブ効果[1];\r\n    // 聖遺物優先するサブ効果2上昇値\r\n    resultObj['聖遺物優先するサブ効果2上昇値'] = artifactDetailInput.聖遺物優先するサブ効果上昇値[1];\r\n    // 聖遺物優先するサブ効果2上昇回数\r\n    resultObj['聖遺物優先するサブ効果2上昇回数'] = artifactDetailInput.聖遺物優先するサブ効果上昇回数[1];\r\n    // 聖遺物優先するサブ効果3\r\n    resultObj['聖遺物優先するサブ効果3'] = artifactDetailInput.聖遺物優先するサブ効果[2];\r\n    // 聖遺物優先するサブ効果3上昇値\r\n    resultObj['聖遺物優先するサブ効果3上昇値'] = artifactDetailInput.聖遺物優先するサブ効果上昇値[2];\r\n    // 聖遺物優先するサブ効果3上昇回数\r\n    resultObj['聖遺物優先するサブ効果3上昇回数'] = artifactDetailInput.聖遺物優先するサブ効果上昇回数[2];\r\n\r\n    for (const entry of conditionInput.checkboxList) {\r\n        resultObj[entry.name] = conditionInput.conditionValues[entry.name];\r\n    }\r\n    for (const entry of conditionInput.selectList) {\r\n        resultObj[entry.name] = conditionInput.conditionValues[entry.name];\r\n    }\r\n\r\n    resultObj['artifact_list'] = artifactDetailInput.artifact_list;\r\n\r\n    return resultObj;\r\n}\r\n\r\nexport function makeOptionsSavedata(character: string, optionInput: TOptionInput) {\r\n    const resultObj = {} as any;\r\n\r\n    // 元素共鳴\r\n    {\r\n        const conditionValues = optionInput.elementalResonance.conditionValues;\r\n        Object.keys(conditionValues).forEach(key => {\r\n            if (conditionValues[key]) {\r\n                resultObj[key] = conditionValues[key];\r\n            }\r\n        })\r\n    }\r\n\r\n    // チーム\r\n    {\r\n        const conditionValues = optionInput.teamOption.conditionValues;\r\n        Object.keys(conditionValues).forEach(key => {\r\n            if (key.startsWith(character + '*')) return;\r\n            if (conditionValues[key]) {\r\n                resultObj[key] = conditionValues[key];\r\n            }\r\n        })\r\n    }\r\n\r\n    // その他\r\n    {\r\n        const conditionValues = optionInput.miscOption.conditionValues;\r\n        Object.keys(conditionValues).forEach(key => {\r\n            if (conditionValues[key]) {\r\n                resultObj[key] = conditionValues[key];\r\n            }\r\n        })\r\n    }\r\n\r\n    return resultObj;\r\n}\r\n\r\nexport function makeSupporterBuildnameSavedata(buildnameSelection: TAnyObject, optionInput: TOptionInput) {\r\n    const result: TAnyObject = {};\r\n    const conditionKeys = Object.keys(optionInput.teamOption.conditionValues);\r\n    for (const supporter of Object.keys(buildnameSelection)) {\r\n        if (!buildnameSelection[supporter]) continue;\r\n        if (conditionKeys.filter(s => s.startsWith(supporter + '*')).length == 0) continue;\r\n        result[supporter] = buildnameSelection[supporter];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const CHANGE_KIND_STATUS = 'ステータス変更系詳細';\r\nexport const CHANGE_KIND_TALENT = '天賦性能変更系詳細';\r\n\r\nexport function makeDamageDetailObjArrObjCharacter(characterInput: TCharacterInput): TDamageDetail {\r\n    const result = {} as any;\r\n    try {\r\n        const characterMaster = characterInput.characterMaster as any;\r\n\r\n        let myTalentDetail;\r\n        let myTalentLevel: number;\r\n        let myDefaultKind: string | null;\r\n        let myDefaultElement: string | null;\r\n        const myInputCategory = 'キャラクター';\r\n\r\n        const myStatusChangeDetailObjArr = [] as any[];\r\n        const myTalentChangeDetailObjArr = [] as any[];\r\n\r\n        // 通常攻撃 重撃 落下攻撃\r\n        myTalentLevel = characterInput['通常攻撃レベル'];\r\n        myDefaultElement = characterMaster['武器'] === '法器' ? characterMaster['元素'] : null;\r\n        ['通常攻撃', '重撃', '落下攻撃'].forEach(category => {\r\n            myTalentDetail = characterMaster[category];\r\n            myDefaultKind = category + 'ダメージ';\r\n            result[category] = makeDamageDetailObjArr(myTalentDetail, myTalentLevel, myDefaultKind, myDefaultElement, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n        });\r\n\r\n        ['通常攻撃', '重撃', '落下攻撃'].forEach(category => {\r\n            const workCategory = '特殊' + category;\r\n            if (workCategory in characterMaster) {\r\n                myTalentDetail = characterMaster[workCategory];\r\n                if ('種類' in myTalentDetail) {\r\n                    myDefaultKind = myTalentDetail['種類'];\r\n                    switch (myDefaultKind) {\r\n                        case '元素スキルダメージ':\r\n                            myTalentLevel = characterInput['元素スキルレベル'];\r\n                            break;\r\n                        case '元素爆発ダメージ':\r\n                            myTalentLevel = characterInput['元素爆発レベル'];\r\n                            break;\r\n                    }\r\n                }\r\n                if ('元素' in myTalentDetail) {\r\n                    myDefaultElement = myTalentDetail['元素'];\r\n                }\r\n                const workObj = {\r\n                    条件: myTalentDetail['条件'],\r\n                    詳細: makeDamageDetailObjArr(myTalentDetail, myTalentLevel, myDefaultKind, myDefaultElement, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory)\r\n                };\r\n                result[workCategory] = workObj;\r\n            }\r\n        });\r\n\r\n        // 元素スキル\r\n        myTalentLevel = characterInput['元素スキルレベル'];\r\n        myDefaultKind = '元素スキルダメージ';\r\n        myDefaultElement = characterMaster['元素'];\r\n        result['元素スキル'] = makeDamageDetailObjArr(characterMaster['元素スキル'], myTalentLevel, myDefaultKind, myDefaultElement, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n\r\n        // 元素爆発\r\n        myTalentLevel = characterInput['元素爆発レベル'];\r\n        myDefaultKind = '元素爆発ダメージ';\r\n        myDefaultElement = characterMaster['元素'];\r\n        result['元素爆発'] = makeDamageDetailObjArr(characterMaster['元素爆発'], myTalentLevel, myDefaultKind, myDefaultElement, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n\r\n        result['その他'] = [] as TDamageDetailObj[];\r\n\r\n        // その他戦闘天賦\r\n        if ('その他戦闘天賦' in characterMaster) {\r\n            characterMaster['その他戦闘天賦'].forEach((myTalentDetail: any) => {\r\n                const workArr = makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n                if (workArr.length > 0) result['その他'].push(...workArr);\r\n            });\r\n        }\r\n\r\n        // 固有天賦\r\n        characterMaster['固有天賦'].forEach((myTalentDetail: any) => {\r\n            const workArr = makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n            if (workArr.length > 0) result['その他'].push(...workArr);\r\n        });\r\n\r\n        // 命ノ星座\r\n        if ('命ノ星座' in characterMaster) {\r\n            Object.keys(characterMaster['命ノ星座']).forEach(key => {\r\n                if (Number(key) > characterInput.命ノ星座) return;\r\n                myTalentDetail = characterMaster['命ノ星座'][key];\r\n                const workArr = makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n                if (workArr.length > 0) result['その他'].push(...workArr);\r\n            });\r\n        }\r\n\r\n        // 風元素キャラクター\r\n        if (characterMaster['元素'] == '風') {\r\n            if (myTalentChangeDetailObjArr.filter(s => s.条件 && s.条件.startsWith('拡散@')).length == 0) {\r\n                ['炎元素', '水元素', '雷元素', '氷元素'].forEach(cond => {\r\n                    myTalentChangeDetailObjArr.push({\r\n                        名前: null,\r\n                        種類: '固有変数',\r\n                        元素: null,\r\n                        数値: null,\r\n                        条件: '拡散@' + cond,\r\n                        対象: null,\r\n                        上限: null,\r\n                        HIT数: null,\r\n                        ダメージバフ: null,\r\n                        元素付与無効: null,\r\n                        除外条件: null,\r\n                        適用条件: null\r\n                    });\r\n                });\r\n            }\r\n            if ('オプション初期値' in characterMaster) {\r\n                if (Object.keys(characterMaster['オプション初期値']).filter(s => s == '拡散').length == 0) {\r\n                    characterMaster['オプション初期値']['拡散'] = 1;\r\n                }\r\n            } else {\r\n                characterMaster['オプション初期値'] = { 拡散: 1 };\r\n            }\r\n        }\r\n\r\n        result[CHANGE_KIND_STATUS] = myStatusChangeDetailObjArr;\r\n        result[CHANGE_KIND_TALENT] = myTalentChangeDetailObjArr;\r\n\r\n        const conditionMap = new Map();\r\n        const exclusionMap = new Map();\r\n        myStatusChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        myTalentChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        // conditionMap.delete('命ノ星座');\r\n        conditionMap.forEach((value, key) => {\r\n            if (value && Array.isArray(value)) {\r\n                if (!value[0].startsWith('required_')) {\r\n                    conditionMap.set(key, ['', ...value]);\r\n                }\r\n            }\r\n        });\r\n        result['条件'] = conditionMap;\r\n        result['排他'] = exclusionMap;\r\n\r\n        characterInput.damageDetailMyCharacter = result;\r\n    } catch (error) {\r\n        console.error(characterInput, result);\r\n        // throw error;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function makeDamageDetailObjArrObjWeapon(characterInput: any) {\r\n    const result = {} as any;\r\n    try {\r\n        const name = characterInput.weapon;\r\n        const weaponMaster = characterInput.weaponMaster;\r\n        if (!name || !weaponMaster) return result;\r\n\r\n        let myTalentDetail;\r\n        const myLevel = characterInput.武器精錬ランク;\r\n        const myInputCategory = '武器';\r\n\r\n        const myStatusChangeDetailObjArr = [] as any[];\r\n        const myTalentChangeDetailObjArr = [] as any[];\r\n\r\n        if ('武器スキル' in weaponMaster) {\r\n            myTalentDetail = weaponMaster['武器スキル'];\r\n            result['その他'] = makeDamageDetailObjArr(myTalentDetail, myLevel, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n        }\r\n\r\n        result[CHANGE_KIND_STATUS] = myStatusChangeDetailObjArr;\r\n        result[CHANGE_KIND_TALENT] = myTalentChangeDetailObjArr;\r\n\r\n        const conditionMap = new Map();\r\n        const exclusionMap = new Map();\r\n        myStatusChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            let condition = detailObj['条件'];\r\n            if (_.isPlainObject(condition) && myLevel in condition) {\r\n                condition = condition[myLevel];\r\n            }\r\n            makeConditionExclusionMapFromStr(condition, conditionMap, exclusionMap);\r\n        });\r\n        myTalentChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            let condition = detailObj['条件'];\r\n            if (_.isPlainObject(condition) && myLevel in condition) {\r\n                condition = condition[myLevel];\r\n            }\r\n            makeConditionExclusionMapFromStr(condition, conditionMap, exclusionMap);\r\n        });\r\n        conditionMap.forEach((value, key) => {\r\n            if (value && Array.isArray(value)) {\r\n                if (!value[0].startsWith('required_')) {\r\n                    conditionMap.set(key, ['', ...value]);\r\n                }\r\n            }\r\n        });\r\n        result['条件'] = conditionMap;\r\n        result['排他'] = exclusionMap;\r\n\r\n        characterInput.damageDetailMyWeapon = result;\r\n    } catch (error) {\r\n        console.error(characterInput, result);\r\n        // throw error;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function makeDamageDetailObjArrObjArtifactSets(characterInput: any) {\r\n    const result = [] as any;\r\n    try {\r\n        let myTalentDetail;\r\n        const myInputCategory = '聖遺物セット効果';\r\n\r\n        const myStatusChangeDetailObjArr = [] as any[];\r\n        const myTalentChangeDetailObjArr = [] as any[];\r\n\r\n        const artifactSetMasters = characterInput.artifactSetMasters.filter((s: any) => s);\r\n\r\n        if (artifactSetMasters.length > 0) {\r\n            const damageDetailObjArr = [] as TDamageDetailObj[];\r\n            if ('2セット効果' in artifactSetMasters[0]) {\r\n                myTalentDetail = artifactSetMasters[0]['2セット効果'];\r\n                damageDetailObjArr.push(...makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory));\r\n            }\r\n            if (artifactSetMasters.length == 2) {\r\n                if (artifactSetMasters[0] == artifactSetMasters[1]) {\r\n                    myTalentDetail = artifactSetMasters[0]['4セット効果'];\r\n                    damageDetailObjArr.push(...makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory));\r\n                } else {\r\n                    myTalentDetail = artifactSetMasters[1]['2セット効果'];\r\n                    damageDetailObjArr.push(...makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory));\r\n                }\r\n            }\r\n            result['その他'] = damageDetailObjArr;\r\n        }\r\n\r\n        result[CHANGE_KIND_STATUS] = myStatusChangeDetailObjArr;\r\n        result[CHANGE_KIND_TALENT] = myTalentChangeDetailObjArr;\r\n\r\n        const conditionMap = new Map();\r\n        const exclusionMap = new Map();\r\n        myStatusChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        myTalentChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        conditionMap.forEach((value, key) => {\r\n            if (value && Array.isArray(value)) {\r\n                if (!value[0].startsWith('required_')) {\r\n                    conditionMap.set(key, ['', ...value]);\r\n                }\r\n            }\r\n        });\r\n        result['条件'] = conditionMap;\r\n        result['排他'] = exclusionMap;\r\n\r\n        characterInput.damageDetailMyArtifactSets = result;\r\n    } catch (error) {\r\n        console.error(characterInput, result);\r\n        // throw error;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function makeDamageDetailObjArrObjElementalResonance(characterInput: any) {\r\n    const result = [] as any;\r\n    try {\r\n        const myInputCategory = '元素共鳴';\r\n        const damageDetailObjArr = [] as TDamageDetailObj[];\r\n        const myStatusChangeDetailObjArr = [] as any[];\r\n        const myTalentChangeDetailObjArr = [] as any[];\r\n        for (const myTalentDetail of ELEMENTAL_RESONANCE_MASTER_LIST) {\r\n            const workObj = _.cloneDeep(myTalentDetail);\r\n            if (workObj.詳細) {\r\n                workObj.詳細.forEach((detailObj: TAnyObject) => {\r\n                    detailObj.名前 = myTalentDetail.key;\r\n                });\r\n            }\r\n            damageDetailObjArr.push(...makeDamageDetailObjArr(workObj, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory));\r\n        }\r\n        result['その他'] = damageDetailObjArr;\r\n        result[CHANGE_KIND_STATUS] = myStatusChangeDetailObjArr;\r\n        result[CHANGE_KIND_TALENT] = myTalentChangeDetailObjArr;\r\n\r\n        const conditionMap = new Map();\r\n        const exclusionMap = new Map();\r\n        myStatusChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        myTalentChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        conditionMap.forEach((value, key) => {\r\n            if (value && Array.isArray(value)) {\r\n                if (!value[0].startsWith('required_')) {\r\n                    conditionMap.set(key, ['', ...value]);\r\n                }\r\n            }\r\n        });\r\n        result['条件'] = conditionMap;\r\n        result['排他'] = exclusionMap;\r\n\r\n        characterInput.damageDetailElementalResonance = result;\r\n    } catch (error) {\r\n        console.error(characterInput, result);\r\n        // throw error;\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction makeDetailObj(\r\n    detailObj: any,\r\n    level: number | null,\r\n    defaultKind: string | null,\r\n    defaultElement: string | null,\r\n    inputCategory: string | null,\r\n    opt_condition?: string,\r\n): TDamageDetailObj {\r\n    let my種類 = '種類' in detailObj ? detailObj['種類'] : defaultKind;\r\n    let my対象 = null;\r\n    if (my種類.indexOf('.') != -1) {\r\n        my対象 = my種類.substring(my種類.indexOf('.') + 1);\r\n        my種類 = my種類.substring(0, my種類.indexOf('.'));\r\n    } else if ('対象' in detailObj) {\r\n        my対象 = detailObj['対象'];\r\n    }\r\n    let my数値 = null;\r\n    if ('数値' in detailObj) {\r\n        my数値 = detailObj['数値'];\r\n        if (isNumber(my数値) || _.isString(my数値)) {\r\n            // nop\r\n        } else if (_.isPlainObject(my数値) && level && level in my数値) { // キャラクター|武器のサブステータス\r\n            my数値 = my数値[level];\r\n        } else {\r\n            console.error(detailObj, level, defaultKind, defaultElement, my数値);\r\n        }\r\n        if (DAMAGE_CATEGORY_ARRAY.includes(my種類 + 'ダメージ') || my種類.endsWith('ダメージ')) {\r\n            my数値 = analyzeFormulaStr(my数値, '攻撃力');\r\n        } else {\r\n            my数値 = analyzeFormulaStr(my数値, my種類);\r\n        }\r\n    }\r\n    let my条件 = null;\r\n    if ('条件' in detailObj) {\r\n        if (_.isPlainObject(detailObj['条件']) && level && level in detailObj['条件']) {  // 武器は精錬ランクによって数値を変えたいときがあるので\r\n            my条件 = detailObj['条件'][level];\r\n        } else {\r\n            my条件 = detailObj['条件'];\r\n        }\r\n    } else {\r\n        my条件 = opt_condition ?? null;\r\n    }\r\n    let my上限 = null;\r\n    if ('上限' in detailObj) {\r\n        my上限 = detailObj['上限'];\r\n        if (_.isPlainObject(my上限) && level && level in my上限) {   // 草薙の稲光\r\n            my上限 = my上限[level];\r\n        }\r\n        my上限 = analyzeFormulaStr(my上限);\r\n    }\r\n    let my下限 = null;\r\n    if ('下限' in detailObj) {  // ニィロウ\r\n        my下限 = detailObj['下限'];\r\n        if (_.isPlainObject(my下限) && level && level in my下限) {\r\n            my下限 = my下限[level];\r\n        }\r\n        my下限 = analyzeFormulaStr(my下限);\r\n    }\r\n    const resultObj: TDamageDetailObj = {\r\n        名前: detailObj['名前'],\r\n        種類: my種類,\r\n        元素: '元素' in detailObj ? detailObj['元素'] : defaultElement,\r\n        数値: my数値,\r\n        条件: my条件,\r\n        対象: my対象,\r\n        上限: my上限,\r\n        下限: my下限,\r\n        HIT数: 'HIT数' in detailObj ? detailObj['HIT数'] : null,\r\n        ダメージバフ: 'ダメージバフ' in detailObj ? detailObj['ダメージバフ'] : null,\r\n        元素付与無効: '元素付与無効' in detailObj ? detailObj['元素付与無効'] : inputCategory == '武器',\r\n        除外条件: '除外条件' in detailObj ? detailObj['除外条件'] : null,\r\n        適用条件: '適用条件' in detailObj ? detailObj['適用条件'] : null,\r\n    }\r\n    return resultObj;\r\n}\r\n\r\nexport function getChangeKind(kind: string) {\r\n    if (kind in ステータスTEMPLATE\r\n        || new RegExp('[自全].+(バフ|アップ)').exec(kind)\r\n        || ['その他ダメージアップ'].includes(kind)  // for 放浪者\r\n        || new RegExp('敵?[自全]元素耐性').exec(kind)\r\n        || ['別枠乗算', '回復量アップ'].includes(kind)\r\n        || ['敵防御力'].includes(kind)\r\n        || ['発動回数', '使用回数'].includes(kind)\r\n        || ['攻撃速度', '通常攻撃速度', '重撃速度', '移動速度'].includes(kind)\r\n        || kind.endsWith('継続時間')\r\n        || kind.endsWith('クールタイム')\r\n        || kind.endsWith('会心率')\r\n        || kind.endsWith('会心ダメージ')\r\n    ) {\r\n        return 'STATUS';\r\n    } else if (kind.endsWith('強化')\r\n        || kind.endsWith('付与')\r\n        || kind == '防御無視' ||\r\n        kind == '固有変数'\r\n    ) {   // ex.元素爆発強化,氷元素付与\r\n        return 'TALENT';\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport function makeDamageDetailObjArr(\r\n    talentDataObj: any,\r\n    level: number | null,\r\n    defaultKind: string | null,\r\n    defaultElement: string | null,\r\n    statusChangeDetailObjArr: any[],\r\n    talentChangeDetailObjArr: any[],\r\n    inputCategory: string,\r\n    opt_condition?: string,\r\n): TDamageDetailObj[] {\r\n    const resultArr = [] as any[];\r\n    if (!('詳細' in talentDataObj)) return resultArr;\r\n\r\n    talentDataObj['詳細'].forEach((detailObj: TAnyObject) => {\r\n        const resultObj = makeDetailObj(detailObj, level, defaultKind, defaultElement, inputCategory, opt_condition);\r\n        const my種類 = resultObj.種類 as string;\r\n        if (statusChangeDetailObjArr != null && getChangeKind(my種類) == 'STATUS') {\r\n            resultObj['元素'] = '元素' in detailObj ? detailObj['元素'] : null;\r\n            statusChangeDetailObjArr.push(resultObj);\r\n            return;\r\n        }\r\n        if (talentChangeDetailObjArr != null && getChangeKind(my種類) == 'TALENT') {\r\n            resultObj['元素'] = '元素' in detailObj ? detailObj['元素'] : null;\r\n            talentChangeDetailObjArr.push(resultObj);\r\n            return;\r\n        }\r\n        resultArr.push(resultObj);\r\n    });\r\n\r\n    return resultArr;\r\n}\r\n\r\nexport function makeTeamOptionDetailObjArr(\r\n    detailObjArr: any[],\r\n): TDamageDetailObj[] {\r\n    const resultArr = [] as any[];\r\n\r\n    detailObjArr.forEach((detailObj: { [x: string]: any; }) => {\r\n        const resultObj = makeDetailObj(detailObj, null, null, null, null);\r\n        if (resultObj) {\r\n            resultArr.push(resultObj);\r\n        }\r\n    });\r\n\r\n    return resultArr;\r\n}\r\n\r\n// 条件名\r\n// 条件名@prefix数値postfix\r\n// 条件名@prefix数値(From)-数値(To)postfix\r\n// 条件名@prefix数値1,数値2,数値3postfix\r\n// 条件名=prefix数値postfix\r\n// 条件名@文字列\r\n// 条件名=文字列\r\n// 条件名={min=数値|文字列,max=数値|文字列,step=数値}\r\n// OR条件   条件A|条件B\r\n// AND条件  条件A&条件B\r\n// 排他条件 条件A^条件B\r\nexport function makeConditionExclusionMapFromStr(\r\n    conditionStr: string,\r\n    conditionMap: Map<string, string[] | null | object>,\r\n    exclusionMap: Map<string, string[] | null>\r\n) {\r\n    // 排他条件を抽出します\r\n    let exclusionCond: string | null = null;\r\n    let myCondStrArr = conditionStr.split('^');\r\n    if (myCondStrArr.length > 1) {\r\n        exclusionCond = myCondStrArr[1];\r\n    }\r\n    const myCondStr = myCondStrArr[0];\r\n    if (myCondStr.indexOf('|') != -1) {\r\n        // OR条件 for 申鶴\r\n        myCondStrArr = myCondStr.split('|');\r\n        myCondStrArr.forEach((myCondStr: string) => {\r\n            makeConditionExclusionMapFromStrSub(myCondStr, conditionMap, exclusionMap, exclusionCond);\r\n        });\r\n    } else {\r\n        // AND条件\r\n        myCondStrArr = myCondStr.split('&');\r\n        myCondStrArr.forEach((myCondStr: string) => {\r\n            makeConditionExclusionMapFromStrSub(myCondStr, conditionMap, exclusionMap, exclusionCond);\r\n        });\r\n    }\r\n}\r\n\r\nexport const NUMBER_CONDITION_VALUE_RE = /^\\s*{.+}\\s*$/;\r\n\r\nfunction makeConditionExclusionMapFromStrSub(\r\n    conditionStr: string,\r\n    conditionMap: Map<string, string[] | null | object>,\r\n    exclusionMap: Map<string, string[] | null>,\r\n    exclusion: string | null\r\n) {\r\n    const myCondStrArr = conditionStr.split(/[@=]/);\r\n    const myName = myCondStrArr[0];\r\n    if (myCondStrArr.length == 1) {\r\n        pushToMapValueArray(conditionMap, myName, null);\r\n    } else if (myCondStrArr.length == 2) {\r\n        if (NUMBER_CONDITION_VALUE_RE.test(myCondStrArr[1])) {\r\n            try {\r\n                const workObj = JSON.parse(myCondStrArr[1]);\r\n                if ('min' in workObj) { // minは必須\r\n                    const conditionObj = {\r\n                        min: workObj.min,\r\n                        max: workObj.max,\r\n                        step: workObj.step,\r\n                    };\r\n                    pushToMapValueArray(conditionMap, myName, conditionObj);\r\n                } else {\r\n                    console.error(conditionStr, conditionMap, exclusionMap, exclusion);\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n                console.error(conditionStr, conditionMap, exclusionMap, exclusion);\r\n            }\r\n        } else if (myCondStrArr[1].indexOf(',') != -1) {\r\n            const re = new RegExp('([^0-9]*?)([\\\\+\\\\-0-9\\\\.,]+)(.*)');  // 表現可能:-10,+60%\r\n            const reRet = re.exec(myCondStrArr[1]);\r\n            if (reRet) {\r\n                const prefix = reRet[1];\r\n                const condValueArr = reRet[2].split(',');\r\n                const postfix = reRet[3];\r\n                condValueArr.forEach(value => {\r\n                    pushToMapValueArray(conditionMap, myName, prefix + value + postfix);\r\n                });\r\n            }\r\n        } else if (myCondStrArr[1].indexOf('-') != -1) {\r\n            const re = new RegExp('([^0-9\\\\.]*)(-?[0-9\\\\.]+)-(-?[0-9\\\\.]+)(.*)');   // 数値部に+は含められない。prefixには含められる。\r\n            const re2 = new RegExp('/([0-9\\\\.]+)(.*)');\r\n            const reRet = re.exec(myCondStrArr[1]);\r\n            if (reRet) {\r\n                const prefix = reRet[1];\r\n                const rangeStart = Number(reRet[2]);\r\n                const rangeEnd = Number(reRet[3]);\r\n                let step = rangeStart;\r\n                let postfix = reRet[4];\r\n                if (postfix) {\r\n                    const re2Ret = re2.exec(postfix);\r\n                    if (re2Ret) {\r\n                        step = Number(re2Ret[1]);\r\n                        postfix = re2Ret[2];\r\n                    }\r\n                }\r\n                for (let i = rangeStart; i < rangeEnd; i = addDecimal(i, step, rangeEnd)) {\r\n                    pushToMapValueArray(conditionMap, myName, prefix + String(i) + postfix);\r\n                }\r\n                pushToMapValueArray(conditionMap, myName, prefix + String(rangeEnd) + postfix);\r\n            } else {\r\n                pushToMapValueArray(conditionMap, myName, myCondStrArr[1]);\r\n            }\r\n        } else {\r\n            pushToMapValueArray(conditionMap, myName, myCondStrArr[1]);\r\n        }\r\n    } else {\r\n        console.error(conditionStr, conditionMap, exclusionMap, exclusion);\r\n    }\r\n    if (exclusion) {\r\n        exclusion.split(',').forEach(e => {\r\n            pushToMapValueArray(exclusionMap, myName, e);\r\n        });\r\n    }\r\n}\r\n\r\nexport function setupConditionValues(\r\n    conditionInput: TConditionInput,\r\n    characterInput: TCharacterInput,\r\n    optionInput: TOptionInput,\r\n) {\r\n    try {\r\n        const conditionValues = conditionInput.conditionValues;\r\n        const checkboxList = conditionInput.checkboxList as TCheckboxEntry[];\r\n        const selectList = conditionInput.selectList as TSelectEntry[];\r\n        const numberList = conditionInput.numberList as TNumberEntry[];\r\n\r\n        checkboxList.splice(0, checkboxList.length);\r\n        selectList.splice(0, selectList.length);\r\n\r\n        const masters = [characterInput.characterMaster, characterInput.weaponMaster, ...characterInput.artifactSetMasters];\r\n        for (const master of masters.filter(s => s)) {\r\n            if ('オプション初期値' in master) {\r\n                for (const key of Object.keys((master as any)['オプション初期値'])) {\r\n                    if (!(key in conditionValues)) {\r\n                        conditionValues[key] = (master as any)['オプション初期値'][key];\r\n                    }\r\n                }\r\n            }\r\n            // 聖遺物セット効果のオプション初期値は変な位置にあります\r\n            if ('4セット効果' in master && 'オプション初期値' in (master as any)['4セット効果']) {\r\n                for (const key of Object.keys((master as any)['4セット効果']['オプション初期値'])) {\r\n                    if (!(key in conditionValues)) {\r\n                        conditionValues[key] = (master as any)['4セット効果']['オプション初期値'][key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const myDamageDetail of [characterInput.damageDetailMyCharacter, characterInput.damageDetailMyWeapon, characterInput.damageDetailMyArtifactSets]) {\r\n            if (myDamageDetail) {\r\n                const conditionMap: Map<string, string[] | null | object> = myDamageDetail.条件;\r\n                const exclusionMap: Map<string, string[] | null> = myDamageDetail.排他;\r\n\r\n                conditionMap.forEach((value: string[] | null | object, key: string) => {\r\n                    if (value == null) {\r\n                        if (checkboxList.filter(s => s.name == key).length == 0) {\r\n                            checkboxList.push({ name: key });\r\n                        }\r\n                    } else if (Array.isArray(value)) {\r\n                        if (selectList.filter(s => s.name == key).length == 0) {\r\n                            const required = value[0].startsWith(\"required_\");\r\n                            selectList.push({\r\n                                name: key,\r\n                                options: value,\r\n                                required: required,\r\n                            });\r\n                        }\r\n                    } else if (_.isPlainObject(value)) {\r\n                        if (numberList.filter(s => s.name == key).length == 0) {\r\n                            const entry = {\r\n                                name: key,\r\n                                min: (value as any).min,\r\n                                max: (value as any).max,\r\n                                step: (value as any).step,\r\n                            };\r\n                            numberList.push(entry);\r\n                        }\r\n                    }\r\n                    if (key in conditionValues && conditionValues[key] != null) {\r\n                        const exclusions = exclusionMap.get(key);\r\n                        if (exclusions) {\r\n                            for (const exclusion of exclusions) {\r\n                                if (exclusion in conditionValues) {\r\n                                    const conditionValue = conditionMap.get(exclusion);\r\n                                    if (conditionValue === null) {  // checkbox\r\n                                        conditionValues[exclusion] = false;\r\n                                    } else if (Array.isArray(value)) {    // select\r\n                                        conditionValues[exclusion] = 0;\r\n                                    } else if (_.isPlainObject(value)) {    // number\r\n                                        const minValue = (value as any).min;\r\n                                        if (isNumber(minValue)) {\r\n                                            conditionValues[exclusion] = minValue;\r\n                                        } else {\r\n                                            conditionValues[exclusion] = 0;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (value === null) {   // checkbox\r\n                            let checked = true;\r\n                            const arr = exclusionMap.get(key);\r\n                            if (arr && arr.filter(s => conditionValues[s]).length > 0) {\r\n                                checked = false;\r\n                            }\r\n                            conditionValues[key] = checked;\r\n                        } else if (Array.isArray(value)) {   // select\r\n                            let selectedIndex = value.length - 1;\r\n                            const arr = exclusionMap.get(key);\r\n                            if (arr && arr.filter(s => conditionValues[s]).length > 0) {\r\n                                selectedIndex = 0;\r\n                            }\r\n                            conditionValues[key] = selectedIndex;\r\n                        } else if (_.isPlainObject(value)) {    // number\r\n                            const minValue = (value as any).min;\r\n                            if (isNumber(minValue)) {\r\n                                conditionValues[key] = minValue;\r\n                            } else {\r\n                                conditionValues[key] = 0;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (optionInput.elementalResonance) {\r\n            const conditionMap: Map<string, any[] | null | object> = new Map();\r\n            const exclusionMap: Map<string, string[] | null> = new Map();\r\n            for (const key of Object.keys(ELEMENTAL_RESONANCE_MASTER)) {\r\n                if (!optionInput.elementalResonance.conditionValues[key]) continue;\r\n                const master = (ELEMENTAL_RESONANCE_MASTER as any)[key];\r\n                if (!master.詳細) continue;\r\n                for (const detailObj of master.詳細) {\r\n                    if (!detailObj.条件) continue;\r\n                    makeConditionExclusionMapFromStr(detailObj.条件, conditionMap, exclusionMap);\r\n                }\r\n            }\r\n            conditionMap.forEach((value: string[] | null | object, key: string) => {\r\n                if (value == null) {\r\n                    if (checkboxList.filter(s => s.name == key).length == 0) {\r\n                        checkboxList.push({ name: key });\r\n                    }\r\n                } else if (Array.isArray(value)) {\r\n                    if (selectList.filter(s => s.name == key).length == 0) {\r\n                        const required = value[0].startsWith(\"required_\");\r\n                        selectList.push({\r\n                            name: key,\r\n                            options: value,\r\n                            required: required,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                if (key in conditionValues && conditionValues[key] != null) {\r\n                    const exclusions = exclusionMap.get(key);\r\n                    if (exclusions) {\r\n                        for (const exclusion of exclusions) {\r\n                            if (exclusion in conditionValues) {\r\n                                const conditionValue = conditionMap.get(exclusion);\r\n                                if (conditionValue === null) {  // checkbox\r\n                                    conditionValues[exclusion] = false;\r\n                                } else if (Array.isArray(value)) {    // select\r\n                                    conditionValues[exclusion] = 0;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (value === null) {   // checkbox\r\n                        let checked = true;\r\n                        const arr = exclusionMap.get(key);\r\n                        if (arr && arr.filter(s => conditionValues[s]).length > 0) {\r\n                            checked = false;\r\n                        }\r\n                        conditionValues[key] = checked;\r\n                    } else if (Array.isArray(value)) {   // select\r\n                        let selectedIndex = value.length - 1;\r\n                        const arr = exclusionMap.get(key);\r\n                        if (arr && arr.filter(s => conditionValues[s]).length > 0) {\r\n                            selectedIndex = 0;\r\n                        }\r\n                        conditionValues[key] = selectedIndex;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    } catch (error) {\r\n        console.error(conditionInput, characterInput);\r\n        // throw error;\r\n    }\r\n}\r\n\r\nexport function getStatValue(stat: string, statsObj: TStats) {\r\n    let result;\r\n    if (stat in statsObj) {\r\n        result = statsObj[stat];\r\n    } else {\r\n        const re = /(.+)X([0-7])$/;\r\n        const reRet = re.exec(stat);\r\n        if (reRet) {\r\n            if (reRet[1] in statsObj) {\r\n                result = statsObj[reRet[1]];\r\n                let n = Number(reRet[2]);\r\n                for (let i = 1; i <= 3; i++) {\r\n                    if ((n % 2) == 1) {\r\n                        const vStat: string = reRet[1] + 'V' + i;\r\n                        if (vStat in statsObj) {\r\n                            result -= statsObj[vStat];\r\n                        }\r\n                    }\r\n                    n = Math.trunc(n / 2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (result === undefined) {\r\n        console.warn(stat, statsObj); // キャラクターが切り替わったときとかによく引っ掛かる\r\n        result = 0; // fixed\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function updateNumberConditionValues(\r\n    conditionInput: TConditionInput,\r\n    characterInput: TCharacterInput,\r\n    statsObj: TStats,\r\n) {\r\n    for (const myDamageDetail of [characterInput.damageDetailMyCharacter, characterInput.damageDetailMyWeapon, characterInput.damageDetailMyArtifactSets]) {\r\n        if (myDamageDetail) {\r\n            const conditionMap: Map<string, string[] | null | object> = myDamageDetail.条件;\r\n            conditionMap.forEach((value: string[] | null | object, key: string) => {\r\n                if (_.isPlainObject(value)) {\r\n                    const numberEntryArr = conditionInput.numberList.filter(s => s.name == key);\r\n                    if (numberEntryArr.length > 0) {\r\n                        let minValue = (value as any).min;\r\n                        let maxValue = (value as any).max;\r\n                        if (_.isString(minValue) || _.isString(maxValue)) {\r\n                            if (_.isString(minValue)) {\r\n                                minValue = getStatValue(minValue, statsObj);\r\n                            }\r\n                            if (_.isString(maxValue)) {\r\n                                maxValue = getStatValue(maxValue, statsObj);\r\n                            }\r\n                            numberEntryArr[0].min = minValue;\r\n                            numberEntryArr[0].max = maxValue;\r\n                            if (key in conditionInput.conditionValues) {\r\n                                const value = conditionInput.conditionValues[key];\r\n                                if (_.isNumber(value)) {\r\n                                    if (value < minValue) {\r\n                                        conditionInput.conditionValues[key] = minValue;\r\n                                    } else if (maxValue !== undefined && value > maxValue) {\r\n                                        conditionInput.conditionValues[key] = maxValue;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction pushToMapValueArray(map: Map<any, any>, key: any, value: any) {\r\n    if (value == null) {    // checkbox\r\n        if (!map.has(key)) {\r\n            map.set(key, null);\r\n        }\r\n    } else if (_.isString(value)) { // select\r\n        if (map.has(key)) {\r\n            const oldValue = map.get(key);\r\n            if (oldValue == null) {\r\n                map.set(key, [value]);\r\n            } else if (Array.isArray(oldValue)) {\r\n                if (!oldValue.includes(value)) {\r\n                    map.get(key).push(value);\r\n                }\r\n            } else {\r\n                console.error(map, key, value);\r\n            }\r\n        } else {\r\n            map.set(key, [value]);\r\n        }\r\n    } else if (_.isPlainObject(value)) {    // number\r\n        map.set(key, value);\r\n    }\r\n}\r\n\r\nfunction getDecimalLength(value: number): number {\r\n    const arr = ('' + value).split('.');\r\n    return arr.length > 1 ? arr[1].length : 0;\r\n}\r\n\r\nexport function multiplyDecimal(value1: number, value2: number): number {\r\n    const decimalLength = getDecimalLength(value1) + getDecimalLength(value2);\r\n    const intValue1 = Number(('' + value1).replace('.', ''));\r\n    const intValue2 = Number(('' + value2).replace('.', ''));\r\n    const result = (intValue1 * intValue2) / Math.pow(10, decimalLength);\r\n    return Number(result);\r\n}\r\n\r\nexport function addDecimal(value1: number, value2: number, opt_max?: number): number {\r\n    const k = Math.pow(10, Math.max(getDecimalLength(value1), getDecimalLength(value2)));\r\n    let result = (multiplyDecimal(value1, k) + multiplyDecimal(value2, k)) / k;\r\n    if (opt_max != undefined) {\r\n        result = Math.min(result, opt_max);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction analyzeFormulaStr(\r\n    formulaStr: number | string,\r\n    opt_defaultItem: string | null = null\r\n) {\r\n    const resultArr = [] as any[];\r\n    const re = new RegExp('([\\\\+\\\\-\\\\*/]?)([^\\\\+\\\\-\\\\*/]+)(.*)');\r\n    let workStr = String(formulaStr);\r\n    // eslint-disable-next-line no-constant-condition\r\n    while (true) {\r\n        const reRet = re.exec(workStr);\r\n        if (!reRet) {\r\n            resultArr.push(workStr);\r\n            break;\r\n        }\r\n        if (reRet[1]) { // + - * /\r\n            resultArr.push(reRet[1]);\r\n        }\r\n        resultArr.push(analyzeFormulaStrSub(reRet[2], opt_defaultItem));\r\n        if (!reRet[3]) {\r\n            break;\r\n        }\r\n        workStr = reRet[3];\r\n    }\r\n    return resultArr;\r\n}\r\n\r\nfunction analyzeFormulaStrSub(\r\n    formulaStr: string,\r\n    opt_defaultItem: string | null = null\r\n) {\r\n    const resultArr = [] as any;\r\n    if (isNumber(formulaStr)) {\r\n        resultArr.push(Number(formulaStr));\r\n    } else {\r\n        const strArr = (formulaStr as string).split('%');\r\n        if (strArr.length == 1) {\r\n            resultArr.push(strArr[0]);\r\n        } else {\r\n            resultArr.push(Number(strArr[0]) / 100);\r\n            resultArr.push('*');\r\n            if (strArr[1].length > 0) {\r\n                resultArr.push(strArr[1]);\r\n            } else if (opt_defaultItem != null) {\r\n                resultArr.push(opt_defaultItem);\r\n            }\r\n        }\r\n    }\r\n    return resultArr;\r\n}\r\n\r\nexport function makeSharedata(savedata: TAnyObject) {\r\n    const sharedataArr = [] as any[];\r\n\r\n    let character: TCharacterKey;\r\n    let weaponType: TWeaponTypeKey;\r\n\r\n    キャラクター構成PROPERTY_MAP.forEach((value, key) => {\r\n        let newValue = savedata[key];\r\n        let myBasename;\r\n        switch (key) {\r\n            case 'キャラクター':\r\n                character = newValue as TCharacterKey;\r\n                myBasename = basename(CHARACTER_MASTER[character]['import']);\r\n                newValue = myBasename.split('_')[myBasename.split('_').length - 1];\r\n                break;\r\n            case '武器':\r\n                weaponType = CHARACTER_MASTER[character]['武器'] as TWeaponTypeKey;\r\n                myBasename = basename((WEAPON_MASTER as any)[weaponType][newValue]['import']);\r\n                newValue = myBasename.split('_')[myBasename.split('_').length - 1];\r\n                break;\r\n            case '聖遺物セット効果1':\r\n            case '聖遺物セット効果2':\r\n                if (newValue == 'NONE') {\r\n                    newValue = '';  // 聖遺物セット効果なし\r\n                } else {\r\n                    myBasename = basename(ARTIFACT_SET_MASTER[newValue as TArtifactSetKey]['image']);\r\n                    newValue = myBasename.split('_')[myBasename.split('_').length - 1];\r\n                }\r\n                break;\r\n            case '聖遺物メイン効果1':\r\n            case '聖遺物メイン効果2':\r\n            case '聖遺物メイン効果3':\r\n            case '聖遺物メイン効果4':\r\n            case '聖遺物メイン効果5':\r\n                if (newValue) {\r\n                    newValue = newValue.split('_')[0] + '_' + ARTIFACT_STAT_JA_EN_ABBREV_MAP.get(newValue.split('_')[1]);\r\n                }\r\n                break;\r\n            case '聖遺物優先するサブ効果1':\r\n            case '聖遺物優先するサブ効果2':\r\n            case '聖遺物優先するサブ効果3':\r\n                if (newValue) {\r\n                    newValue = ARTIFACT_STAT_JA_EN_ABBREV_MAP.get(newValue);\r\n                }\r\n                break;\r\n        }\r\n        sharedataArr.push(newValue);\r\n    });\r\n    Object.keys(savedata).forEach(key => {\r\n        if (!キャラクター構成PROPERTY_MAP.has(key)) {\r\n            sharedataArr.push(key + '=' + savedata[key]);\r\n        }\r\n    });\r\n\r\n    return sharedataArr.join(',');\r\n}\r\n\r\nfunction openTwitter(text: string, url: string, opt_hashtags?: string, opt_via?: string) {\r\n    const baseUrl = 'https://twitter.com/intent/tweet?';\r\n    const params = new URLSearchParams();\r\n    params.append('text', text);\r\n    params.append('url', url);\r\n    if (opt_hashtags) {\r\n        params.append('hashtags', opt_hashtags);\r\n    }\r\n    if (opt_via) {\r\n        params.append('via', opt_via);\r\n    }\r\n    const query = params.toString();\r\n    const shareUrl = `${baseUrl}${query}`;\r\n    console.log(params);\r\n    console.log(shareUrl);\r\n    window.open(shareUrl);\r\n}\r\n\r\nexport function shareByTwitter(\r\n    characterInput: TCharacterInput,\r\n    artifactDetailInput: TArtifactDetailInput,\r\n    conditionInput: TConditionInput\r\n) {\r\n    const savedata = makeSavedata(characterInput, artifactDetailInput, conditionInput);\r\n    const sharedata = makeSharedata(savedata);\r\n\r\n    const text = characterInput.buildname;\r\n    const encoded = encodeURI(sharedata);\r\n    const url = 'https://asagume.github.io/gencalc/' + '?allin=' + encoded;\r\n\r\n    openTwitter(text, url);\r\n}\r\n\r\nexport function getMaxConstellation(characterMaster: TCharacterDetail) {\r\n    let max = 0;\r\n    if ('命ノ星座' in characterMaster) {\r\n        max = Object.keys(characterMaster.命ノ星座).length;\r\n    }\r\n    return max;\r\n}\r\n\r\nexport function getMaxTalentLevel(characterMaster: TCharacterDetail, key: string) {\r\n    let max = 10;\r\n    if (key in characterMaster) {\r\n        const talentObj = (characterMaster as any)[key];\r\n        if (\"詳細\" in talentObj) {\r\n            for (const detailObj of talentObj.詳細) {\r\n                if (\"数値\" in detailObj && _.isPlainObject(detailObj.数値)) {\r\n                    const work = Object.keys(detailObj.数値).length;\r\n                    if (max < work) max = work;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return max;\r\n}\r\n\r\nexport function pushBuildinfoToSession(character: TCharacterKey | string, buildname?: string, builddata?: any, teammembers?: string[]) {\r\n    sessionStorage.setItem('character', character);\r\n    if (buildname) {\r\n        sessionStorage.setItem('buildname', buildname);\r\n    }\r\n    if (builddata) {\r\n        sessionStorage.setItem('builddata', JSON.stringify(builddata));\r\n    }\r\n    if (teammembers) {\r\n        sessionStorage.setItem('teammembers', JSON.stringify(teammembers));\r\n    }\r\n}\r\n\r\nexport function popBuildinfoFromSession() {\r\n    const result: [string | undefined, string | undefined, TAnyObject | undefined, string[] | undefined] = [undefined, undefined, undefined, undefined];\r\n    const character = sessionStorage.getItem('character');\r\n    if (character) {\r\n        result[0] = character;\r\n        const buildname = sessionStorage.getItem('buildname');\r\n        if (buildname) {\r\n            result[1] = buildname;\r\n        }\r\n        const builddata = sessionStorage.getItem('builddata');\r\n        if (builddata) {\r\n            result[2] = JSON.parse(builddata);\r\n        }\r\n        const teammembers = sessionStorage.getItem('teammembers');\r\n        if (teammembers) {\r\n            result[3] = JSON.parse(teammembers);\r\n        }\r\n        console.log(character, buildname, builddata, teammembers);\r\n    }\r\n    sessionStorage.removeItem('character');\r\n    sessionStorage.removeItem('builddata');\r\n    sessionStorage.removeItem('buildname');\r\n    sessionStorage.removeItem('teammembers');\r\n    return result;\r\n}\r\n","import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, resolveComponent as _resolveComponent, createVNode as _createVNode, vShow as _vShow, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-fe60a4d2\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"artifact\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"artifact\"\n}\nconst _hoisted_3 = {\n  class: \"left-column\",\n  style: {\"width\":\"45%\"}\n}\nconst _hoisted_4 = { class: \"control\" }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"material-symbols-outlined\"\n}\nconst _hoisted_6 = {\n  key: 1,\n  class: \"material-symbols-outlined\"\n}\nconst _hoisted_7 = { class: \"with-tooltip\" }\nconst _hoisted_8 = [\"src\", \"alt\"]\nconst _hoisted_9 = { class: \"tooltip\" }\nconst _hoisted_10 = {\n  key: 0,\n  class: \"edit-mainstat\"\n}\nconst _hoisted_11 = [\"value\"]\nconst _hoisted_12 = [\"step\"]\nconst _hoisted_13 = {\n  key: 1,\n  class: \"mainstat\",\n  style: {\"margin\":\"1px 0\"}\n}\nconst _hoisted_14 = { key: 2 }\nconst _hoisted_15 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", { value: \"5\" }, \" ★5 \", -1))\nconst _hoisted_16 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", { value: \"4\" }, \" ★4 \", -1))\nconst _hoisted_17 = [\n  _hoisted_15,\n  _hoisted_16\n]\nconst _hoisted_18 = { key: 3 }\nconst _hoisted_19 = { style: {\"width\":\"55%\"} }\nconst _hoisted_20 = { class: \"artifact-substat\" }\nconst _hoisted_21 = { class: \"right\" }\nconst _hoisted_22 = [\"onUpdate:modelValue\"]\nconst _hoisted_23 = [\"value\", \"disabled\"]\nconst _hoisted_24 = { class: \"right\" }\nconst _hoisted_25 = [\"onUpdate:modelValue\", \"step\"]\nconst _hoisted_26 = { key: 1 }\nconst _hoisted_27 = {\n  class: \"left-column\",\n  style: {\"width\":\"45%\"}\n}\nconst _hoisted_28 = {\n  key: 0,\n  class: \"score\"\n}\nconst _hoisted_29 = { class: \"control\" }\nconst _hoisted_30 = {\n  key: 0,\n  type: \"button\"\n}\nconst _hoisted_31 = {\n  key: 0,\n  class: \"material-symbols-outlined\",\n  style: {\"color\":\"yellow\"}\n}\nconst _hoisted_32 = {\n  key: 1,\n  class: \"material-symbols-outlined\"\n}\nconst _hoisted_33 = { class: \"with-tooltip\" }\nconst _hoisted_34 = [\"src\", \"alt\"]\nconst _hoisted_35 = { class: \"tooltip\" }\nconst _hoisted_36 = {\n  class: \"mainstat\",\n  style: {\"margin\":\"1px 0\"}\n}\nconst _hoisted_37 = { style: {\"width\":\"55%\"} }\nconst _hoisted_38 = { class: \"artifact-substat\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ArtifactSetSelect = _resolveComponent(\"ArtifactSetSelect\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_ctx.control == 'editable')\n      ? (_openBlock(), _createElementBlock(\"table\", _hoisted_2, [\n          _createElementVNode(\"tr\", null, [\n            _createElementVNode(\"td\", _hoisted_3, [\n              _createElementVNode(\"div\", _hoisted_4, [\n                _createElementVNode(\"button\", {\n                  type: \"button\",\n                  onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.isEditing = !_ctx.isEditing))\n                }, [\n                  (_ctx.isEditing)\n                    ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \" edit_off \"))\n                    : (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \" edit \"))\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_7, [\n                _createElementVNode(\"img\", {\n                  class: \"artifact-icon\",\n                  src: _ctx.artifactImgSrc,\n                  alt: _ctx.displayName(_ctx.copiedArtifact.name),\n                  onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.artifactIconOnClick()))\n                }, null, 8, _hoisted_8),\n                _createElementVNode(\"div\", _hoisted_9, _toDisplayString(_ctx.displayName(_ctx.copiedArtifact.name)), 1)\n              ]),\n              (_ctx.isEditing)\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                    _withDirectives(_createElementVNode(\"select\", {\n                      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.copiedArtifact.mainStat) = $event)),\n                      onChange: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.onChange && _ctx.onChange(...args)))\n                    }, [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.mainStatOptions, (option) => {\n                        return (_openBlock(), _createElementBlock(\"option\", {\n                          key: option,\n                          value: option\n                        }, _toDisplayString(_ctx.displayName(option)), 9, _hoisted_11))\n                      }), 128))\n                    ], 544), [\n                      [_vModelSelect, _ctx.copiedArtifact.mainStat]\n                    ]),\n                    _withDirectives(_createElementVNode(\"input\", {\n                      type: \"number\",\n                      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.copiedArtifact.mainStatValue) = $event)),\n                      step: _ctx.statStep(_ctx.copiedArtifact.mainStat),\n                      min: \"0\",\n                      onChange: _cache[5] || (_cache[5] = \n//@ts-ignore\n(...args) => (_ctx.onChange && _ctx.onChange(...args)))\n                    }, null, 40, _hoisted_12), [\n                      [_vModelText, _ctx.copiedArtifact.mainStatValue]\n                    ])\n                  ]))\n                : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, _toDisplayString(_ctx.displayName(_ctx.copiedArtifact.mainStat).replace(/%$/, '') + '+' + _ctx.displayStatValue(_ctx.copiedArtifact.mainStat,\r\n                _ctx.copiedArtifact.mainStatValue)), 1)),\n              (_ctx.isEditing)\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [\n                    _withDirectives(_createElementVNode(\"select\", {\n                      class: \"star\",\n                      \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.copiedArtifact.rarity) = $event)),\n                      onChange: _cache[7] || (_cache[7] = \n//@ts-ignore\n(...args) => (_ctx.starOnChange && _ctx.starOnChange(...args)))\n                    }, _hoisted_17, 544), [\n                      [_vModelSelect, _ctx.copiedArtifact.rarity]\n                    ])\n                  ]))\n                : (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(new Array(_ctx.copiedArtifact.rarity), (dummy) => {\n                      return (_openBlock(), _createElementBlock(\"img\", {\n                        class: \"star\",\n                        src: \"images/star.png\",\n                        key: dummy\n                      }))\n                    }), 128))\n                  ]))\n            ]),\n            _createElementVNode(\"td\", _hoisted_19, [\n              _createElementVNode(\"table\", _hoisted_20, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.copiedArtifact.subStats, (subStat, index) => {\n                  return (_openBlock(), _createElementBlock(\"tr\", { key: index }, [\n                    (_ctx.isEditing)\n                      ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                          _createElementVNode(\"td\", _hoisted_21, [\n                            _withDirectives(_createElementVNode(\"select\", {\n                              \"onUpdate:modelValue\": ($event: any) => ((subStat.name) = $event),\n                              onChange: _cache[8] || (_cache[8] = \n//@ts-ignore\n(...args) => (_ctx.onChange && _ctx.onChange(...args)))\n                            }, [\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.subStatOptions, (option) => {\n                                return (_openBlock(), _createElementBlock(\"option\", {\n                                  key: option,\n                                  value: option,\n                                  disabled: _ctx.subStatOptionDisabled(option, subStat.name)\n                                }, _toDisplayString(_ctx.displayName(option)), 9, _hoisted_23))\n                              }), 128))\n                            ], 40, _hoisted_22), [\n                              [_vModelSelect, subStat.name]\n                            ])\n                          ]),\n                          _createElementVNode(\"td\", _hoisted_24, [\n                            _withDirectives(_createElementVNode(\"input\", {\n                              type: \"number\",\n                              \"onUpdate:modelValue\": ($event: any) => ((subStat.value) = $event),\n                              step: _ctx.statStep(subStat.name),\n                              min: \"0\",\n                              onChange: _cache[9] || (_cache[9] = \n//@ts-ignore\n(...args) => (_ctx.onChange && _ctx.onChange(...args)))\n                            }, null, 40, _hoisted_25), [\n                              [_vModelText, subStat.value]\n                            ])\n                          ])\n                        ], 64))\n                      : (_openBlock(), _createElementBlock(\"td\", _hoisted_26, _toDisplayString(_ctx.displayName(subStat.name).replace(/%$/, '') + '+' + _ctx.displayStatValue(subStat.name, subStat.value)), 1))\n                  ]))\n                }), 128))\n              ])\n            ])\n          ])\n        ]))\n      : (_openBlock(), _createElementBlock(\"table\", {\n          key: 1,\n          class: \"artifact\",\n          onClick: _cache[10] || (_cache[10] = ($event: any) => (_ctx.selectOnClick()))\n        }, [\n          _createElementVNode(\"tr\", null, [\n            _createElementVNode(\"td\", _hoisted_27, [\n              (_ctx.score)\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_28, _toDisplayString(Math.round(_ctx.score * 10) / 10), 1))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"div\", _hoisted_29, [\n                (_ctx.control == 'selectable')\n                  ? (_openBlock(), _createElementBlock(\"button\", _hoisted_30, [\n                      (_ctx.selected)\n                        ? (_openBlock(), _createElementBlock(\"span\", _hoisted_31, \" select_check_box \"))\n                        : (_openBlock(), _createElementBlock(\"span\", _hoisted_32, \" check_box_outline_blank \"))\n                    ]))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _createElementVNode(\"div\", _hoisted_33, [\n                _createElementVNode(\"img\", {\n                  class: \"artifact-icon\",\n                  src: _ctx.artifactImgSrc,\n                  alt: _ctx.displayName(_ctx.copiedArtifact.name)\n                }, null, 8, _hoisted_34),\n                _createElementVNode(\"div\", _hoisted_35, _toDisplayString(_ctx.displayName(_ctx.copiedArtifact.name)), 1)\n              ]),\n              _createElementVNode(\"div\", _hoisted_36, _toDisplayString(_ctx.displayName(_ctx.copiedArtifact.mainStat).replace(/%$/, '') + '+' + _ctx.displayStatValue(_ctx.copiedArtifact.mainStat,\r\n                _ctx.copiedArtifact.mainStatValue)), 1),\n              _createElementVNode(\"div\", null, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(new Array(_ctx.copiedArtifact.rarity), (dummy) => {\n                  return (_openBlock(), _createElementBlock(\"img\", {\n                    class: \"star\",\n                    src: \"images/star.png\",\n                    key: dummy\n                  }))\n                }), 128))\n              ])\n            ]),\n            _createElementVNode(\"td\", _hoisted_37, [\n              _createElementVNode(\"table\", _hoisted_38, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.copiedArtifact.subStats, (subStat, index) => {\n                  return (_openBlock(), _createElementBlock(\"tr\", { key: index }, [\n                    _createElementVNode(\"td\", null, _toDisplayString(_ctx.displayName(subStat.name).replace(/%$/, '') + '+' + _ctx.displayStatValue(subStat.name, subStat.value)), 1)\n                  ]))\n                }), 128))\n              ])\n            ])\n          ])\n        ])),\n    _withDirectives(_createElementVNode(\"div\", null, [\n      _createVNode(_component_ArtifactSetSelect, {\n        visible: true,\n        index: 1,\n        \"artifact-set\": _ctx.artifact.setname,\n        \"artifact-set-masters\": _ctx.artifactSetMasters,\n        cat_id: _ctx.artifact.cat_id,\n        \"onUpdate:artifactSet\": _ctx.updateArtifactSet\n      }, null, 8, [\"artifact-set\", \"artifact-set-masters\", \"cat_id\", \"onUpdate:artifactSet\"])\n    ], 512), [\n      [_vShow, _ctx.isListShow]\n    ])\n  ]))\n}","\r\nimport _ from 'lodash';\r\nimport { overwriteObject } from \"@/common\";\r\nimport { ARTIFACT_SET_MASTER_DUMMY, TArtifact, 聖遺物サブ効果ARRAY, 聖遺物メイン効果_時の砂ARRAY, 聖遺物メイン効果_死の羽ARRAY, 聖遺物メイン効果_理の冠ARRAY, 聖遺物メイン効果_生の花ARRAY, 聖遺物メイン効果_空の杯ARRAY } from \"@/input\";\r\nimport { ARTIFACT_SET_MASTER, TArtifactSetEntry, TArtifactSetKey, getArtifactIconUrl } from \"@/master\";\r\nimport { computed, defineComponent, PropType, reactive, ref, watch } from \"vue\";\r\nimport CompositionFunction from \"./CompositionFunction.vue\";\r\nimport ArtifactSetSelect from \"./ArtifactSetSelect.vue\";\r\n\r\nexport default defineComponent({\r\n  name: 'ArtifactItem',\r\n  props: {\r\n    artifact: { type: Object as PropType<TArtifact>, required: true },\r\n    id: { type: Number },\r\n    control: String,\r\n    initial: Boolean,\r\n    selected: Boolean,\r\n    score: Number,\r\n  },\r\n  components: {\r\n    ArtifactSetSelect,\r\n  },\r\n  emits: ['update:artifact', 'select:artifact'],\r\n  setup(props, context) {\r\n    const { displayName, displayStatValue, percent } = CompositionFunction();\r\n\r\n    const copiedArtifact = reactive(_.cloneDeep(props.artifact));\r\n    const artifactSetMasters = reactive([ARTIFACT_SET_MASTER_DUMMY, ARTIFACT_SET_MASTER_DUMMY] as TArtifactSetEntry[]);\r\n    const isEditing = ref(false);\r\n    const isSelected = ref(false);\r\n    const isListShow = ref(false);\r\n\r\n    const artifactImgSrc = computed(() => {\r\n      return getArtifactIconUrl(copiedArtifact.setname, copiedArtifact.cat_id);\r\n    });\r\n\r\n    const MAINSTAT_CAT_ARR = {\r\n      '1': Array.from(new Set(聖遺物メイン効果_生の花ARRAY.map(s => s.replace(/^\\d_/, '')))),\r\n      '2': Array.from(new Set(聖遺物メイン効果_死の羽ARRAY.map(s => s.replace(/^\\d_/, '')))),\r\n      '3': Array.from(new Set(聖遺物メイン効果_時の砂ARRAY.map(s => s.replace(/^\\d_/, '')))),\r\n      '4': Array.from(new Set(聖遺物メイン効果_空の杯ARRAY.map(s => s.replace(/^\\d_/, '')))),\r\n      '5': Array.from(new Set(聖遺物メイン効果_理の冠ARRAY.map(s => s.replace(/^\\d_/, '')))),\r\n    };\r\n\r\n    const mainStatOptions = computed(() => {\r\n      return (MAINSTAT_CAT_ARR as any)[copiedArtifact.cat_id];\r\n    });\r\n\r\n    const subStatOptions = computed(() => {\r\n      return 聖遺物サブ効果ARRAY;\r\n    });\r\n\r\n    const statStep = (stat: string) => {\r\n      return percent(stat) ? 0.1 : 1;\r\n    };\r\n\r\n    const subStatOptionDisabled = ((value: string, selected: string) => {\r\n      if (value == selected) return false;\r\n      const work = copiedArtifact.subStats.map(s => s.name);\r\n      return work.includes(value);\r\n    });\r\n\r\n    const onChange = () => {\r\n      context.emit('update:artifact', props.id, copiedArtifact);\r\n    };\r\n\r\n    const starOnChange = () => {\r\n      copiedArtifact.rarity = Number(copiedArtifact.rarity);\r\n    }\r\n\r\n    const artifactIconOnClick = () => {\r\n      if (isEditing.value) {\r\n        isListShow.value = !isListShow.value;\r\n      } else {\r\n        isListShow.value = false;\r\n      }\r\n    };\r\n\r\n    const selectOnClick = () => {\r\n      if (props.control === 'selectable') {\r\n        context.emit('select:artifact', props.id);\r\n      }\r\n    };\r\n\r\n    const updateArtifactSet = (artifactSet: TArtifactSetKey) => {\r\n      copiedArtifact.setname = artifactSet;\r\n      const master = ARTIFACT_SET_MASTER[artifactSet];\r\n      copiedArtifact.rarity = master.レアリティ;\r\n      if ('artifact_list' in master) {\r\n        copiedArtifact.name = master.artifact_list[copiedArtifact.cat_id - 1];\r\n      }\r\n      isListShow.value = false;\r\n      onChange();\r\n    };\r\n\r\n    function onLoad() {\r\n      if (props.initial !== undefined) {\r\n        if (props.control === 'editable') {\r\n          isEditing.value = props.initial;\r\n        } else if (props.control === 'selectable') {\r\n          isSelected.value = props.initial;\r\n        }\r\n      }\r\n    }\r\n    onLoad();\r\n\r\n    watch(props, (newVal, oldVal) => {\r\n      overwriteObject(copiedArtifact, newVal.artifact);\r\n      if (newVal.initial != oldVal.initial) {\r\n        onLoad();\r\n      }\r\n    });\r\n\r\n    return {\r\n      displayName, displayStatValue,\r\n\r\n      copiedArtifact,\r\n      artifactSetMasters,\r\n      isEditing,\r\n      isSelected,\r\n      isListShow,\r\n\r\n      artifactImgSrc,\r\n      mainStatOptions,\r\n      subStatOptions,\r\n      subStatOptionDisabled,\r\n      statStep,\r\n\r\n      onChange,\r\n      starOnChange,\r\n      artifactIconOnClick,\r\n      updateArtifactSet,\r\n      selectOnClick,\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./ArtifactItem.vue?vue&type=template&id=fe60a4d2&scoped=true&ts=true\"\nimport script from \"./ArtifactItem.vue?vue&type=script&lang=ts\"\nexport * from \"./ArtifactItem.vue?vue&type=script&lang=ts\"\n\nimport \"./ArtifactItem.vue?vue&type=style&index=0&id=fe60a4d2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fe60a4d2\"]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-91b28a50\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = { class: \"title\" }\nconst _hoisted_3 = { class: \"description\" }\nconst _hoisted_4 = { class: \"select-list\" }\nconst _hoisted_5 = [\"src\", \"alt\", \"onClick\"]\nconst _hoisted_6 = { class: \"tooltip\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_ctx.visible)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"table\", null, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.artifactSetEffects, (item) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: item }, [\n              _createElementVNode(\"tr\", null, [\n                _createElementVNode(\"th\", _hoisted_2, _toDisplayString(_ctx.displayName(item.key)), 1)\n              ]),\n              _createElementVNode(\"tr\", null, [\n                _createElementVNode(\"td\", _hoisted_3, _toDisplayString(item.value), 1)\n              ])\n            ], 64))\n          }), 128))\n        ]),\n        _createElementVNode(\"ul\", _hoisted_4, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filteredList, (item) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              class: \"with-tooltip\",\n              key: item.key\n            }, [\n              _createElementVNode(\"img\", {\n                class: _normalizeClass('artifact-set' + _ctx.bgImageClass(item) + _ctx.selectedClass(item)),\n                src: _ctx.getArtifactIconUrl(item.key, _ctx.cat_id),\n                alt: item.key,\n                onClick: ($event: any) => (_ctx.$emit('update:artifact-set', item.key))\n              }, null, 10, _hoisted_5),\n              _createElementVNode(\"div\", _hoisted_6, _toDisplayString(_ctx.displayName(item.key)), 1)\n            ]))\n          }), 128))\n        ])\n      ]))\n    : _createCommentVNode(\"\", true)\n}","\r\nimport {\r\n  ARTIFACT_SET_MASTER_LIST,\r\n  getArtifactIconUrl,\r\n  STAR_BACKGROUND_IMAGE_CLASS,\r\n  TArtifactSetEntry,\r\n} from \"@/master\";\r\nimport { computed, defineComponent, PropType, reactive } from \"vue\";\r\nimport CompositionFunction from './CompositionFunction.vue';\r\n\r\nexport default defineComponent({\r\n  name: \"ArtifactSetSelect\",\r\n  props: {\r\n    visible: { type: Boolean, required: true },\r\n    index: { type: Number, required: true },\r\n    artifactSet: { type: String, required: true },\r\n    artifactSetMasters: { type: Array as PropType<TArtifactSetEntry[]>, required: true },\r\n    cat_id: { type: Number },\r\n  },\r\n  emits: [\"update:artifact-set\"],\r\n  setup(props) {\r\n    const { displayName } = CompositionFunction();\r\n\r\n    const bgImageClass = (item: TArtifactSetEntry) =>\r\n      (\" \" + STAR_BACKGROUND_IMAGE_CLASS[item.レアリティ]) as string;\r\n    const selectedClass = (item: TArtifactSetEntry) => {\r\n      return item.key == props.artifactSet ? \" selected\" : \"\";\r\n    };\r\n    const artifactSetMastersRea = reactive(props.artifactSetMasters);\r\n\r\n    const filteredList = computed(() => {\r\n      return ARTIFACT_SET_MASTER_LIST as TArtifactSetEntry[];\r\n    });\r\n\r\n    const artifactSetEffects = computed(() => {\r\n      const result = [] as any;\r\n      if (artifactSetMastersRea.length > 0) {\r\n        if (\"2セット効果\" in artifactSetMastersRea[0]) {\r\n          result.push({\r\n            key: artifactSetMastersRea[0].key + \" \" + \"2セット効果\",\r\n            value: artifactSetMastersRea[0][\"2セット効果\"]?.説明,\r\n          });\r\n        }\r\n        if (artifactSetMastersRea.length > 1) {\r\n          if (artifactSetMastersRea[0].key == artifactSetMastersRea[1].key) {\r\n            if (\"4セット効果\" in artifactSetMastersRea[0]) {\r\n              result.push({\r\n                key: artifactSetMastersRea[0].key + \" \" + \"4セット効果\",\r\n                value: artifactSetMastersRea[0][\"4セット効果\"]?.説明,\r\n              });\r\n            }\r\n          } else {\r\n            if (\"2セット効果\" in artifactSetMastersRea[1]) {\r\n              result.push({\r\n                key: artifactSetMastersRea[1].key + \" \" + \"2セット効果\",\r\n                value: artifactSetMastersRea[1][\"2セット効果\"]?.説明,\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    });\r\n\r\n    return {\r\n      displayName,\r\n      getArtifactIconUrl,\r\n\r\n      bgImageClass,\r\n      selectedClass,\r\n      filteredList,\r\n      artifactSetEffects,\r\n    };\r\n  },\r\n});\r\n","import { render } from \"./ArtifactSetSelect.vue?vue&type=template&id=91b28a50&scoped=true&ts=true\"\nimport script from \"./ArtifactSetSelect.vue?vue&type=script&lang=ts\"\nexport * from \"./ArtifactSetSelect.vue?vue&type=script&lang=ts\"\n\nimport \"./ArtifactSetSelect.vue?vue&type=style&index=0&id=91b28a50&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-91b28a50\"]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, createElementVNode as _createElementVNode, withDirectives as _withDirectives, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, vShow as _vShow, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6b0e72ca\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = { class: \"select-list\" }\nconst _hoisted_3 = [\"onUpdate:modelValue\", \"onChange\"]\nconst _hoisted_4 = [\"src\", \"alt\"]\nconst _hoisted_5 = { class: \"select-list\" }\nconst _hoisted_6 = [\"onUpdate:modelValue\", \"onChange\"]\nconst _hoisted_7 = [\"src\", \"alt\"]\nconst _hoisted_8 = { class: \"select-list\" }\nconst _hoisted_9 = [\"src\", \"alt\", \"onClick\"]\nconst _hoisted_10 = { class: \"tooltip\" }\nconst _hoisted_11 = [\"src\", \"alt\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_ctx.visible)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"ul\", _hoisted_2, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.elementList, (item) => {\n            return (_openBlock(), _createElementBlock(\"li\", { key: item }, [\n              _createElementVNode(\"label\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  class: \"hidden\",\n                  type: \"checkbox\",\n                  \"onUpdate:modelValue\": ($event: any) => ((_ctx.elementCheckList[item]) = $event),\n                  onChange: ($event: any) => (_ctx.checkListOnChange(item, _ctx.elementCheckList))\n                }, null, 40, _hoisted_3), [\n                  [_vModelCheckbox, _ctx.elementCheckList[item]]\n                ]),\n                _createElementVNode(\"img\", {\n                  class: \"filter\",\n                  src: _ctx.elementSrc(item),\n                  alt: item\n                }, null, 8, _hoisted_4)\n              ])\n            ]))\n          }), 128))\n        ]),\n        _createElementVNode(\"ul\", _hoisted_5, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.weaponList, (item) => {\n            return (_openBlock(), _createElementBlock(\"li\", { key: item }, [\n              _createElementVNode(\"label\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  class: \"hidden\",\n                  type: \"checkbox\",\n                  \"onUpdate:modelValue\": ($event: any) => ((_ctx.weaponCheckList[item]) = $event),\n                  onChange: ($event: any) => (_ctx.checkListOnChange(item, _ctx.weaponCheckList))\n                }, null, 40, _hoisted_6), [\n                  [_vModelCheckbox, _ctx.weaponCheckList[item]]\n                ]),\n                _createElementVNode(\"img\", {\n                  class: \"filter\",\n                  src: _ctx.weaponSrc(item),\n                  alt: item\n                }, null, 8, _hoisted_7)\n              ])\n            ]))\n          }), 128))\n        ]),\n        _createElementVNode(\"ul\", _hoisted_8, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filteredList, (item) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              class: \"with-tooltip\",\n              key: item.key\n            }, [\n              _createElementVNode(\"img\", {\n                class: _normalizeClass('character' + _ctx.bgImageClass(item) + _ctx.selectedClass(item)),\n                src: item.icon_url,\n                alt: item.key,\n                onClick: ($event: any) => (_ctx.characterOnClick(item.key))\n              }, null, 10, _hoisted_9),\n              _createElementVNode(\"div\", _hoisted_10, _toDisplayString(_ctx.displayName(item.key)), 1),\n              _createElementVNode(\"img\", {\n                class: \"vision\",\n                src: _ctx.visionSrc(item),\n                alt: item.元素\n              }, null, 8, _hoisted_11),\n              _withDirectives(_createElementVNode(\"div\", { class: \"selection-number\" }, _toDisplayString(_ctx.selectionNumber(item.key)), 513), [\n                [_vShow, _ctx.selectionNumber(item.key)]\n              ])\n            ]))\n          }), 128))\n        ])\n      ]))\n    : _createCommentVNode(\"\", true)\n}","\r\nimport {\r\n  TCharacterEntry,\r\n  ELEMENT_IMG_SRC,\r\n  TVisionKey,\r\n  WEAPON_IMG_SRC,\r\n  TWeaponTypeKey,\r\n  CHARACTER_MASTER_LIST,\r\n  STAR_BACKGROUND_IMAGE_CLASS,\r\n} from \"@/master\";\r\nimport { defineComponent, reactive, computed, PropType } from \"vue\";\r\nimport CompositionFunction from \"./CompositionFunction.vue\";\r\n\r\ninterface ICheckList {\r\n  [key: string]: boolean;\r\n}\r\n\r\nexport default defineComponent({\r\n  name: \"CharacterSelect\",\r\n  props: {\r\n    character: { type: String },\r\n    characters: { type: Array as PropType<string[]> },\r\n    visible: { type: Boolean, required: true },\r\n  },\r\n  emits: [\"update:character\", \"update:characters\"],\r\n  setup(props, context) {\r\n    const { displayName } = CompositionFunction();\r\n\r\n    const visionSrc = (item: TCharacterEntry) => ELEMENT_IMG_SRC[item.元素];\r\n    const bgImageClass = (item: TCharacterEntry) =>\r\n      (\" \" + STAR_BACKGROUND_IMAGE_CLASS[item.レアリティ]) as string;\r\n    const selectedClass = (item: TCharacterEntry) => {\r\n      if (props.character && props.character == item.key) {\r\n        return \" selected\";\r\n      }\r\n      if (props.characters && props.characters.includes(item.key)) {\r\n        return \" selected\";\r\n      }\r\n      return \"\";\r\n    };\r\n\r\n    const elementList = Object.keys(ELEMENT_IMG_SRC) as TVisionKey[];\r\n    const elementSrc = (element: TVisionKey) => ELEMENT_IMG_SRC[element] as string;\r\n    const elementCheckList = reactive({}) as ICheckList;\r\n    for (let key of elementList) {\r\n      elementCheckList[key] = false;\r\n    }\r\n\r\n    const weaponList = Object.keys(WEAPON_IMG_SRC) as TWeaponTypeKey[];\r\n    const weaponSrc = (weapon: TWeaponTypeKey) => WEAPON_IMG_SRC[weapon] as string;\r\n    const weaponCheckList = reactive({}) as ICheckList;\r\n    for (let key of weaponList) {\r\n      weaponCheckList[key] = false;\r\n    }\r\n\r\n    const checkListOnChange = function (item: string, checkList: ICheckList) {\r\n      if (!checkList[item]) return;\r\n      Object.keys(checkList)\r\n        .filter((s) => s != item)\r\n        .forEach((key) => {\r\n          checkList[key] = false;\r\n        });\r\n    };\r\n\r\n    const filteredList = computed(() => {\r\n      const result = [];\r\n      const elementChecked =\r\n        Object.keys(elementCheckList).filter((s) => elementCheckList[s]).length > 0;\r\n      const weaponChecked =\r\n        Object.keys(weaponCheckList).filter((s) => weaponCheckList[s]).length > 0;\r\n      for (let entry of CHARACTER_MASTER_LIST as TCharacterEntry[]) {\r\n        if (elementChecked && !elementCheckList[entry.元素]) continue;\r\n        if (weaponChecked && !weaponCheckList[entry.武器]) continue;\r\n        result.push(entry);\r\n      }\r\n      return result;\r\n    });\r\n\r\n    const selectionNumber = (character: string) => {\r\n      let result = \"\";\r\n      if (props.characters) {\r\n        const index = props.characters.indexOf(character);\r\n        if (index != -1) {\r\n          result = String(index + 1);\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n\r\n    const characterOnClick = (character: string) => {\r\n      if (props.character) {\r\n        context.emit(\"update:character\", character);\r\n      }\r\n      if (props.characters) {\r\n        const characters: string[] = props.characters.map((s) => s);\r\n        const index = props.characters.indexOf(character);\r\n        if (index != -1) {\r\n          characters[index] = \"\";\r\n        } else {\r\n          const blankIndex = props.characters.indexOf(\"\");\r\n          if (blankIndex != -1) {\r\n            characters[blankIndex] = character;\r\n          }\r\n        }\r\n        context.emit(\"update:characters\", characters);\r\n      }\r\n    };\r\n\r\n    return {\r\n      displayName,\r\n\r\n      visionSrc,\r\n      bgImageClass,\r\n      selectedClass,\r\n      elementList,\r\n      elementSrc,\r\n      elementCheckList,\r\n      weaponList,\r\n      weaponSrc,\r\n      weaponCheckList,\r\n      checkListOnChange,\r\n      filteredList,\r\n\r\n      selectionNumber,\r\n      characterOnClick,\r\n    };\r\n  },\r\n});\r\n","import { render } from \"./CharacterSelect.vue?vue&type=template&id=6b0e72ca&scoped=true&ts=true\"\nimport script from \"./CharacterSelect.vue?vue&type=script&lang=ts\"\nexport * from \"./CharacterSelect.vue?vue&type=script&lang=ts\"\n\nimport \"./CharacterSelect.vue?vue&type=style&index=0&id=6b0e72ca&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6b0e72ca\"]])\n\nexport default __exports__","\r\nimport i18n from \"@/i18n\";\r\nimport { STAT_PERCENT_LIST } from \"@/input\";\r\nimport { nextTick } from \"vue\";\r\nimport { useI18n } from \"vue-i18n\";\r\n\r\nexport default function CompositionFunction() {\r\n    const { t, te } = useI18n({\r\n        useScope: \"global\",\r\n    });\r\n\r\n    const localeList = [\r\n        { name: \"日本語\", value: \"ja-jp\" },\r\n        { name: \"English\", value: \"en-us\" },\r\n        { name: \"简体中文\", value: \"zh-cn\" },\r\n        { name: \"繁體中文\", value: \"zh-tw\" },\r\n        { name: \"한국어\", value: \"ko-kr\" },\r\n        { name: \"Deutsch\", value: \"de-de\" },\r\n        { name: \"Español\", value: \"es-es\" },\r\n        { name: \"Français\", value: \"fr-fr\" },\r\n        { name: \"Indonesia\", value: \"id-id\" },\r\n        { name: \"Português\", value: \"pt-pt\" },\r\n        { name: \"Pусский\", value: \"ru-ru\" },\r\n        { name: 'ภาษาไทย', value: 'th-th' },\r\n        { name: \"Tiếng Việt\", value: \"vi-vn\" },\r\n    ];\r\n\r\n    const setI18nLanguage = function (locale: string) {\r\n        i18n.global.locale.value = locale;\r\n        loadLocaleMessages(locale);\r\n        document.querySelector('html')?.setAttribute('lang', locale)\r\n    }\r\n\r\n    const loadLocaleMessages = async function (locale: string) {\r\n        if (locale != 'ja-jp') {\r\n            const messages = await fetch(`./locales/${locale}.json`).then(resp => resp.json());\r\n            i18n.global.setLocaleMessage(locale, messages);\r\n        }\r\n        return nextTick();\r\n    }\r\n\r\n    const displayName = function (key: any): string {\r\n        if (!key) return key;\r\n        if (i18n.global.locale.value === 'ja-jp') { // 日本語はtranslateしません\r\n            let result = String(key);\r\n            if (['ダメージバフ', 'ダメージアップ', '反応ボーナス', '敵'].includes(result)) {\r\n                return result;\r\n            }\r\n            result = result.replace(/ダメージバフ$/, 'ダメージ');\r\n            result = result.replace(/ダメージアップ$/, 'ダメージ');\r\n            result = result.replace('凍結反応ボーナス', '凍結反応の継続時間');\r\n            result = result.replace(/反応ボーナス$/, '反応ダメージ');\r\n            result = result.replace(/^敵/, '敵の');\r\n            return result;\r\n        }\r\n        if (te(key)) return t(key);\r\n        const re = new RegExp('(.*?)([\\\\s_\\\\(\\\\)/]+)(.*)');\r\n        let result = '';\r\n        let work = key;\r\n        while (work) {\r\n            const reRet = re.exec(work);\r\n            if (!reRet) {\r\n                result += t(work);\r\n                break;\r\n            }\r\n            if (reRet[1]) result += t(reRet[1]);\r\n            result += reRet[2];\r\n            work = reRet[3];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const percent = function (stat: string) {\r\n        const tempArr = stat.split('.');\r\n        let work = tempArr[0].replace(/V[1-3]$/, '');\r\n        let hasPercent = work.endsWith(\"%\") || STAT_PERCENT_LIST.includes(work);\r\n        if (!hasPercent) {\r\n            ['会心率', '会心ダメージ', 'クールタイム', '攻撃速度'].forEach(postfix => {\r\n                if (work.endsWith(postfix)) hasPercent = true;\r\n            })\r\n        }\r\n        return hasPercent ? '%' : '';\r\n    }\r\n\r\n    const displayStatName = function (stat: string) {\r\n        let result = stat.replace(/V[1-3]$/, '');\r\n        const tempArr = result.split('.');\r\n        if (tempArr.length == 1) {\r\n            result = displayName(result);\r\n            result = result.replace('ダメージ会心', 'ダメージの会心')\r\n        } else if (i18n.global.locale.value === 'ja-jp') {\r\n            result = tempArr[tempArr.length - 1] + 'の' + displayName(tempArr[0]);\r\n        } else {\r\n            result = displayName(tempArr[tempArr.length - 1]) + ' ' + displayName(tempArr[0]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const displayStatValue = function (stat: string, value: number, opt_s?: number): string {\r\n        const myPercent = percent(stat);\r\n        let p = myPercent ? 10 : 1;\r\n        if (opt_s) p = Math.pow(10, opt_s);\r\n        return String(Math.round(value * p) / p) + myPercent;\r\n    }\r\n\r\n    const displayStatAbbrev = function (stat: string) {\r\n        let result = stat;\r\n        const tempArr = stat.split('.');\r\n        if (tempArr.length == 1) {\r\n            stat = stat.replace(/V\\d$/, '');\r\n            stat = stat.replace(/TOP$/, '');\r\n            if (stat.startsWith('敵')) stat = stat.replace(/^敵/, '');\r\n            if (stat.endsWith('ダメージバフ')) stat = stat.replace(/ダメージバフ$/, '');\r\n            else if (stat.endsWith('ダメージアップ')) stat = stat.replace(/ダメージアップ$/, '');\r\n            else if (stat.endsWith('元素ダメージ')) stat = stat.replace(/元素ダメージ$/, '');\r\n            else if (stat.endsWith('物理ダメージ')) stat = stat.replace(/ダメージ$/, '');\r\n            else if (stat.endsWith('反応ボーナス')) stat = stat.replace(/反応ボーナス$/, '');\r\n            else if (stat.endsWith('耐性')) stat = stat.replace(/耐性$/, '');\r\n            result = displayName(stat);\r\n        } else {\r\n            result = displayStatName(stat);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /** $event.target.valueでのtypescriptエラー回避のために */\r\n    const targetValue = function (event: Event) {\r\n        if (event.target instanceof HTMLInputElement) return event.target.value;\r\n        if (event.target instanceof HTMLSelectElement) return event.target.value;\r\n        return undefined;\r\n    }\r\n\r\n    const displayOptionName = function (name: string) {\r\n        return displayName(name.replace(/^required_/, \"\"));\r\n    }\r\n\r\n    return {\r\n        localeList,\r\n        setI18nLanguage,\r\n        loadLocaleMessages,\r\n        displayName,\r\n        displayStatName,\r\n        displayStatValue,\r\n        displayStatAbbrev,\r\n        targetValue,\r\n        displayOptionName,\r\n        percent,\r\n    }\r\n}\r\n","import script from \"./CompositionFunction.vue?vue&type=script&lang=ts\"\nexport * from \"./CompositionFunction.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["isNumber","value","isFinite","overwriteObject","dst","src","_","srcKeys","Object","keys","key","includes","basename","path","split","pop","shift","i18n","createI18n","legacy","locale","fallbackLocale","isGlobal","基礎ステータスARRAY","基本ステータスARRAY","高級ステータスARRAY","元素ステータス_ダメージARRAY","元素ステータス_耐性ARRAY","ダメージバフARRAY","実数ダメージ加算ARRAY","元素反応バフARRAY","ステータスその他ARRAY","ステータス連動ARRAY","ステータスチーム内最高ARRAY","敵ステータス_元素耐性ARRAY","敵ステータス_その他ARRAY","ステータスARRAY_MAP","Map","STAT_PERCENT_LIST","makeStatusTenmplate","statsObj","forEach","stat","ステータスTEMPLATE","makeEnemyStatusTemplate","聖遺物メイン効果_生の花ARRAY","聖遺物メイン効果_死の羽ARRAY","聖遺物メイン効果_時の砂ARRAY","聖遺物メイン効果_空の杯ARRAY","聖遺物メイン効果_理の冠ARRAY","聖遺物サブ効果ARRAY","聖遺物優先するサブ効果ARRAY","聖遺物ステータスTEMPLATE","元素反応TEMPLATE","元素","蒸発倍率_炎","蒸発倍率_水","溶解倍率_氷","溶解倍率_炎","過負荷ダメージ","感電ダメージ","超電導ダメージ","拡散ダメージ","拡散元素","結晶吸収量","氷砕きダメージ","燃焼ダメージ","開花ダメージ","烈開花ダメージ","超開花ダメージ","超激化ダメージ","草激化ダメージ","燃焼ダメージ会心率","燃焼ダメージ会心ダメージ","開花ダメージ会心率","開花ダメージ会心ダメージ","烈開花ダメージ会心率","烈開花ダメージ会心ダメージ","超開花ダメージ会心率","超開花ダメージ会心ダメージ","DAMAGE_RESULT_TEMPLATE","元素反応","通常攻撃","重撃","落下攻撃","元素スキル","元素爆発","その他","キャラクター注釈","突破レベルレベルARRAY","Array","from","length","i","ARTIFACT_SET_MASTER_DUMMY","レアリティ","image","IMG_SRC_DUMMY","CHARACTER_INPUT_TEMPLATE","character","characterMaster","突破レベル","レベル","命ノ星座","通常攻撃レベル","元素スキルレベル","元素爆発レベル","weapon","weaponMaster","武器突破レベル","武器レベル","武器精錬ランク","artifactSets","artifactSetMasters","damageDetailMyCharacter","damageDetailMyWeapon","damageDetailMyArtifactSets","damageDetailElementalResonance","buildname","recommendationSelectedIndex","saveDisabled","removeDisabled","ARTIFACT_TEMPLATE","name","rarity","setname","cat_id","mainStat","mainStatValue","subStats","ARTIFACT_DETAIL_INPUT_TEMPLATE","聖遺物メイン効果","聖遺物優先するサブ効果","聖遺物優先するサブ効果上昇値","GENSEN_MASTER_LIST","values","聖遺物優先するサブ効果上昇回数","counts","聖遺物ステータス","聖遺物ステータスメイン効果","聖遺物ステータスサブ効果","聖遺物優先するサブ効果Disabled","artifact_list","CONDITION_INPUT_TEMPLATE","checkboxList","selectList","numberList","conditionValues","conditionAdjustments","攻撃元素","STATS_INPUT_TEMPLATE","statAdjustments","statAdjustmentsEx","enemyMaster","ENEMY_MASTER_LIST","SUPPORTER_INPUT_TEMPLATE","characterInput","artifactDetailInput","conditionInput","statsInput","damageResult","OPTION_INPUT_TEMPLATE","elementalResonance","supporterBuildname","supporters","teamMembers","teamOption","miscOption","parseLevelStr","levelStr","result","level","Number","String","replace","ascension","endsWith","Math","max","error","console","makeDefaultBuildname","makeBuildStorageKey","makeOptionStorageKey","makeArtifactScoringStorageKey","makeRecommendationList","opt_buildData","isSavable","push","build","overwrite","log","storageKeyArr","localStorage","startsWith","sort","re","RegExp","buildObj","JSON","parse","key2","optionsObj","options","key3","artifactScoringObj","artifactScoring","key4","supporterBuildnameObj","obj","myRecommendation","artifactRarerityArrArr","artifactRarerity4Num","artifactSet1","artifactSet2","ARTIFACT_SET_MASTER","makeArtifactSetAbbrev","statusName","RECOMMEND_ABBREV_MAP","has","get","substring","abbrRe","abbr","a","b","makePrioritySubstatValueList","prioritySubstats","index","opt_substat","ARTIFACT_SUB_MASTER","valueArr","diff","makeEasyInputSubstatValueList","substat","async","loadRecommendation","optionInput","getCharacterMasterDetail","artifactStatsSub","weaponType","WEAPON_MASTER","filter","s","getWeaponMasterDetail","prioritySubstatsDisabled","toKey","artifactSet","mainstat","doUpdate","substatValue","prioritySubstatValueList","v","substatCount","キャラクター構成PROPERTY_MAP","ELEMENTAL_RESONANCE_MASTER","astarIndex","indexOf","workCharacter","CHARACTER_MASTER","ARTIFACT_KEYS","newList","splice","debug","makeSavedata","resultObj","entry","makeOptionsSavedata","CHANGE_KIND_STATUS","CHANGE_KIND_TALENT","makeDamageDetailObjArrObjCharacter","myTalentDetail","myTalentLevel","myDefaultKind","myDefaultElement","myInputCategory","myStatusChangeDetailObjArr","myTalentChangeDetailObjArr","category","makeDamageDetailObjArr","workCategory","workObj","条件","詳細","workArr","cond","名前","種類","数値","対象","上限","HIT数","ダメージバフ","元素付与無効","除外条件","適用条件","拡散","conditionMap","exclusionMap","detailObj","makeConditionExclusionMapFromStr","isArray","set","makeDamageDetailObjArrObjWeapon","myLevel","condition","makeDamageDetailObjArrObjArtifactSets","damageDetailObjArr","makeDamageDetailObjArrObjElementalResonance","ELEMENTAL_RESONANCE_MASTER_LIST","makeDetailObj","defaultKind","defaultElement","inputCategory","opt_condition","my種類","my対象","my数値","DAMAGE_CATEGORY_ARRAY","analyzeFormulaStr","my条件","my上限","my下限","下限","getChangeKind","kind","exec","talentDataObj","statusChangeDetailObjArr","talentChangeDetailObjArr","resultArr","makeTeamOptionDetailObjArr","detailObjArr","conditionStr","exclusionCond","myCondStrArr","myCondStr","makeConditionExclusionMapFromStrSub","NUMBER_CONDITION_VALUE_RE","exclusion","myName","pushToMapValueArray","test","conditionObj","min","step","reRet","prefix","condValueArr","postfix","re2","rangeStart","rangeEnd","re2Ret","addDecimal","e","setupConditionValues","masters","master","myDamageDetail","排他","required","exclusions","conditionValue","minValue","checked","arr","selectedIndex","getStatValue","n","vStat","trunc","undefined","warn","updateNumberConditionValues","numberEntryArr","maxValue","map","oldValue","getDecimalLength","multiplyDecimal","value1","value2","decimalLength","intValue1","intValue2","pow","opt_max","k","formulaStr","opt_defaultItem","workStr","analyzeFormulaStrSub","strArr","makeSharedata","savedata","sharedataArr","myBasename","newValue","ARTIFACT_STAT_JA_EN_ABBREV_MAP","join","openTwitter","text","url","opt_hashtags","opt_via","baseUrl","params","URLSearchParams","append","query","toString","shareUrl","window","open","shareByTwitter","sharedata","encoded","encodeURI","getMaxConstellation","getMaxTalentLevel","talentObj","work","pushBuildinfoToSession","builddata","teammembers","sessionStorage","setItem","stringify","popBuildinfoFromSession","getItem","removeItem","_withScopeId","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_hoisted_3","style","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_createElementVNode","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","type","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","render","_ctx","_cache","$props","$setup","$data","$options","_component_ArtifactSetSelect","_resolveComponent","_openBlock","_createElementBlock","control","onClick","$event","isEditing","artifactImgSrc","alt","displayName","copiedArtifact","artifactIconOnClick","_toDisplayString","_withDirectives","onChange","args","_Fragment","_renderList","mainStatOptions","option","_vModelSelect","statStep","_vModelText","displayStatValue","starOnChange","dummy","subStat","subStatOptions","disabled","subStatOptionDisabled","selectOnClick","score","round","_createCommentVNode","selected","_createVNode","visible","artifact","updateArtifactSet","_vShow","isListShow","defineComponent","props","id","initial","Boolean","components","ArtifactSetSelect","emits","setup","context","percent","CompositionFunction","reactive","ref","isSelected","computed","getArtifactIconUrl","MAINSTAT_CAT_ARR","Set","emit","onLoad","watch","newVal","oldVal","__exports__","artifactSetEffects","item","filteredList","_normalizeClass","bgImageClass","selectedClass","$emit","STAR_BACKGROUND_IMAGE_CLASS","artifactSetMastersRea","ARTIFACT_SET_MASTER_LIST","説明","elementList","elementCheckList","checkListOnChange","_vModelCheckbox","elementSrc","weaponList","weaponCheckList","weaponSrc","icon_url","characterOnClick","visionSrc","selectionNumber","characters","ELEMENT_IMG_SRC","element","WEAPON_IMG_SRC","checkList","elementChecked","weaponChecked","CHARACTER_MASTER_LIST","武器","blankIndex","t","te","useI18n","useScope","localeList","setI18nLanguage","global","loadLocaleMessages","document","querySelector","setAttribute","messages","fetch","then","resp","json","setLocaleMessage","nextTick","tempArr","hasPercent","displayStatName","opt_s","myPercent","p","displayStatAbbrev","targetValue","event","target","HTMLInputElement","HTMLSelectElement","displayOptionName"],"sourceRoot":""}