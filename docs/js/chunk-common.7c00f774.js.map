{"version":3,"file":"js/chunk-common.7c00f774.js","mappings":"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","sources":["webpack://gencalc/./src/i18n.ts","webpack://gencalc/./src/components/CompositionFunction.vue?c68d","webpack://gencalc/./src/components/CompositionFunction.vue"],"sourcesContent":["import { createI18n } from 'vue-i18n'\r\n\r\nconst i18n = createI18n({\r\n  legacy: false,\r\n  locale: 'ja-jp',\r\n  fallbackLocale: 'en-us',\r\n  isGlobal: true,\r\n})\r\nexport default i18n;\r\n","\r\nimport i18n from \"@/i18n\";\r\nimport { STAT_PERCENT_LIST } from \"@/input\";\r\nimport { nextTick } from \"vue\";\r\nimport { useI18n } from \"vue-i18n\";\r\n\r\nexport default function CompositionFunction() {\r\n    const { t, te } = useI18n({\r\n        useScope: \"global\",\r\n    });\r\n\r\n    const localeList = [\r\n        { name: \"日本語\", value: \"ja-jp\" },\r\n        { name: \"English\", value: \"en-us\" },\r\n        { name: \"简体中文\", value: \"zh-cn\" },\r\n        { name: \"繁體中文\", value: \"zh-tw\" },\r\n        { name: \"한국어\", value: \"ko-kr\" },\r\n        { name: \"Deutsch\", value: \"de-de\" },\r\n        { name: \"Español\", value: \"es-es\" },\r\n        { name: \"Français\", value: \"fr-fr\" },\r\n        { name: \"Indonesia\", value: \"id-id\" },\r\n        { name: \"Português\", value: \"pt-pt\" },\r\n        { name: \"Pусский\", value: \"ru-ru\" },\r\n        { name: 'ภาษาไทย', value: 'th-th' },\r\n        { name: \"Tiếng Việt\", value: \"vi-vn\" },\r\n    ];\r\n\r\n    const setI18nLanguage = function (locale: string) {\r\n        i18n.global.locale.value = locale;\r\n        loadLocaleMessages(locale);\r\n        document.querySelector('html')?.setAttribute('lang', locale)\r\n    }\r\n\r\n    const loadLocaleMessages = async function (locale: string) {\r\n        if (locale != 'ja-jp') {\r\n            const messages = await fetch(`./locales/${locale}.json`).then(resp => resp.json());\r\n            i18n.global.setLocaleMessage(locale, messages);\r\n        }\r\n        return nextTick();\r\n    }\r\n\r\n    const displayName = function (key: any): string {\r\n        if (!key) return key;\r\n        if (i18n.global.locale.value === 'ja-jp') { // 日本語はtranslateしません\r\n            let result = String(key);\r\n            if (['ダメージバフ', 'ダメージアップ', '反応ボーナス', '敵'].includes(result)) {\r\n                return result;\r\n            }\r\n            result = result.replace(/ダメージバフ$/, 'ダメージ');\r\n            result = result.replace(/ダメージアップ$/, 'ダメージ');\r\n            result = result.replace('凍結反応ボーナス', '凍結反応の継続時間');\r\n            result = result.replace(/反応ボーナス$/, '反応ダメージ');\r\n            result = result.replace(/^敵/, '敵の');\r\n            return result;\r\n        }\r\n        if (te(key)) return t(key);\r\n        const re = new RegExp('(.*?)([\\\\s_\\\\(\\\\)/]+)(.*)');\r\n        let result = '';\r\n        let work = key;\r\n        while (work) {\r\n            const reRet = re.exec(work);\r\n            if (!reRet) {\r\n                result += t(work);\r\n                break;\r\n            }\r\n            if (reRet[1]) result += t(reRet[1]);\r\n            result += reRet[2];\r\n            work = reRet[3];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const percent = function (stat: string) {\r\n        const tempArr = stat.split('.');\r\n        let work = tempArr[0];\r\n        let hasPercent = work.endsWith(\"%\") || STAT_PERCENT_LIST.includes(work);\r\n        if (!hasPercent) {\r\n            ['会心率', '会心ダメージ', 'クールタイム'].forEach(postfix => {\r\n                if (work.endsWith(postfix)) hasPercent = true;\r\n            })\r\n        }\r\n        return hasPercent ? '%' : '';\r\n    }\r\n\r\n    const displayStatName = function (stat: string) {\r\n        let result = stat;\r\n        const tempArr = stat.split('.');\r\n        if (tempArr.length == 1) {\r\n            result = displayName(stat);\r\n        } else if (i18n.global.locale.value === 'ja-jp') {\r\n            result = tempArr[tempArr.length - 1] + 'の' + displayName(tempArr[0]);\r\n        } else {\r\n            result = displayName(tempArr[tempArr.length - 1]) + ' ' + displayName(tempArr[0]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const displayStatValue = function (stat: string, value: number, opt_s?: number): string {\r\n        const myPercent = percent(stat);\r\n        let p = myPercent ? 10 : 1;\r\n        if (opt_s) p = Math.pow(10, opt_s);\r\n        return String(Math.round(value * p) / p) + myPercent;\r\n    }\r\n\r\n    const displayStatAbbrev = function (stat: string) {\r\n        let result = stat;\r\n        const tempArr = stat.split('.');\r\n        if (tempArr.length == 1) {\r\n            if (stat.startsWith('敵')) stat = stat.replace(/^敵/, '');\r\n            if (stat.endsWith('ダメージバフ')) stat = stat.replace(/ダメージバフ$/, '');\r\n            else if (stat.endsWith('ダメージアップ')) stat = stat.replace(/ダメージアップ$/, '');\r\n            else if (stat.endsWith('元素ダメージ')) stat = stat.replace(/元素ダメージ$/, '');\r\n            else if (stat.endsWith('物理ダメージ')) stat = stat.replace(/ダメージ$/, '');\r\n            else if (stat.endsWith('反応ボーナス')) stat = stat.replace(/反応ボーナス$/, '');\r\n            else if (stat.endsWith('耐性')) stat = stat.replace(/耐性$/, '');\r\n            result = displayName(stat);\r\n        } else {\r\n            result = displayStatName(stat);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /** $event.target.valueでのtypescriptエラー回避のために */\r\n    const targetValue = function (event: Event) {\r\n        if (event.target instanceof HTMLInputElement) return event.target.value;\r\n        if (event.target instanceof HTMLSelectElement) return event.target.value;\r\n        return undefined;\r\n    }\r\n\r\n    const displayOptionName = function (name: string) {\r\n        return displayName(name.replace(/^required_/, \"\"));\r\n    }\r\n\r\n    return {\r\n        localeList,\r\n        setI18nLanguage,\r\n        loadLocaleMessages,\r\n        displayName,\r\n        displayStatName,\r\n        displayStatValue,\r\n        displayStatAbbrev,\r\n        targetValue,\r\n        displayOptionName,\r\n    }\r\n}\r\n","import script from \"./CompositionFunction.vue?vue&type=script&lang=ts\"\nexport * from \"./CompositionFunction.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["i18n","createI18n","legacy","locale","fallbackLocale","isGlobal","CompositionFunction","t","te","useI18n","useScope","localeList","name","value","setI18nLanguage","loadLocaleMessages","document","querySelector","setAttribute","async","messages","fetch","then","resp","json","nextTick","displayName","key","result","String","includes","replace","re","RegExp","work","reRet","exec","percent","stat","tempArr","split","hasPercent","endsWith","STAT_PERCENT_LIST","forEach","postfix","displayStatName","length","displayStatValue","opt_s","myPercent","p","Math","pow","round","displayStatAbbrev","startsWith","targetValue","event","target","HTMLInputElement","HTMLSelectElement","displayOptionName","__exports__"],"sourceRoot":""}