{"version":3,"file":"js/chunk-common.6b8f4f33.js","mappings":"oNAMM,SAAUA,EAASC,GACrB,OAAOC,SAASD,IAAmB,MAATA,CAC7B,CAiBK,SAAUE,EAAgBC,EAAUC,GACtC,GAAIC,IAAAA,cAAgBD,IAAQC,IAAAA,cAAgBF,GAAM,CAC9C,MAAMG,EAAUC,OAAOC,KAAKJ,GAC5B,IAAK,MAAMK,KAAOH,EACdH,EAAIM,GAAOL,EAAIK,GAEnB,IAAK,MAAMA,KAAOF,OAAOC,KAAKL,GACrBG,EAAQI,SAASD,WAAaN,EAAIM,EAE9C,CACD,OAAON,CACV,CAGM,MAAMQ,EAAYC,GAAiBA,EAAMC,MAAM,KAAMC,MAAOD,MAAM,KAAME,O,qCCrC/E,MAAMC,GAAOC,EAAAA,EAAAA,GAAW,CACtBC,QAAQ,EACRC,OAAQ,QACRC,eAAgB,QAChBC,UAAU,IAEZ,Q,+7CCJO,MAAMC,EAAe,CACxB,OACA,QACA,SAESC,EAAe,CACxB,OACA,MACA,MACA,QAESC,EAAe,CACxB,MACA,SACA,UACA,UACA,WACA,WACA,UAESC,EAAoB,CAC7B,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YAESC,EAAkB,CAC3B,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QAESC,EAAc,CACvB,aACA,WACA,aACA,cACA,aACA,WAESC,EAAgB,CACzB,cACA,YACA,cACA,eACA,cACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aAESC,EAAc,CACvB,WACA,WACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,aAESC,EAAgB,CACzB,SACA,MACA,OACA,OACA,MACA,OACA,QAESC,EAAe,CACxB,SACA,QACA,QACA,SACA,QACA,WACA,YACA,YACA,cAESC,EAAmB,CAC5B,WAESC,EAAmB,CAC5B,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAESC,EAAkB,CAC3B,QAGSC,EAAiB,IAAIC,IAAI,CAClC,CAAC,UAAWd,GACZ,CAAC,UAAWC,GACZ,CAAC,UAAWC,GACZ,CAAC,eAAgBC,GACjB,CAAC,aAAcC,GACf,CAAC,SAAUC,GACX,CAAC,WAAYC,GAC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","sources":["webpack://gencalc/./src/common.ts","webpack://gencalc/./src/i18n.ts","webpack://gencalc/./src/input.ts","webpack://gencalc/./src/components/ArtifactItem.vue?6b66","webpack://gencalc/./src/components/ArtifactItem.vue?f1bd","webpack://gencalc/./src/components/ArtifactItem.vue","webpack://gencalc/./src/components/CharacterSelect.vue?9536","webpack://gencalc/./src/components/CharacterSelect.vue?1f8b","webpack://gencalc/./src/components/CharacterSelect.vue","webpack://gencalc/./src/components/CompositionFunction.vue?c68d","webpack://gencalc/./src/components/CompositionFunction.vue"],"sourcesContent":["import _ from 'lodash';\r\n\r\nexport function isString(value: any): boolean {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\n\r\nexport function isNumber(value: any): boolean {\r\n    return isFinite(value) && value != null;\r\n}\r\n\r\nexport function isBoolean(value: any): boolean {\r\n    return value === true || value === false;\r\n}\r\n\r\nexport function isPlainObject(value: any): boolean {\r\n    const myType = Object.prototype.toString.call(value);\r\n    return myType === '[object Object]';\r\n}\r\n\r\n// /** 簡易なdeep copy。undefinedなどは消失します */\r\n// export function deepcopy(value: any): any {\r\n//     const result = JSON.parse(JSON.stringify(value));\r\n//     return result;\r\n// }\r\n\r\nexport function overwriteObject(dst: any, src: any) {\r\n    if (_.isPlainObject(src) && _.isPlainObject(dst)) {\r\n        const srcKeys = Object.keys(src);\r\n        for (const key of srcKeys) {\r\n            dst[key] = src[key];\r\n        }\r\n        for (const key of Object.keys(dst)) {\r\n            if (!srcKeys.includes(key)) delete dst[key];\r\n        }\r\n    }\r\n    return dst;\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport const basename = (path: string) => path!.split('/')!.pop()!.split('.')!.shift()!;\r\n","import { createI18n } from 'vue-i18n'\r\n\r\nconst i18n = createI18n({\r\n  legacy: false,\r\n  locale: 'ja-jp',\r\n  fallbackLocale: 'en-us',\r\n  isGlobal: true,\r\n})\r\nexport default i18n;\r\n","import { ARTIFACT_SET_MASTER, ARTIFACT_STAT_JA_EN_ABBREV_MAP, ARTIFACT_SUB_MASTER, CHARACTER_MASTER, DAMAGE_CATEGORY_ARRAY, ELEMENTAL_RESONANCE_MASTER, ELEMENTAL_RESONANCE_MASTER_LIST, ENEMY_MASTER_LIST, GENSEN_MASTER_LIST, getCharacterMasterDetail, getWeaponMasterDetail, IMG_SRC_DUMMY, RECOMMEND_ABBREV_MAP, TAnyObject, TArtifactSet, TArtifactSetEntry, TArtifactSetKey, TArtifactSubKey, TCharacterDetail, TCharacterKey, TEnemyEntry, TWeaponDetail, TWeaponKey, TWeaponTypeKey, WEAPON_MASTER, キャラクター構成PROPERTY_MAP } from '@/master';\r\nimport _ from 'lodash';\r\nimport { basename, isNumber, overwriteObject } from './common';\r\n\r\nexport const 基礎ステータスARRAY = [\r\n    '基礎HP',\r\n    '基礎攻撃力',\r\n    '基礎防御力'\r\n];\r\nexport const 基本ステータスARRAY = [\r\n    'HP上限',\r\n    '攻撃力',\r\n    '防御力',\r\n    '元素熟知'\r\n];\r\nexport const 高級ステータスARRAY = [\r\n    '会心率',\r\n    '会心ダメージ',\r\n    '与える治療効果',\r\n    '受ける治療効果',\r\n    '元素チャージ効率',\r\n    'クールタイム短縮',\r\n    'シールド強化'\r\n];\r\nexport const 元素ステータス_ダメージARRAY = [\r\n    '炎元素ダメージバフ',\r\n    '水元素ダメージバフ',\r\n    '風元素ダメージバフ',\r\n    '雷元素ダメージバフ',\r\n    '草元素ダメージバフ',\r\n    '氷元素ダメージバフ',\r\n    '岩元素ダメージバフ',\r\n    '物理ダメージバフ'\r\n];\r\nexport const 元素ステータス_耐性ARRAY = [\r\n    '炎元素耐性',\r\n    '水元素耐性',\r\n    '風元素耐性',\r\n    '雷元素耐性',\r\n    '草元素耐性',\r\n    '氷元素耐性',\r\n    '岩元素耐性',\r\n    '物理耐性'\r\n];\r\nexport const ダメージバフARRAY = [\r\n    '通常攻撃ダメージバフ',\r\n    '重撃ダメージバフ',\r\n    '落下攻撃ダメージバフ',\r\n    '元素スキルダメージバフ',\r\n    '元素爆発ダメージバフ',\r\n    '与えるダメージ',\r\n];\r\nexport const 実数ダメージ加算ARRAY = [\r\n    '通常攻撃ダメージアップ',\r\n    '重撃ダメージアップ',\r\n    '落下攻撃ダメージアップ',\r\n    '元素スキルダメージアップ',\r\n    '元素爆発ダメージアップ',\r\n    '炎元素ダメージアップ',\r\n    '水元素ダメージアップ',\r\n    '風元素ダメージアップ',\r\n    '雷元素ダメージアップ',\r\n    '草元素ダメージアップ',\r\n    '氷元素ダメージアップ',\r\n    '岩元素ダメージアップ',\r\n    '物理ダメージアップ'\r\n];\r\nexport const 元素反応バフARRAY = [\r\n    '蒸発反応ボーナス',\r\n    '溶解反応ボーナス',\r\n    '過負荷反応ボーナス',\r\n    '感電反応ボーナス',\r\n    '凍結反応ボーナス',\r\n    '超電導反応ボーナス',\r\n    '拡散反応ボーナス',\r\n    '結晶反応ボーナス',\r\n    '燃焼反応ボーナス',\r\n    '開花反応ボーナス',\r\n    '烈開花反応ボーナス',\r\n    '超開花反応ボーナス',\r\n    '超激化反応ボーナス',\r\n    '草激化反応ボーナス',\r\n];\r\nexport const ステータスその他ARRAY = [\r\n    'ダメージ軽減',\r\n    'HP%',\r\n    '攻撃力%',\r\n    '防御力%',\r\n    'HP+',\r\n    '攻撃力+',\r\n    '防御力+',\r\n];\r\nexport const ステータス連動ARRAY = [\r\n    'HP上限V1',\r\n    '攻撃力V1',\r\n    '防御力V1',\r\n    '元素熟知V1',\r\n    '会心率V1',\r\n    '会心ダメージV1',\r\n    '与える治療効果V1',\r\n    '受ける治療効果V1',\r\n    '元素チャージ効率V1',\r\n];\r\nexport const ステータスチーム内最高ARRAY = [\r\n    '元素熟知TOP',\r\n];\r\nexport const 敵ステータス_元素耐性ARRAY = [\r\n    '敵炎元素耐性',\r\n    '敵水元素耐性',\r\n    '敵風元素耐性',\r\n    '敵雷元素耐性',\r\n    '敵草元素耐性',\r\n    '敵氷元素耐性',\r\n    '敵岩元素耐性',\r\n    '敵物理耐性'\r\n];\r\nexport const 敵ステータス_その他ARRAY = [\r\n    '敵防御力'\r\n];\r\n\r\nexport const ステータスARRAY_MAP = new Map([\r\n    ['基礎ステータス', 基礎ステータスARRAY],\r\n    ['基本ステータス', 基本ステータスARRAY],\r\n    ['高級ステータス', 高級ステータスARRAY],\r\n    ['元素ステータス·ダメージ', 元素ステータス_ダメージARRAY],\r\n    ['元素ステータス·耐性', 元素ステータス_耐性ARRAY],\r\n    ['ダメージバフ', ダメージバフARRAY],\r\n    ['実数ダメージ加算', 実数ダメージ加算ARRAY],\r\n    ['元素反応バフ', 元素反応バフARRAY],\r\n    ['その他', ステータスその他ARRAY],\r\n    ['ステータス連動', ステータス連動ARRAY],\r\n    ['チーム内最高値', ステータスチーム内最高ARRAY],\r\n    ['敵ステータス·元素耐性', 敵ステータス_元素耐性ARRAY],\r\n    ['敵ステータス·その他', 敵ステータス_その他ARRAY],\r\n]);\r\n\r\nexport const STAT_PERCENT_LIST = [\r\n    ...高級ステータスARRAY, ...元素ステータス_ダメージARRAY, ...元素ステータス_耐性ARRAY, ...ダメージバフARRAY, ...元素反応バフARRAY, ...敵ステータス_元素耐性ARRAY,\r\n    '別枠乗算', '敵防御力',\r\n];\r\n\r\nexport type TStats = {\r\n    [key: string]: number,\r\n};\r\n\r\nfunction makeStatusTenmplate() {\r\n    const statsObj: TStats = {};\r\n    ステータスARRAY_MAP.forEach((value) => {\r\n        value.forEach(stat => {\r\n            statsObj[stat] = 0;\r\n        });\r\n    });\r\n    statsObj['会心率'] = 5;\r\n    statsObj['会心ダメージ'] = 50;\r\n    statsObj['元素チャージ効率'] = 100;\r\n    statsObj['敵レベル'] = 0;\r\n    statsObj['敵防御力'] = 0;\r\n    return statsObj;\r\n}\r\nexport const ステータスTEMPLATE = makeStatusTenmplate();\r\n\r\nfunction makeEnemyStatusTemplate() {\r\n    const statsObj: TStats = {};\r\n    [元素ステータス_耐性ARRAY].forEach((value) => {\r\n        value.forEach(stat => {\r\n            statsObj[stat] = 0;\r\n        });\r\n    });\r\n    statsObj['防御力'] = 0;\r\n    return statsObj;\r\n}\r\nexport const 敵ステータスTEMPLATE = makeEnemyStatusTemplate();\r\n\r\nexport const 聖遺物メイン効果_生の花ARRAY = [\r\n    '5_HP', '4_HP'\r\n];\r\nexport const 聖遺物メイン効果_死の羽ARRAY = [\r\n    '5_攻撃力', '4_攻撃力'\r\n];\r\nexport const 聖遺物メイン効果_時の砂ARRAY = [\r\n    '5_元素チャージ効率',\r\n    '5_HP%',\r\n    '5_攻撃力%',\r\n    '5_防御力%',\r\n    '5_元素熟知',\r\n    '4_元素チャージ効率',\r\n    '4_HP%',\r\n    '4_攻撃力%',\r\n    '4_防御力%',\r\n    '4_元素熟知'\r\n];\r\nexport const 聖遺物メイン効果_空の杯ARRAY = [\r\n    '5_炎元素ダメージバフ',\r\n    '5_水元素ダメージバフ',\r\n    '5_風元素ダメージバフ',\r\n    '5_雷元素ダメージバフ',\r\n    '5_草元素ダメージバフ',\r\n    '5_氷元素ダメージバフ',\r\n    '5_岩元素ダメージバフ',\r\n    '5_物理ダメージバフ',\r\n    '5_HP%',\r\n    '5_攻撃力%',\r\n    '5_防御力%',\r\n    '5_元素熟知',\r\n    '4_炎元素ダメージバフ',\r\n    '4_水元素ダメージバフ',\r\n    '4_風元素ダメージバフ',\r\n    '4_雷元素ダメージバフ',\r\n    '4_草元素ダメージバフ',\r\n    '4_氷元素ダメージバフ',\r\n    '4_岩元素ダメージバフ',\r\n    '4_物理ダメージバフ',\r\n    '4_HP%',\r\n    '4_攻撃力%',\r\n    '4_防御力%',\r\n    '4_元素熟知'\r\n];\r\nexport const 聖遺物メイン効果_理の冠ARRAY = [\r\n    '5_会心率',\r\n    '5_会心ダメージ',\r\n    '5_HP%',\r\n    '5_攻撃力%',\r\n    '5_防御力%',\r\n    '5_元素熟知',\r\n    '5_与える治療効果',\r\n    '4_会心率',\r\n    '4_会心ダメージ',\r\n    '4_HP%',\r\n    '4_攻撃力%',\r\n    '4_防御力%',\r\n    '4_元素熟知',\r\n    '4_与える治療効果'\r\n];\r\n\r\nexport const 聖遺物サブ効果ARRAY = [\r\n    'HP',\r\n    '攻撃力',\r\n    '防御力',\r\n    '元素熟知',\r\n    '会心率',\r\n    '会心ダメージ',\r\n    '元素チャージ効率',\r\n    '攻撃力%',\r\n    'HP%',\r\n    '防御力%',\r\n];\r\nexport const 聖遺物優先するサブ効果ARRAY = [\r\n    '攻撃力%',\r\n    'HP%',\r\n    '防御力%',\r\n    '元素熟知',\r\n    '会心率',\r\n    '会心ダメージ',\r\n    '元素チャージ効率',\r\n];\r\n\r\nexport const 聖遺物ステータスTEMPLATE = {\r\n    'HP': 0,\r\n    '攻撃力': 0,\r\n    '防御力': 0,\r\n    '元素熟知': 0,\r\n    '会心率': 0,\r\n    '会心ダメージ': 0,\r\n    '元素チャージ効率': 0,\r\n    'HP%': 0,\r\n    '攻撃力%': 0,\r\n    '防御力%': 0,\r\n    '炎元素ダメージバフ': 0,\r\n    '水元素ダメージバフ': 0,\r\n    '風元素ダメージバフ': 0,\r\n    '雷元素ダメージバフ': 0,\r\n    '草元素ダメージバフ': 0,\r\n    '氷元素ダメージバフ': 0,\r\n    '岩元素ダメージバフ': 0,\r\n    '物理ダメージバフ': 0,\r\n    '与える治療効果': 0,\r\n};\r\n\r\nexport const 元素反応TEMPLATE = {\r\n    元素: '炎',\r\n    蒸発倍率: 0,\r\n    溶解倍率: 0,\r\n    過負荷ダメージ: 0,\r\n    感電ダメージ: 0,\r\n    超電導ダメージ: 0,\r\n    拡散ダメージ: 0,\r\n    拡散元素: '炎',\r\n    結晶吸収量: 0,\r\n    燃焼ダメージ: 0,\r\n    開花ダメージ: 0,\r\n    烈開花ダメージ: 0,\r\n    超開花ダメージ: 0,\r\n    超激化ダメージ: 0,\r\n    草激化ダメージ: 0,\r\n    燃焼ダメージ会心率: 0,          // for ナヒーダ\r\n    燃焼ダメージ会心ダメージ: 0,    // for ナヒーダ\r\n    開花ダメージ会心率: 0,          // for ナヒーダ\r\n    開花ダメージ会心ダメージ: 0,    // for ナヒーダ\r\n    烈開花ダメージ会心率: 0,        // for ナヒーダ\r\n    烈開花ダメージ会心ダメージ: 0,  // for ナヒーダ\r\n    超開花ダメージ会心率: 0,        // for ナヒーダ\r\n    超開花ダメージ会心ダメージ: 0,  // for ナヒーダ\r\n};\r\nexport type TDamageResultElementalReaction = typeof 元素反応TEMPLATE;\r\nexport type TDamageResultElementalReactionKey = keyof typeof 元素反応TEMPLATE;\r\n\r\nexport type TDamageResultEntry = [string, string | null, number, number | null, number, string | null, number | null, number | null, number | null];    // 0:名前, 1:元素, 2:期待値, 3:会心, 4:非会心, 5:種類, 6:HIT数, 7:ダメージバフ, 8:敵の防御補正\r\nexport type TDamageResult = {\r\n    元素反応: TDamageResultElementalReaction,\r\n    通常攻撃: TDamageResultEntry[],\r\n    重撃: TDamageResultEntry[],\r\n    落下攻撃: TDamageResultEntry[],\r\n    元素スキル: TDamageResultEntry[],\r\n    元素爆発: TDamageResultEntry[],\r\n    その他: TDamageResultEntry[],\r\n    キャラクター注釈: string[],\r\n    [key: string]: TDamageResultElementalReaction | TDamageResultEntry[] | string[],\r\n};\r\n\r\nexport const DAMAGE_RESULT_TEMPLATE = {\r\n    元素反応: _.cloneDeep(元素反応TEMPLATE) as TDamageResultElementalReaction,\r\n    通常攻撃: [] as TDamageResultEntry[],\r\n    重撃: [] as TDamageResultEntry[],\r\n    落下攻撃: [] as TDamageResultEntry[],\r\n    元素スキル: [] as TDamageResultEntry[],\r\n    元素爆発: [] as TDamageResultEntry[],\r\n    その他: [] as TDamageResultEntry[],\r\n    キャラクター注釈: [] as string[],\r\n};\r\n\r\nexport const 突破レベルレベルARRAY = [\r\n    Array.from({ length: 20 }, (_, i) => i + 1),\r\n    Array.from({ length: 21 }, (_, i) => i + 20),\r\n    Array.from({ length: 11 }, (_, i) => i + 40),\r\n    Array.from({ length: 11 }, (_, i) => i + 50),\r\n    Array.from({ length: 11 }, (_, i) => i + 60),\r\n    Array.from({ length: 11 }, (_, i) => i + 70),\r\n    Array.from({ length: 11 }, (_, i) => i + 80),\r\n];\r\n\r\n\r\nexport type TDamageDetailObj = {\r\n    名前: string | null,\r\n    種類: string | null,\r\n    元素: string | null,\r\n    数値: number | string | Array<any> | null,\r\n    条件: string | null,\r\n    対象: string | null,\r\n    上限: number | string | Array<any> | null,\r\n    下限: number | string | Array<any> | null,\r\n    HIT数: number | null,\r\n    ダメージバフ: string | null,\r\n    元素付与無効: boolean | null,\r\n    除外条件: (string | object)[] | null,\r\n    適用条件: (string | object)[] | null,\r\n};\r\n\r\nexport type TDamageDetail = {\r\n    通常攻撃?: TDamageDetailObj[],\r\n    重撃?: TDamageDetailObj[],\r\n    落下攻撃?: TDamageDetailObj[],\r\n    元素スキル?: TDamageDetailObj[],\r\n    元素爆発?: TDamageDetailObj[],\r\n    その他?: TDamageDetailObj[],\r\n    ステータス変更系詳細: TDamageDetailObj[],\r\n    天賦性能変更系詳細: TDamageDetailObj[],\r\n    条件: Map<string, string[]>,\r\n    排他: Map<string, string[]>,\r\n};\r\n\r\nexport const ARTIFACT_SET_MASTER_DUMMY = {\r\n    key: 'NONE' as TArtifactSetKey,\r\n    レアリティ: 5,\r\n    image: IMG_SRC_DUMMY,\r\n} as TArtifactSet;\r\n\r\nexport const CHARACTER_INPUT_TEMPLATE = {\r\n    character: 'アンバー' as TCharacterKey,\r\n    characterMaster: {} as TCharacterDetail,\r\n    突破レベル: 6,\r\n    レベル: 90,\r\n    命ノ星座: 0,\r\n    通常攻撃レベル: 8,\r\n    元素スキルレベル: 8,\r\n    元素爆発レベル: 8,\r\n    weapon: '西風猟弓' as TWeaponKey,\r\n    weaponMaster: {} as TWeaponDetail,\r\n    武器突破レベル: 6,\r\n    武器レベル: 90,\r\n    武器精錬ランク: 1,\r\n    artifactSets: ['NONE' as TArtifactSetKey, 'NONE' as TArtifactSetKey],\r\n    artifactSetMasters: [ARTIFACT_SET_MASTER_DUMMY, ARTIFACT_SET_MASTER_DUMMY] as TArtifactSetEntry[],\r\n    damageDetailMyCharacter: null as TDamageDetail | null,\r\n    damageDetailMyWeapon: null as TDamageDetail | null,\r\n    damageDetailMyArtifactSets: null as TDamageDetail | null,\r\n    damageDetailElementalResonance: null as TDamageDetail | null,\r\n    buildname: '',\r\n    recommendationSelectedIndex: 0,\r\n    saveDisabled: true,     // ローカルストレージへの構成保存不可か？\r\n    removeDisabled: true,   // ローカルストレージの構成削除不可か？\r\n};\r\nexport type TCharacterInput = typeof CHARACTER_INPUT_TEMPLATE;\r\n\r\nconst ARTIFACT_TEMPLATE = {\r\n    name: '',\r\n    rarity: 5,\r\n    setname: '',\r\n    cat_id: 1,\r\n    mainStat: '',\r\n    mainStatValue: 1,\r\n    subStats: [{ name: '', value: 1 }]\r\n};\r\nexport type TArtifact = typeof ARTIFACT_TEMPLATE;\r\n\r\nexport const ARTIFACT_DETAIL_INPUT_TEMPLATE = {\r\n    聖遺物メイン効果: ['', '', '', '', ''],\r\n    聖遺物優先するサブ効果: ['', '', ''],\r\n    聖遺物優先するサブ効果上昇値: Array.from(GENSEN_MASTER_LIST[2].values),     // 厳選1ヶ月\r\n    聖遺物優先するサブ効果上昇回数: Array.from(GENSEN_MASTER_LIST[2].counts),   // 厳選1ヶ月\r\n    聖遺物ステータス: _.cloneDeep(聖遺物ステータスTEMPLATE),\r\n    聖遺物ステータスメイン効果: _.cloneDeep(聖遺物ステータスTEMPLATE),\r\n    聖遺物ステータスサブ効果: _.cloneDeep(聖遺物ステータスTEMPLATE),\r\n    聖遺物優先するサブ効果Disabled: false,\r\n    artifact_list: [] as TArtifact[],\r\n};\r\nexport type TArtifactDetailInput = typeof ARTIFACT_DETAIL_INPUT_TEMPLATE;\r\n\r\nexport type TCheckboxEntry = {\r\n    name: string;\r\n    displayName?: string;\r\n};\r\nexport type TSelectEntry = {\r\n    name: string;\r\n    displayName?: string;\r\n    options: string[];\r\n    required: boolean;\r\n};\r\nexport type TNumberEntry = {\r\n    name: string;\r\n    displayName?: string;\r\n    min: number | string;\r\n    max?: number | string;\r\n    step?: number;\r\n};\r\nexport type TConditionValues = {\r\n    [key: string]: boolean | number | null,\r\n};\r\nexport type TConditionAdjustments = {\r\n    [key: string]: number | null,\r\n};\r\nexport const CONDITION_INPUT_TEMPLATE = {\r\n    checkboxList: [] as TCheckboxEntry[],\r\n    selectList: [] as TSelectEntry[],\r\n    numberList: [] as TNumberEntry[],\r\n    conditionValues: {} as TConditionValues,\r\n    conditionAdjustments: {} as TConditionAdjustments,\r\n    攻撃元素: [null, null, null] as (string | null)[],\r\n};\r\nexport type TConditionInput = typeof CONDITION_INPUT_TEMPLATE;\r\n\r\nexport const STATS_INPUT_TEMPLATE = {\r\n    statsObj: _.cloneDeep(ステータスTEMPLATE) as TStats,\r\n    statAdjustments: _.cloneDeep(ステータスTEMPLATE) as TStats,\r\n    statAdjustmentsEx: {} as TStats,\r\n    enemyMaster: ENEMY_MASTER_LIST[0] as TEnemyEntry,\r\n};\r\nfor (const stat of Object.keys(STATS_INPUT_TEMPLATE.statAdjustments)) {\r\n    STATS_INPUT_TEMPLATE.statAdjustments[stat] = 0;\r\n}\r\nexport type TStatsInput = typeof STATS_INPUT_TEMPLATE;\r\n\r\nexport type TElementalResonance = {\r\n    conditionValues: TConditionValues,\r\n    conditionAdjustments: TConditionAdjustments,\r\n};\r\n\r\nexport const SUPPORTER_INPUT_TEMPLATE = {\r\n    characterInput: _.cloneDeep(CHARACTER_INPUT_TEMPLATE) as TCharacterInput,\r\n    artifactDetailInput: _.cloneDeep(ARTIFACT_DETAIL_INPUT_TEMPLATE) as TArtifactDetailInput,\r\n    conditionInput: _.cloneDeep(CONDITION_INPUT_TEMPLATE) as TConditionInput,\r\n    statsInput: _.cloneDeep(STATS_INPUT_TEMPLATE) as TStatsInput,\r\n    damageResult: _.cloneDeep(DAMAGE_RESULT_TEMPLATE) as TDamageResult,\r\n};\r\nexport type TSupporterInput = typeof SUPPORTER_INPUT_TEMPLATE;\r\n\r\nexport const OPTION_INPUT_TEMPLATE = {\r\n    elementalResonance: {\r\n        conditionValues: {},\r\n        conditionAdjustments: {},\r\n    } as TElementalResonance,\r\n    supporterBuildname: {} as { [key: string]: string | undefined },\r\n    supporters: {} as { [key: string]: TSupporterInput | undefined },\r\n    teamMembers: [] as string[],\r\n    teamOption: _.cloneDeep(CONDITION_INPUT_TEMPLATE) as TConditionInput,\r\n    miscOption: _.cloneDeep(CONDITION_INPUT_TEMPLATE) as TConditionInput,\r\n};\r\nexport type TOptionInput = typeof OPTION_INPUT_TEMPLATE;\r\n\r\n/** レベル文字列（1+,20,20+,...,90）を突破レベルとレベルに分割します */\r\nfunction parseLevelStr(levelStr: number | string): [number, number] {\r\n    let result: [number, number] = [0, 1];\r\n    try {\r\n        let level: number;\r\n        if (_.isString(levelStr)) {\r\n            level = Number(String(levelStr).replace('+', ''));\r\n        } else {\r\n            level = Number(levelStr);\r\n        }\r\n        let ascension = 0;\r\n        for (let i = (突破レベルレベルARRAY.length - 1); i >= 0; i--) {\r\n            ascension = i;\r\n            if (突破レベルレベルARRAY[i][0] > level) continue;\r\n            if (突破レベルレベルARRAY[i][0] == level && !String(levelStr).endsWith('+')) {\r\n                ascension--;\r\n            }\r\n            break;\r\n        }\r\n        result = [Math.max(0, ascension), level];\r\n    } catch (error) {\r\n        console.error(levelStr);\r\n        // throw error;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport type TRecommendation = {\r\n    name: string,\r\n    build: any,\r\n    overwrite: boolean\r\n}\r\n\r\nexport function makeDefaultBuildname(character: any) {\r\n    return 'あなたの' + character;\r\n}\r\n\r\nexport function makeBuildStorageKey(character: TCharacterKey | string, buildname?: string) {\r\n    let result = '構成_' + character;\r\n    if (buildname && buildname != makeDefaultBuildname(character)) {\r\n        result += '_' + buildname;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function makeOptionStorageKey(character: TCharacterKey | string, buildname?: string) {\r\n    return 'オプション' + makeBuildStorageKey(character, buildname);\r\n}\r\n\r\nexport function makeArtifactScoringStorageKey(character: TCharacterKey | string, buildname?: string) {\r\n    return makeBuildStorageKey(character, buildname).replace(/^構成/, 'ArtifactScoring');\r\n}\r\n\r\nexport function makeSupporterBuildnameStorageKey(character: TCharacterKey | string, buildname?: string) {\r\n    return makeBuildStorageKey(character, buildname).replace(/^構成/, 'SupporterBuildname');\r\n}\r\n\r\n/** おすすめセットのリストを作成します. [おすすめセットの名前, おすすめセットの内容, 上書き可不可][] */\r\nexport function makeRecommendationList(\r\n    characterMaster: TAnyObject,\r\n    opt_buildData?: TAnyObject,\r\n): TRecommendation[] {\r\n    const result: TRecommendation[] = [];\r\n\r\n    const character = characterMaster['名前'];\r\n    let isSavable: boolean | null = null;\r\n\r\n    if (opt_buildData) {\r\n        result.push({ name: 'IMPORTED DATA', build: opt_buildData, overwrite: false });\r\n        isSavable = true;\r\n        console.log(opt_buildData);\r\n    }\r\n\r\n    const storageKeyArr: string[] = [];\r\n    Object.keys(localStorage).forEach(key => {\r\n        if (key.startsWith(makeBuildStorageKey(character))) {\r\n            storageKeyArr.push(key);\r\n            if (isSavable == null) {\r\n                isSavable = false;\r\n            }\r\n        }\r\n    });\r\n    storageKeyArr.sort();\r\n    const re = new RegExp('^構成_' + character + '_');\r\n    storageKeyArr.forEach(key => {\r\n        let buildname;\r\n        if (key == makeBuildStorageKey(character)) {\r\n            buildname = makeDefaultBuildname(character);\r\n        } else {\r\n            buildname = key.replace(re, '');\r\n        }\r\n        const buildObj = JSON.parse(localStorage[key]);\r\n        const key2 = 'オプション' + key;\r\n        if (key2 in localStorage) {\r\n            const optionsObj = JSON.parse(localStorage[key2]);\r\n            buildObj.options = optionsObj;\r\n        }\r\n        const key3 = key.replace(/^構成/, 'ArtifactScoring');\r\n        if (key3 in localStorage) {\r\n            const artifactScoringObj = JSON.parse(localStorage[key3]);\r\n            buildObj.artifactScoring = artifactScoringObj;\r\n        }\r\n        const key4 = key.replace(/^構成/, 'SupporterBuildname');\r\n        if (key4 in localStorage) {\r\n            const supporterBuildnameObj = JSON.parse(localStorage[key4]);\r\n            buildObj.supporterBuildname = supporterBuildnameObj;\r\n        }\r\n        result.push({ name: buildname, build: buildObj, overwrite: true });\r\n    });\r\n\r\n    characterMaster['おすすめセット'].forEach((obj: { [key: string]: any }) => {\r\n        const myRecommendation = obj;\r\n        ['聖遺物優先するサブ効果1', '聖遺物優先するサブ効果2', '聖遺物優先するサブ効果3'].forEach(stat => {\r\n            if (!(stat in obj)) {\r\n                obj[stat] = null;\r\n            }\r\n        });\r\n        const artifactRarerityArrArr = [[5, 5, 5, 5, 5], [4, 4, 5, 5, 5], [4, 4, 4, 5, 4]];\r\n        let artifactRarerity4Num = 0;\r\n        const artifactSet1 = myRecommendation['聖遺物セット効果1'] as TArtifactSetKey;\r\n        const artifactSet2 = myRecommendation['聖遺物セット効果2'] as TArtifactSetKey;\r\n        if (ARTIFACT_SET_MASTER[artifactSet1]['レアリティ'] == 4) {\r\n            artifactRarerity4Num++;\r\n        }\r\n        if (ARTIFACT_SET_MASTER[artifactSet2]['レアリティ'] == 4) {\r\n            artifactRarerity4Num++;\r\n        }\r\n        for (let i = 0; i < 2; i++) {\r\n            const name = '聖遺物メイン効果' + (i + 1);\r\n            if (!(name in myRecommendation)) {\r\n                if (i == 0) {\r\n                    myRecommendation[name] = artifactRarerityArrArr[artifactRarerity4Num][i] + '_HP';\r\n                } else if (i == 1) {\r\n                    myRecommendation[name] = artifactRarerityArrArr[artifactRarerity4Num][i] + '_攻撃力';\r\n                }\r\n            }\r\n        }\r\n\r\n        let buildname = myRecommendation['武器'];\r\n        buildname += ' ';\r\n        if (myRecommendation['聖遺物セット効果1'] == myRecommendation['聖遺物セット効果2']) {\r\n            buildname += myRecommendation['聖遺物セット効果1'];\r\n        } else {\r\n            buildname += makeArtifactSetAbbrev(myRecommendation['聖遺物セット効果1']);\r\n            buildname += '/';\r\n            buildname += makeArtifactSetAbbrev(myRecommendation['聖遺物セット効果2']);\r\n        }\r\n        buildname += ' [';\r\n        for (let i = 3; i <= 5; i++) {\r\n            const statusName = myRecommendation['聖遺物メイン効果' + i].split('_')[1];\r\n            if (RECOMMEND_ABBREV_MAP.has(statusName)) {\r\n                buildname += RECOMMEND_ABBREV_MAP.get(statusName);\r\n            } else {\r\n                buildname += statusName.substring(0, 1);\r\n            }\r\n        }\r\n        buildname += ']';\r\n        result.push({ name: buildname, build: myRecommendation, overwrite: false });\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\n/** 聖遺物セット名の略称を作成します */\r\nfunction makeArtifactSetAbbrev(name: string): string {\r\n    const abbrRe = /[\\p{sc=Hiragana}\\p{sc=Katakana}ー]+/ug;\r\n    let abbr = name.replace(abbrRe, '');\r\n    if (abbr.length > 2) {\r\n        abbr = name.split(abbrRe).sort((a, b) => {\r\n            return b.length - a.length;\r\n        })[0];\r\n    }\r\n    if (abbr.length > 3) {\r\n        abbr = abbr.substring(0, 2);\r\n    }\r\n    return abbr;\r\n}\r\n\r\nexport function makePrioritySubstatValueList(\r\n    prioritySubstats: TArtifactSubKey[],\r\n    index: number,\r\n    opt_substat?: TArtifactSubKey\r\n) {\r\n    const result: number[] = [];\r\n    if (prioritySubstats[index]) {\r\n        if (!opt_substat) opt_substat = prioritySubstats[index];\r\n        if (opt_substat && opt_substat in ARTIFACT_SUB_MASTER) {\r\n            const valueArr = ARTIFACT_SUB_MASTER[opt_substat];\r\n            for (let i = 0; i < valueArr.length; i++) {\r\n                result.push(valueArr[i]);\r\n                if (i < valueArr.length - 1) {\r\n                    const diff = valueArr[i + 1] - valueArr[i];\r\n                    result.push(valueArr[i] + diff / 2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function makeEasyInputSubstatValueList(\r\n    substat: TArtifactSubKey\r\n) {\r\n    const result: number[] = [];\r\n    if (substat && substat in ARTIFACT_SUB_MASTER) {\r\n        const valueArr = ARTIFACT_SUB_MASTER[substat];\r\n        for (let i = 0; i < valueArr.length; i++) {\r\n            result.push(valueArr[i]);\r\n            if (i < valueArr.length - 1) {\r\n                const diff = valueArr[i + 1] - valueArr[i];\r\n                result.push(valueArr[i] + diff / 2);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/** おすすめセットをロードします */\r\nexport async function loadRecommendation(\r\n    characterInput: TCharacterInput,\r\n    artifactDetailInput: TArtifactDetailInput,\r\n    conditionInput: TConditionInput,\r\n    optionInput: TOptionInput,\r\n    build: { [key: string]: any }\r\n) {\r\n    try {\r\n        const character = characterInput.character;\r\n        const characterMaster = await getCharacterMasterDetail(character);\r\n        characterInput.characterMaster = characterMaster;\r\n        const artifactStatsSub = _.cloneDeep(聖遺物ステータスTEMPLATE);\r\n\r\n        if ('レベル' in build) {\r\n            [characterInput.突破レベル, characterInput.レベル] = parseLevelStr(build['レベル']);\r\n        }\r\n        ['命ノ星座', '通常攻撃レベル', '元素スキルレベル', '元素爆発レベル'].forEach(key => {\r\n            if (key in build) {\r\n                (characterInput as any)[key] = Number(build[key]);\r\n            }\r\n        });\r\n\r\n        const weaponType = characterMaster['武器'];\r\n        if ('武器' in build) {\r\n            if (Object.keys(WEAPON_MASTER[weaponType]).includes(build['武器'])) {\r\n                characterInput.weapon = build['武器'] as TWeaponKey;\r\n            } else {\r\n                characterInput.weapon = Object.keys(WEAPON_MASTER[weaponType]).filter(s => s.startsWith('西風'))[0] as TWeaponKey;\r\n            }\r\n            characterInput.weaponMaster = await getWeaponMasterDetail(characterInput.weapon, weaponType);\r\n        }\r\n        if ('武器レベル' in build) {\r\n            [characterInput.武器突破レベル, characterInput.武器レベル] = parseLevelStr(build['武器レベル']);\r\n        }\r\n        if ('精錬ランク' in build) {\r\n            characterInput.武器精錬ランク = Number(build['精錬ランク']);\r\n        }\r\n\r\n        let prioritySubstatsDisabled = false;\r\n        for (const key of Object.keys(build).filter((s: string) => s.startsWith('聖遺物サブ効果'))) {\r\n            let toKey = key.replace(/^聖遺物サブ効果/, '');\r\n            if (toKey != 'HP') toKey = toKey.replace(/P$/, '%');\r\n            if (build[key] || build[key] == 0) {\r\n                prioritySubstatsDisabled = true;\r\n                (artifactStatsSub as any)[toKey] = Number(build[key]);\r\n            }\r\n        }\r\n        artifactDetailInput.聖遺物優先するサブ効果Disabled = prioritySubstatsDisabled;\r\n\r\n        ['聖遺物セット効果1', '聖遺物セット効果2'].forEach((key, index) => {\r\n            if (!(key in build)) return;\r\n            const artifactSet = build[key] as TArtifactSetKey;\r\n            if (artifactSet && artifactSet in ARTIFACT_SET_MASTER) {\r\n                characterInput.artifactSets[index] = artifactSet;\r\n                characterInput.artifactSetMasters[index] = ARTIFACT_SET_MASTER[artifactSet] as TArtifactSetEntry;\r\n            } else {\r\n                characterInput.artifactSetMasters[index] = ARTIFACT_SET_MASTER_DUMMY as TArtifactSetEntry;\r\n            }\r\n        });\r\n\r\n        ['聖遺物メイン効果1', '聖遺物メイン効果2'].forEach((key, index) => {\r\n            if (key in build) {\r\n                artifactDetailInput['聖遺物メイン効果'][index] = build[key];\r\n            } else {\r\n                artifactDetailInput['聖遺物メイン効果'][index] = ['5_HP', '5_攻撃力'][index];\r\n            }\r\n        });\r\n        ['聖遺物メイン効果3', '聖遺物メイン効果4', '聖遺物メイン効果5'].forEach((key, index) => {\r\n            if (!(key in build)) return;\r\n            const mainstat = build[key];\r\n            artifactDetailInput['聖遺物メイン効果'][index + 2] = mainstat;\r\n        });\r\n        // for (const entry of artifactDetailInput['聖遺物メイン効果']) {\r\n        //     const [rarity, stat] = entry.split('_');\r\n        //     artifactStatsMain[stat] += (ARTIFACT_MAIN_MASTER as any)[rarity][stat];\r\n        // }\r\n        // overwriteObject(artifactDetailInput.聖遺物ステータスメイン効果, artifactStatsMain);\r\n\r\n        if (!prioritySubstatsDisabled) {\r\n            ['聖遺物優先するサブ効果1', '聖遺物優先するサブ効果2', '聖遺物優先するサブ効果3'].forEach((key, index) => {\r\n                if (!(key in build)) return;\r\n                const substat = build[key];\r\n                artifactDetailInput['聖遺物優先するサブ効果'][index] = substat;\r\n            });\r\n            ['聖遺物優先するサブ効果1上昇値', '聖遺物優先するサブ効果2上昇値', '聖遺物優先するサブ効果3上昇値'].forEach((key, index) => {\r\n                let doUpdate = false;\r\n                if (artifactDetailInput['聖遺物優先するサブ効果'][index]) {\r\n                    if ((key in build) && isNumber(build[key])) {\r\n                        doUpdate = true;\r\n                    }\r\n                }\r\n                if (doUpdate) {\r\n                    const substatValue = Number(build[key]);\r\n                    const substat = artifactDetailInput['聖遺物優先するサブ効果'][index] as TArtifactSubKey;\r\n                    const prioritySubstatValueList = makePrioritySubstatValueList([substat], 0);\r\n                    prioritySubstatValueList.forEach((v, i) => {\r\n                        if (substatValue <= v) {\r\n                            artifactDetailInput['聖遺物優先するサブ効果上昇値'][index] = i;\r\n                        }\r\n                    })\r\n                } else {\r\n                    if (artifactDetailInput['聖遺物優先するサブ効果'][index] && !artifactDetailInput['聖遺物優先するサブ効果上昇値'][index]) {\r\n                        artifactDetailInput['聖遺物優先するサブ効果上昇値'][index] = GENSEN_MASTER_LIST[2].values[index];\r\n                    }\r\n                }\r\n            });\r\n            ['聖遺物優先するサブ効果1上昇回数', '聖遺物優先するサブ効果2上昇回数', '聖遺物優先するサブ効果3上昇回数'].forEach((key, index) => {\r\n                let doUpdate = false;\r\n                if (artifactDetailInput['聖遺物優先するサブ効果'][index]) {\r\n                    if ((key in build) && isNumber(build[key])) {\r\n                        doUpdate = true;\r\n                    }\r\n                }\r\n                if (doUpdate) {\r\n                    const substatCount = Number(build[key]);\r\n                    artifactDetailInput['聖遺物優先するサブ効果上昇回数'][index] = substatCount;\r\n                } else {\r\n                    if (artifactDetailInput['聖遺物優先するサブ効果'][index] && !artifactDetailInput['聖遺物優先するサブ効果上昇回数'][index]) {\r\n                        artifactDetailInput['聖遺物優先するサブ効果上昇回数'][index] = GENSEN_MASTER_LIST[2].counts[index];\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        Object.keys(build).filter(s => !キャラクター構成PROPERTY_MAP.has(s) && !['options', 'artifactScoring', 'supporterBuildname', 'artifact_list'].includes(s)).forEach(key => {\r\n            if (build[key] == null) {\r\n                conditionInput.conditionValues[key] = build[key];   // null\r\n            } else if (_.isString(build[key])) {\r\n                conditionInput.conditionValues[key] = Number(build[key]);\r\n            } else {\r\n                conditionInput.conditionValues[key] = build[key];\r\n            }\r\n        });\r\n\r\n        if ('options' in build) {\r\n            const keys = Object.keys(build.options);\r\n            if (keys.length) {\r\n                overwriteObject(optionInput.elementalResonance.conditionValues, {});\r\n                overwriteObject(optionInput.teamOption.conditionValues, {});\r\n                overwriteObject(optionInput.miscOption.conditionValues, {});\r\n                keys.forEach(key => {\r\n                    if (key in ELEMENTAL_RESONANCE_MASTER || key == 'dendroOption') {\r\n                        // 元素共鳴\r\n                        optionInput.elementalResonance.conditionValues[key] = build.options[key];\r\n                    } else {\r\n                        const astarIndex = key.indexOf('*');\r\n                        if (astarIndex != -1) {\r\n                            const workCharacter = key.substring(0, astarIndex);\r\n                            if (workCharacter in CHARACTER_MASTER) {\r\n                                // チーム\r\n                                optionInput.teamOption.conditionValues[key] = build.options[key];\r\n                            } else {\r\n                                // その他\r\n                                optionInput.miscOption.conditionValues[key] = build.options[key];\r\n                            }\r\n                        } else {\r\n                            // その他\r\n                            optionInput.miscOption.conditionValues[key] = build.options[key];\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        if ('supporterBuildname' in build) {\r\n            const keys = Object.keys(build.supporterBuildname);\r\n            if (keys.length) {\r\n                overwriteObject(optionInput.supporterBuildname, {});\r\n                keys.forEach(key => {\r\n                    optionInput.supporterBuildname[key] = build.supporterBuildname[key];\r\n                });\r\n            }\r\n        }\r\n\r\n        if ('artifact_list' in build) {\r\n            artifactDetailInput.artifact_list.splice(0, artifactDetailInput.artifact_list.length, ...build.artifact_list);\r\n        }\r\n\r\n        overwriteObject(artifactDetailInput.聖遺物ステータスサブ効果, artifactStatsSub);\r\n\r\n        console.debug('loadRecommendation', characterInput, artifactDetailInput, conditionInput, build);\r\n    }\r\n    catch (error) {\r\n        console.error(characterInput, artifactDetailInput, conditionInput, build);\r\n        // throw error;\r\n    }\r\n}\r\n\r\nexport function makeSavedata(characterInput: TCharacterInput, artifactDetailInput: TArtifactDetailInput, conditionInput: TConditionInput) {\r\n    const resultObj = {} as any;\r\n\r\n    // キャラクター\r\n    resultObj['キャラクター'] = characterInput.character;\r\n    // レベル\r\n    resultObj['レベル'] = characterInput.レベル + (突破レベルレベルARRAY[characterInput.突破レベル][0] == characterInput.レベル ? '+' : '');\r\n    // 命ノ星座\r\n    resultObj['命ノ星座'] = characterInput.命ノ星座;\r\n    // 通常攻撃レベル\r\n    resultObj['通常攻撃レベル'] = characterInput.通常攻撃レベル;\r\n    // 元素スキルレベル\r\n    resultObj['元素スキルレベル'] = characterInput.元素スキルレベル;\r\n    // 元素爆発レベル\r\n    resultObj['元素爆発レベル'] = characterInput.元素爆発レベル;\r\n    // 武器\r\n    resultObj['武器'] = characterInput.weapon;\r\n    // 武器レベル\r\n    resultObj['武器レベル'] = characterInput.武器レベル + (突破レベルレベルARRAY[characterInput.突破レベル][0] == characterInput.武器レベル ? '+' : '');\r\n    // 精錬ランク\r\n    resultObj['精錬ランク'] = characterInput.武器精錬ランク;\r\n    // 聖遺物セット効果1\r\n    resultObj['聖遺物セット効果1'] = characterInput.artifactSets[0];\r\n    // 聖遺物セット効果2\r\n    resultObj['聖遺物セット効果2'] = characterInput.artifactSets[1];\r\n    // 聖遺物メイン効果1\r\n    resultObj['聖遺物メイン効果1'] = artifactDetailInput.聖遺物メイン効果[0];\r\n    // 聖遺物メイン効果2\r\n    resultObj['聖遺物メイン効果2'] = artifactDetailInput.聖遺物メイン効果[1];\r\n    // 聖遺物メイン効果3\r\n    resultObj['聖遺物メイン効果3'] = artifactDetailInput.聖遺物メイン効果[2];\r\n    // 聖遺物メイン効果4\r\n    resultObj['聖遺物メイン効果4'] = artifactDetailInput.聖遺物メイン効果[3];\r\n    // 聖遺物メイン効果5\r\n    resultObj['聖遺物メイン効果5'] = artifactDetailInput.聖遺物メイン効果[4];\r\n    // 聖遺物サブ効果HP\r\n    resultObj['聖遺物サブ効果HP'] = artifactDetailInput.聖遺物ステータスサブ効果['HP'];\r\n    // 聖遺物サブ効果攻撃力\r\n    resultObj['聖遺物サブ効果攻撃力'] = artifactDetailInput.聖遺物ステータスサブ効果['攻撃力'];\r\n    // 聖遺物サブ効果防御力\r\n    resultObj['聖遺物サブ効果防御力'] = artifactDetailInput.聖遺物ステータスサブ効果['防御力'];\r\n    // 聖遺物サブ効果元素熟知\r\n    resultObj['聖遺物サブ効果元素熟知'] = artifactDetailInput.聖遺物ステータスサブ効果['元素熟知'];\r\n    // 聖遺物サブ効果会心率\r\n    resultObj['聖遺物サブ効果会心率'] = artifactDetailInput.聖遺物ステータスサブ効果['会心率'];\r\n    // 聖遺物サブ効果会心ダメージ\r\n    resultObj['聖遺物サブ効果会心ダメージ'] = artifactDetailInput.聖遺物ステータスサブ効果['会心ダメージ'];\r\n    // 聖遺物サブ効果元素チャージ効率\r\n    resultObj['聖遺物サブ効果元素チャージ効率'] = artifactDetailInput.聖遺物ステータスサブ効果['元素チャージ効率'];\r\n    // 聖遺物サブ効果HPP\r\n    resultObj['聖遺物サブ効果HPP'] = artifactDetailInput.聖遺物ステータスサブ効果['HP%'];\r\n    // 聖遺物サブ効果攻撃力P\r\n    resultObj['聖遺物サブ効果攻撃力P'] = artifactDetailInput.聖遺物ステータスサブ効果['攻撃力%'];\r\n    // 聖遺物サブ効果防御力P\r\n    resultObj['聖遺物サブ効果防御力P'] = artifactDetailInput.聖遺物ステータスサブ効果['防御力%'];\r\n    // 聖遺物優先するサブ効果1\r\n    resultObj['聖遺物優先するサブ効果1'] = artifactDetailInput.聖遺物優先するサブ効果[0];\r\n    // 聖遺物優先するサブ効果1上昇値\r\n    resultObj['聖遺物優先するサブ効果1上昇値'] = artifactDetailInput.聖遺物優先するサブ効果上昇値[0];\r\n    // 聖遺物優先するサブ効果1上昇回数\r\n    resultObj['聖遺物優先するサブ効果1上昇回数'] = artifactDetailInput.聖遺物優先するサブ効果上昇回数[0];\r\n    // 聖遺物優先するサブ効果2\r\n    resultObj['聖遺物優先するサブ効果2'] = artifactDetailInput.聖遺物優先するサブ効果[1];\r\n    // 聖遺物優先するサブ効果2上昇値\r\n    resultObj['聖遺物優先するサブ効果2上昇値'] = artifactDetailInput.聖遺物優先するサブ効果上昇値[1];\r\n    // 聖遺物優先するサブ効果2上昇回数\r\n    resultObj['聖遺物優先するサブ効果2上昇回数'] = artifactDetailInput.聖遺物優先するサブ効果上昇回数[1];\r\n    // 聖遺物優先するサブ効果3\r\n    resultObj['聖遺物優先するサブ効果3'] = artifactDetailInput.聖遺物優先するサブ効果[2];\r\n    // 聖遺物優先するサブ効果3上昇値\r\n    resultObj['聖遺物優先するサブ効果3上昇値'] = artifactDetailInput.聖遺物優先するサブ効果上昇値[2];\r\n    // 聖遺物優先するサブ効果3上昇回数\r\n    resultObj['聖遺物優先するサブ効果3上昇回数'] = artifactDetailInput.聖遺物優先するサブ効果上昇回数[2];\r\n\r\n    for (const entry of conditionInput.checkboxList) {\r\n        resultObj[entry.name] = conditionInput.conditionValues[entry.name];\r\n    }\r\n    for (const entry of conditionInput.selectList) {\r\n        resultObj[entry.name] = conditionInput.conditionValues[entry.name];\r\n    }\r\n\r\n    return resultObj;\r\n}\r\n\r\nexport function makeOptionsSavedata(character: string, optionInput: TOptionInput) {\r\n    const resultObj = {} as any;\r\n\r\n    // 元素共鳴\r\n    {\r\n        const conditionValues = optionInput.elementalResonance.conditionValues;\r\n        Object.keys(conditionValues).forEach(key => {\r\n            if (conditionValues[key]) {\r\n                resultObj[key] = conditionValues[key];\r\n            }\r\n        })\r\n    }\r\n\r\n    // チーム\r\n    {\r\n        const conditionValues = optionInput.teamOption.conditionValues;\r\n        Object.keys(conditionValues).forEach(key => {\r\n            if (key.startsWith(character + '*')) return;\r\n            if (conditionValues[key]) {\r\n                resultObj[key] = conditionValues[key];\r\n            }\r\n        })\r\n    }\r\n\r\n    // その他\r\n    {\r\n        const conditionValues = optionInput.miscOption.conditionValues;\r\n        Object.keys(conditionValues).forEach(key => {\r\n            if (conditionValues[key]) {\r\n                resultObj[key] = conditionValues[key];\r\n            }\r\n        })\r\n    }\r\n\r\n    return resultObj;\r\n}\r\n\r\nexport function makeSupporterBuildnameSavedata(buildnameSelection: TAnyObject, optionInput: TOptionInput) {\r\n    const result: TAnyObject = {};\r\n    const conditionKeys = Object.keys(optionInput.teamOption.conditionValues);\r\n    for (const supporter of Object.keys(buildnameSelection)) {\r\n        if (!buildnameSelection[supporter]) continue;\r\n        if (conditionKeys.filter(s => s.startsWith(supporter + '*')).length == 0) continue;\r\n        result[supporter] = buildnameSelection[supporter];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const CHANGE_KIND_STATUS = 'ステータス変更系詳細';\r\nexport const CHANGE_KIND_TALENT = '天賦性能変更系詳細';\r\n\r\nexport function makeDamageDetailObjArrObjCharacter(characterInput: TCharacterInput): TDamageDetail {\r\n    const result = {} as any;\r\n    try {\r\n        const characterMaster = characterInput.characterMaster as any;\r\n\r\n        let myTalentDetail;\r\n        let myTalentLevel: number;\r\n        let myDefaultKind: string | null;\r\n        let myDefaultElement: string | null;\r\n        const myInputCategory = 'キャラクター';\r\n\r\n        const myStatusChangeDetailObjArr = [] as any[];\r\n        const myTalentChangeDetailObjArr = [] as any[];\r\n\r\n        // 通常攻撃 重撃 落下攻撃\r\n        myTalentLevel = characterInput['通常攻撃レベル'];\r\n        myDefaultElement = characterMaster['武器'] === '法器' ? characterMaster['元素'] : null;\r\n        ['通常攻撃', '重撃', '落下攻撃'].forEach(category => {\r\n            myTalentDetail = characterMaster[category];\r\n            myDefaultKind = category + 'ダメージ';\r\n            result[category] = makeDamageDetailObjArr(myTalentDetail, myTalentLevel, myDefaultKind, myDefaultElement, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n        });\r\n\r\n        ['通常攻撃', '重撃', '落下攻撃'].forEach(category => {\r\n            const workCategory = '特殊' + category;\r\n            if (workCategory in characterMaster) {\r\n                myTalentDetail = characterMaster[workCategory];\r\n                if ('種類' in myTalentDetail) {\r\n                    myDefaultKind = myTalentDetail['種類'];\r\n                    switch (myDefaultKind) {\r\n                        case '元素スキルダメージ':\r\n                            myTalentLevel = characterInput['元素スキルレベル'];\r\n                            break;\r\n                        case '元素爆発ダメージ':\r\n                            myTalentLevel = characterInput['元素爆発レベル'];\r\n                            break;\r\n                    }\r\n                }\r\n                if ('元素' in myTalentDetail) {\r\n                    myDefaultElement = myTalentDetail['元素'];\r\n                }\r\n                const workObj = {\r\n                    条件: myTalentDetail['条件'],\r\n                    詳細: makeDamageDetailObjArr(myTalentDetail, myTalentLevel, myDefaultKind, myDefaultElement, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory)\r\n                };\r\n                result[workCategory] = workObj;\r\n            }\r\n        });\r\n\r\n        // 元素スキル\r\n        myTalentLevel = characterInput['元素スキルレベル'];\r\n        myDefaultKind = '元素スキルダメージ';\r\n        myDefaultElement = characterMaster['元素'];\r\n        result['元素スキル'] = makeDamageDetailObjArr(characterMaster['元素スキル'], myTalentLevel, myDefaultKind, myDefaultElement, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n\r\n        // 元素爆発\r\n        myTalentLevel = characterInput['元素爆発レベル'];\r\n        myDefaultKind = '元素爆発ダメージ';\r\n        myDefaultElement = characterMaster['元素'];\r\n        result['元素爆発'] = makeDamageDetailObjArr(characterMaster['元素爆発'], myTalentLevel, myDefaultKind, myDefaultElement, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n\r\n        result['その他'] = [] as TDamageDetailObj[];\r\n\r\n        // その他戦闘天賦\r\n        if ('その他戦闘天賦' in characterMaster) {\r\n            characterMaster['その他戦闘天賦'].forEach((myTalentDetail: any) => {\r\n                const workArr = makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n                if (workArr.length > 0) result['その他'].push(...workArr);\r\n            });\r\n        }\r\n\r\n        // 固有天賦\r\n        characterMaster['固有天賦'].forEach((myTalentDetail: any) => {\r\n            const workArr = makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n            if (workArr.length > 0) result['その他'].push(...workArr);\r\n        });\r\n\r\n        // 命ノ星座\r\n        if ('命ノ星座' in characterMaster) {\r\n            Object.keys(characterMaster['命ノ星座']).forEach(key => {\r\n                if (Number(key) > characterInput.命ノ星座) return;\r\n                myTalentDetail = characterMaster['命ノ星座'][key];\r\n                const workArr = makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n                if (workArr.length > 0) result['その他'].push(...workArr);\r\n            });\r\n        }\r\n\r\n        // 風元素キャラクター\r\n        if (characterMaster['元素'] == '風') {\r\n            if (myTalentChangeDetailObjArr.filter(s => s.条件 && s.条件.startsWith('拡散@')).length == 0) {\r\n                ['炎元素', '水元素', '雷元素', '氷元素'].forEach(cond => {\r\n                    myTalentChangeDetailObjArr.push({\r\n                        名前: null,\r\n                        種類: '固有変数',\r\n                        元素: null,\r\n                        数値: null,\r\n                        条件: '拡散@' + cond,\r\n                        対象: null,\r\n                        上限: null,\r\n                        HIT数: null,\r\n                        ダメージバフ: null,\r\n                        元素付与無効: null,\r\n                        除外条件: null,\r\n                        適用条件: null\r\n                    });\r\n                });\r\n            }\r\n            if ('オプション初期値' in characterMaster) {\r\n                if (Object.keys(characterMaster['オプション初期値']).filter(s => s == '拡散').length == 0) {\r\n                    characterMaster['オプション初期値']['拡散'] = 1;\r\n                }\r\n            } else {\r\n                characterMaster['オプション初期値'] = { 拡散: 1 };\r\n            }\r\n        }\r\n\r\n        result[CHANGE_KIND_STATUS] = myStatusChangeDetailObjArr;\r\n        result[CHANGE_KIND_TALENT] = myTalentChangeDetailObjArr;\r\n\r\n        const conditionMap = new Map();\r\n        const exclusionMap = new Map();\r\n        myStatusChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        myTalentChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        // conditionMap.delete('命ノ星座');\r\n        conditionMap.forEach((value, key) => {\r\n            if (value && Array.isArray(value)) {\r\n                if (!value[0].startsWith('required_')) {\r\n                    conditionMap.set(key, ['', ...value]);\r\n                }\r\n            }\r\n        });\r\n        result['条件'] = conditionMap;\r\n        result['排他'] = exclusionMap;\r\n\r\n        characterInput.damageDetailMyCharacter = result;\r\n    } catch (error) {\r\n        console.error(characterInput, result);\r\n        // throw error;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function makeDamageDetailObjArrObjWeapon(characterInput: any) {\r\n    const result = {} as any;\r\n    try {\r\n        const name = characterInput.weapon;\r\n        const weaponMaster = characterInput.weaponMaster;\r\n        if (!name || !weaponMaster) return result;\r\n\r\n        let myTalentDetail;\r\n        const myLevel = characterInput.武器精錬ランク;\r\n        const myInputCategory = '武器';\r\n\r\n        const myStatusChangeDetailObjArr = [] as any[];\r\n        const myTalentChangeDetailObjArr = [] as any[];\r\n\r\n        if ('武器スキル' in weaponMaster) {\r\n            myTalentDetail = weaponMaster['武器スキル'];\r\n            result['その他'] = makeDamageDetailObjArr(myTalentDetail, myLevel, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n        }\r\n\r\n        result[CHANGE_KIND_STATUS] = myStatusChangeDetailObjArr;\r\n        result[CHANGE_KIND_TALENT] = myTalentChangeDetailObjArr;\r\n\r\n        const conditionMap = new Map();\r\n        const exclusionMap = new Map();\r\n        myStatusChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            let condition = detailObj['条件'];\r\n            if (_.isPlainObject(condition) && myLevel in condition) {\r\n                condition = condition[myLevel];\r\n            }\r\n            makeConditionExclusionMapFromStr(condition, conditionMap, exclusionMap);\r\n        });\r\n        myTalentChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            let condition = detailObj['条件'];\r\n            if (_.isPlainObject(condition) && myLevel in condition) {\r\n                condition = condition[myLevel];\r\n            }\r\n            makeConditionExclusionMapFromStr(condition, conditionMap, exclusionMap);\r\n        });\r\n        conditionMap.forEach((value, key) => {\r\n            if (value && Array.isArray(value)) {\r\n                if (!value[0].startsWith('required_')) {\r\n                    conditionMap.set(key, ['', ...value]);\r\n                }\r\n            }\r\n        });\r\n        result['条件'] = conditionMap;\r\n        result['排他'] = exclusionMap;\r\n\r\n        characterInput.damageDetailMyWeapon = result;\r\n    } catch (error) {\r\n        console.error(characterInput, result);\r\n        // throw error;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function makeDamageDetailObjArrObjArtifactSets(characterInput: any) {\r\n    const result = [] as any;\r\n    try {\r\n        let myTalentDetail;\r\n        const myInputCategory = '聖遺物セット効果';\r\n\r\n        const myStatusChangeDetailObjArr = [] as any[];\r\n        const myTalentChangeDetailObjArr = [] as any[];\r\n\r\n        const artifactSetMasters = characterInput.artifactSetMasters.filter((s: any) => s);\r\n\r\n        if (artifactSetMasters.length > 0) {\r\n            const damageDetailObjArr = [] as TDamageDetailObj[];\r\n            if ('2セット効果' in artifactSetMasters[0]) {\r\n                myTalentDetail = artifactSetMasters[0]['2セット効果'];\r\n                damageDetailObjArr.push(...makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory));\r\n            }\r\n            if (artifactSetMasters.length == 2) {\r\n                if (artifactSetMasters[0] == artifactSetMasters[1]) {\r\n                    myTalentDetail = artifactSetMasters[0]['4セット効果'];\r\n                    damageDetailObjArr.push(...makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory));\r\n                } else {\r\n                    myTalentDetail = artifactSetMasters[1]['2セット効果'];\r\n                    damageDetailObjArr.push(...makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory));\r\n                }\r\n            }\r\n            result['その他'] = damageDetailObjArr;\r\n        }\r\n\r\n        result[CHANGE_KIND_STATUS] = myStatusChangeDetailObjArr;\r\n        result[CHANGE_KIND_TALENT] = myTalentChangeDetailObjArr;\r\n\r\n        const conditionMap = new Map();\r\n        const exclusionMap = new Map();\r\n        myStatusChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        myTalentChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        conditionMap.forEach((value, key) => {\r\n            if (value && Array.isArray(value)) {\r\n                if (!value[0].startsWith('required_')) {\r\n                    conditionMap.set(key, ['', ...value]);\r\n                }\r\n            }\r\n        });\r\n        result['条件'] = conditionMap;\r\n        result['排他'] = exclusionMap;\r\n\r\n        characterInput.damageDetailMyArtifactSets = result;\r\n    } catch (error) {\r\n        console.error(characterInput, result);\r\n        // throw error;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function makeDamageDetailObjArrObjElementalResonance(characterInput: any) {\r\n    const result = [] as any;\r\n    try {\r\n        const myInputCategory = '元素共鳴';\r\n        const damageDetailObjArr = [] as TDamageDetailObj[];\r\n        const myStatusChangeDetailObjArr = [] as any[];\r\n        const myTalentChangeDetailObjArr = [] as any[];\r\n        for (const myTalentDetail of ELEMENTAL_RESONANCE_MASTER_LIST) {\r\n            const workObj = _.cloneDeep(myTalentDetail);\r\n            if (workObj.詳細) {\r\n                workObj.詳細.forEach((detailObj: TAnyObject) => {\r\n                    detailObj.名前 = myTalentDetail.key;\r\n                });\r\n            }\r\n            damageDetailObjArr.push(...makeDamageDetailObjArr(workObj, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory));\r\n        }\r\n        result['その他'] = damageDetailObjArr;\r\n        result[CHANGE_KIND_STATUS] = myStatusChangeDetailObjArr;\r\n        result[CHANGE_KIND_TALENT] = myTalentChangeDetailObjArr;\r\n\r\n        const conditionMap = new Map();\r\n        const exclusionMap = new Map();\r\n        myStatusChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        myTalentChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        conditionMap.forEach((value, key) => {\r\n            if (value && Array.isArray(value)) {\r\n                if (!value[0].startsWith('required_')) {\r\n                    conditionMap.set(key, ['', ...value]);\r\n                }\r\n            }\r\n        });\r\n        result['条件'] = conditionMap;\r\n        result['排他'] = exclusionMap;\r\n\r\n        characterInput.damageDetailElementalResonance = result;\r\n    } catch (error) {\r\n        console.error(characterInput, result);\r\n        // throw error;\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction makeDetailObj(\r\n    detailObj: any,\r\n    level: number | null,\r\n    defaultKind: string | null,\r\n    defaultElement: string | null,\r\n    inputCategory: string | null,\r\n    opt_condition?: string,\r\n): TDamageDetailObj {\r\n    let my種類 = '種類' in detailObj ? detailObj['種類'] : defaultKind;\r\n    let my対象 = null;\r\n    if (my種類.indexOf('.') != -1) {\r\n        my対象 = my種類.substring(my種類.indexOf('.') + 1);\r\n        my種類 = my種類.substring(0, my種類.indexOf('.'));\r\n    } else if ('対象' in detailObj) {\r\n        my対象 = detailObj['対象'];\r\n    }\r\n    let my数値 = null;\r\n    if ('数値' in detailObj) {\r\n        my数値 = detailObj['数値'];\r\n        if (isNumber(my数値) || _.isString(my数値)) {\r\n            // nop\r\n        } else if (_.isPlainObject(my数値) && level && level in my数値) { // キャラクター|武器のサブステータス\r\n            my数値 = my数値[level];\r\n        } else {\r\n            console.error(detailObj, level, defaultKind, defaultElement, my数値);\r\n        }\r\n        if (DAMAGE_CATEGORY_ARRAY.includes(my種類 + 'ダメージ') || my種類.endsWith('ダメージ')) {\r\n            my数値 = analyzeFormulaStr(my数値, '攻撃力');\r\n        } else {\r\n            my数値 = analyzeFormulaStr(my数値, my種類);\r\n        }\r\n    }\r\n    let my条件 = null;\r\n    if ('条件' in detailObj) {\r\n        if (_.isPlainObject(detailObj['条件']) && level && level in detailObj['条件']) {  // 武器は精錬ランクによって数値を変えたいときがあるので\r\n            my条件 = detailObj['条件'][level];\r\n        } else {\r\n            my条件 = detailObj['条件'];\r\n        }\r\n    } else {\r\n        my条件 = opt_condition ?? null;\r\n    }\r\n    let my上限 = null;\r\n    if ('上限' in detailObj) {\r\n        my上限 = detailObj['上限'];\r\n        if (_.isPlainObject(my上限) && level && level in my上限) {   // 草薙の稲光\r\n            my上限 = my上限[level];\r\n        }\r\n        my上限 = analyzeFormulaStr(my上限);\r\n    }\r\n    let my下限 = null;\r\n    if ('下限' in detailObj) {  // ニィロウ\r\n        my下限 = detailObj['下限'];\r\n        if (_.isPlainObject(my下限) && level && level in my下限) {\r\n            my下限 = my下限[level];\r\n        }\r\n        my下限 = analyzeFormulaStr(my下限);\r\n    }\r\n    const resultObj: TDamageDetailObj = {\r\n        名前: detailObj['名前'],\r\n        種類: my種類,\r\n        元素: '元素' in detailObj ? detailObj['元素'] : defaultElement,\r\n        数値: my数値,\r\n        条件: my条件,\r\n        対象: my対象,\r\n        上限: my上限,\r\n        下限: my下限,\r\n        HIT数: 'HIT数' in detailObj ? detailObj['HIT数'] : null,\r\n        ダメージバフ: 'ダメージバフ' in detailObj ? detailObj['ダメージバフ'] : null,\r\n        元素付与無効: '元素付与無効' in detailObj ? detailObj['元素付与無効'] : inputCategory == '武器',\r\n        除外条件: '除外条件' in detailObj ? detailObj['除外条件'] : null,\r\n        適用条件: '適用条件' in detailObj ? detailObj['適用条件'] : null,\r\n    }\r\n    return resultObj;\r\n}\r\n\r\nexport function getChangeKind(kind: string) {\r\n    if (kind in ステータスTEMPLATE\r\n        || new RegExp('[自全].+(バフ|アップ)').exec(kind)\r\n        || ['その他ダメージアップ'].includes(kind)  // for 放浪者\r\n        || new RegExp('敵?[自全]元素耐性').exec(kind)\r\n        || ['別枠乗算', '回復量アップ'].includes(kind)\r\n        || ['敵防御力'].includes(kind)\r\n        || ['発動回数', '使用回数'].includes(kind)\r\n        || ['攻撃速度', '通常攻撃速度', '重撃速度', '移動速度'].includes(kind)\r\n        || kind.endsWith('継続時間')\r\n        || kind.endsWith('クールタイム')\r\n        || kind.endsWith('会心率')\r\n        || kind.endsWith('会心ダメージ')\r\n    ) {\r\n        return 'STATUS';\r\n    } else if (kind.endsWith('強化')\r\n        || kind.endsWith('付与')\r\n        || kind == '防御無視' ||\r\n        kind == '固有変数'\r\n    ) {   // ex.元素爆発強化,氷元素付与\r\n        return 'TALENT';\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport function makeDamageDetailObjArr(\r\n    talentDataObj: any,\r\n    level: number | null,\r\n    defaultKind: string | null,\r\n    defaultElement: string | null,\r\n    statusChangeDetailObjArr: any[],\r\n    talentChangeDetailObjArr: any[],\r\n    inputCategory: string,\r\n    opt_condition?: string,\r\n): TDamageDetailObj[] {\r\n    const resultArr = [] as any[];\r\n    if (!('詳細' in talentDataObj)) return resultArr;\r\n\r\n    talentDataObj['詳細'].forEach((detailObj: TAnyObject) => {\r\n        const resultObj = makeDetailObj(detailObj, level, defaultKind, defaultElement, inputCategory, opt_condition);\r\n        const my種類 = resultObj.種類 as string;\r\n        if (statusChangeDetailObjArr != null && getChangeKind(my種類) == 'STATUS') {\r\n            resultObj['元素'] = '元素' in detailObj ? detailObj['元素'] : null;\r\n            statusChangeDetailObjArr.push(resultObj);\r\n            return;\r\n        }\r\n        if (talentChangeDetailObjArr != null && getChangeKind(my種類) == 'TALENT') {\r\n            resultObj['元素'] = '元素' in detailObj ? detailObj['元素'] : null;\r\n            talentChangeDetailObjArr.push(resultObj);\r\n            return;\r\n        }\r\n        resultArr.push(resultObj);\r\n    });\r\n\r\n    return resultArr;\r\n}\r\n\r\nexport function makeTeamOptionDetailObjArr(\r\n    detailObjArr: any[],\r\n): TDamageDetailObj[] {\r\n    const resultArr = [] as any[];\r\n\r\n    detailObjArr.forEach((detailObj: { [x: string]: any; }) => {\r\n        const resultObj = makeDetailObj(detailObj, null, null, null, null);\r\n        if (resultObj) {\r\n            resultArr.push(resultObj);\r\n        }\r\n    });\r\n\r\n    return resultArr;\r\n}\r\n\r\n// 条件名\r\n// 条件名@prefix数値postfix\r\n// 条件名@prefix数値(From)-数値(To)postfix\r\n// 条件名@prefix数値1,数値2,数値3postfix\r\n// 条件名=prefix数値postfix\r\n// 条件名@文字列\r\n// 条件名=文字列\r\n// 条件名={min=数値|文字列,max=数値|文字列,step=数値}\r\n// OR条件   条件A|条件B\r\n// AND条件  条件A&条件B\r\n// 排他条件 条件A^条件B\r\nexport function makeConditionExclusionMapFromStr(\r\n    conditionStr: string,\r\n    conditionMap: Map<string, string[] | null | object>,\r\n    exclusionMap: Map<string, string[] | null>\r\n) {\r\n    // 排他条件を抽出します\r\n    let exclusionCond: string | null = null;\r\n    let myCondStrArr = conditionStr.split('^');\r\n    if (myCondStrArr.length > 1) {\r\n        exclusionCond = myCondStrArr[1];\r\n    }\r\n    const myCondStr = myCondStrArr[0];\r\n    if (myCondStr.indexOf('|') != -1) {\r\n        // OR条件 for 申鶴\r\n        myCondStrArr = myCondStr.split('|');\r\n        myCondStrArr.forEach((myCondStr: string) => {\r\n            makeConditionExclusionMapFromStrSub(myCondStr, conditionMap, exclusionMap, exclusionCond);\r\n        });\r\n    } else {\r\n        // AND条件\r\n        myCondStrArr = myCondStr.split('&');\r\n        myCondStrArr.forEach((myCondStr: string) => {\r\n            makeConditionExclusionMapFromStrSub(myCondStr, conditionMap, exclusionMap, exclusionCond);\r\n        });\r\n    }\r\n}\r\n\r\nexport const NUMBER_CONDITION_VALUE_RE = /^\\s*{.+}\\s*$/;\r\n\r\nfunction makeConditionExclusionMapFromStrSub(\r\n    conditionStr: string,\r\n    conditionMap: Map<string, string[] | null | object>,\r\n    exclusionMap: Map<string, string[] | null>,\r\n    exclusion: string | null\r\n) {\r\n    const myCondStrArr = conditionStr.split(/[@=]/);\r\n    const myName = myCondStrArr[0];\r\n    if (myCondStrArr.length == 1) {\r\n        pushToMapValueArray(conditionMap, myName, null);\r\n    } else if (myCondStrArr.length == 2) {\r\n        if (NUMBER_CONDITION_VALUE_RE.test(myCondStrArr[1])) {\r\n            try {\r\n                const workObj = JSON.parse(myCondStrArr[1]);\r\n                if ('min' in workObj) { // minは必須\r\n                    const conditionObj = {\r\n                        min: workObj.min,\r\n                        max: workObj.max,\r\n                        step: workObj.step,\r\n                    };\r\n                    pushToMapValueArray(conditionMap, myName, conditionObj);\r\n                } else {\r\n                    console.error(conditionStr, conditionMap, exclusionMap, exclusion);\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n                console.error(conditionStr, conditionMap, exclusionMap, exclusion);\r\n            }\r\n        } else if (myCondStrArr[1].indexOf(',') != -1) {\r\n            const re = new RegExp('([^0-9]*?)([\\\\+\\\\-0-9\\\\.,]+)(.*)');  // 表現可能:-10,+60%\r\n            const reRet = re.exec(myCondStrArr[1]);\r\n            if (reRet) {\r\n                const prefix = reRet[1];\r\n                const condValueArr = reRet[2].split(',');\r\n                const postfix = reRet[3];\r\n                condValueArr.forEach(value => {\r\n                    pushToMapValueArray(conditionMap, myName, prefix + value + postfix);\r\n                });\r\n            }\r\n        } else if (myCondStrArr[1].indexOf('-') != -1) {\r\n            const re = new RegExp('([^0-9\\\\.]*)(-?[0-9\\\\.]+)-(-?[0-9\\\\.]+)(.*)');   // 数値部に+は含められない。prefixには含められる。\r\n            const re2 = new RegExp('/([0-9\\\\.]+)(.*)');\r\n            const reRet = re.exec(myCondStrArr[1]);\r\n            if (reRet) {\r\n                const prefix = reRet[1];\r\n                const rangeStart = Number(reRet[2]);\r\n                const rangeEnd = Number(reRet[3]);\r\n                let step = rangeStart;\r\n                let postfix = reRet[4];\r\n                if (postfix) {\r\n                    const re2Ret = re2.exec(postfix);\r\n                    if (re2Ret) {\r\n                        step = Number(re2Ret[1]);\r\n                        postfix = re2Ret[2];\r\n                    }\r\n                }\r\n                for (let i = rangeStart; i < rangeEnd; i = addDecimal(i, step, rangeEnd)) {\r\n                    pushToMapValueArray(conditionMap, myName, prefix + String(i) + postfix);\r\n                }\r\n                pushToMapValueArray(conditionMap, myName, prefix + String(rangeEnd) + postfix);\r\n            } else {\r\n                pushToMapValueArray(conditionMap, myName, myCondStrArr[1]);\r\n            }\r\n        } else {\r\n            pushToMapValueArray(conditionMap, myName, myCondStrArr[1]);\r\n        }\r\n    } else {\r\n        console.error(conditionStr, conditionMap, exclusionMap, exclusion);\r\n    }\r\n    if (exclusion) {\r\n        exclusion.split(',').forEach(e => {\r\n            pushToMapValueArray(exclusionMap, myName, e);\r\n        });\r\n    }\r\n}\r\n\r\nexport function setupConditionValues(\r\n    conditionInput: TConditionInput,\r\n    characterInput: TCharacterInput,\r\n    optionInput: TOptionInput,\r\n) {\r\n    try {\r\n        const conditionValues = conditionInput.conditionValues;\r\n        const checkboxList = conditionInput.checkboxList as TCheckboxEntry[];\r\n        const selectList = conditionInput.selectList as TSelectEntry[];\r\n        const numberList = conditionInput.numberList as TNumberEntry[];\r\n\r\n        checkboxList.splice(0, checkboxList.length);\r\n        selectList.splice(0, selectList.length);\r\n\r\n        const masters = [characterInput.characterMaster, characterInput.weaponMaster, ...characterInput.artifactSetMasters];\r\n        for (const master of masters.filter(s => s)) {\r\n            if ('オプション初期値' in master) {\r\n                for (const key of Object.keys((master as any)['オプション初期値'])) {\r\n                    if (!(key in conditionValues)) {\r\n                        conditionValues[key] = (master as any)['オプション初期値'][key];\r\n                    }\r\n                }\r\n            }\r\n            // 聖遺物セット効果のオプション初期値は変な位置にあります\r\n            if ('4セット効果' in master && 'オプション初期値' in (master as any)['4セット効果']) {\r\n                for (const key of Object.keys((master as any)['4セット効果']['オプション初期値'])) {\r\n                    if (!(key in conditionValues)) {\r\n                        conditionValues[key] = (master as any)['4セット効果']['オプション初期値'][key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const myDamageDetail of [characterInput.damageDetailMyCharacter, characterInput.damageDetailMyWeapon, characterInput.damageDetailMyArtifactSets]) {\r\n            if (myDamageDetail) {\r\n                const conditionMap: Map<string, string[] | null | object> = myDamageDetail.条件;\r\n                const exclusionMap: Map<string, string[] | null> = myDamageDetail.排他;\r\n\r\n                conditionMap.forEach((value: string[] | null | object, key: string) => {\r\n                    if (value == null) {\r\n                        if (checkboxList.filter(s => s.name == key).length == 0) {\r\n                            checkboxList.push({ name: key });\r\n                        }\r\n                    } else if (Array.isArray(value)) {\r\n                        if (selectList.filter(s => s.name == key).length == 0) {\r\n                            const required = value[0].startsWith(\"required_\");\r\n                            selectList.push({\r\n                                name: key,\r\n                                options: value,\r\n                                required: required,\r\n                            });\r\n                        }\r\n                    } else if (_.isPlainObject(value)) {\r\n                        if (numberList.filter(s => s.name == key).length == 0) {\r\n                            const entry = {\r\n                                name: key,\r\n                                min: (value as any).min,\r\n                                max: (value as any).max,\r\n                                step: (value as any).step,\r\n                            };\r\n                            numberList.push(entry);\r\n                        }\r\n                    }\r\n                    if (key in conditionValues && conditionValues[key] != null) {\r\n                        const exclusions = exclusionMap.get(key);\r\n                        if (exclusions) {\r\n                            for (const exclusion of exclusions) {\r\n                                if (exclusion in conditionValues) {\r\n                                    const conditionValue = conditionMap.get(exclusion);\r\n                                    if (conditionValue === null) {  // checkbox\r\n                                        conditionValues[exclusion] = false;\r\n                                    } else if (Array.isArray(value)) {    // select\r\n                                        conditionValues[exclusion] = 0;\r\n                                    } else if (_.isPlainObject(value)) {    // number\r\n                                        const minValue = (value as any).min;\r\n                                        if (isNumber(minValue)) {\r\n                                            conditionValues[exclusion] = minValue;\r\n                                        } else {\r\n                                            conditionValues[exclusion] = 0;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (value === null) {   // checkbox\r\n                            let checked = true;\r\n                            const arr = exclusionMap.get(key);\r\n                            if (arr && arr.filter(s => conditionValues[s]).length > 0) {\r\n                                checked = false;\r\n                            }\r\n                            conditionValues[key] = checked;\r\n                        } else if (Array.isArray(value)) {   // select\r\n                            let selectedIndex = value.length - 1;\r\n                            const arr = exclusionMap.get(key);\r\n                            if (arr && arr.filter(s => conditionValues[s]).length > 0) {\r\n                                selectedIndex = 0;\r\n                            }\r\n                            conditionValues[key] = selectedIndex;\r\n                        } else if (_.isPlainObject(value)) {    // number\r\n                            const minValue = (value as any).min;\r\n                            if (isNumber(minValue)) {\r\n                                conditionValues[key] = minValue;\r\n                            } else {\r\n                                conditionValues[key] = 0;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (optionInput.elementalResonance) {\r\n            const conditionMap: Map<string, any[] | null | object> = new Map();\r\n            const exclusionMap: Map<string, string[] | null> = new Map();\r\n            for (const key of Object.keys(ELEMENTAL_RESONANCE_MASTER)) {\r\n                if (!optionInput.elementalResonance.conditionValues[key]) continue;\r\n                const master = (ELEMENTAL_RESONANCE_MASTER as any)[key];\r\n                if (!master.詳細) continue;\r\n                for (const detailObj of master.詳細) {\r\n                    if (!detailObj.条件) continue;\r\n                    makeConditionExclusionMapFromStr(detailObj.条件, conditionMap, exclusionMap);\r\n                }\r\n            }\r\n            conditionMap.forEach((value: string[] | null | object, key: string) => {\r\n                if (value == null) {\r\n                    if (checkboxList.filter(s => s.name == key).length == 0) {\r\n                        checkboxList.push({ name: key });\r\n                    }\r\n                } else if (Array.isArray(value)) {\r\n                    if (selectList.filter(s => s.name == key).length == 0) {\r\n                        const required = value[0].startsWith(\"required_\");\r\n                        selectList.push({\r\n                            name: key,\r\n                            options: value,\r\n                            required: required,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                if (key in conditionValues && conditionValues[key] != null) {\r\n                    const exclusions = exclusionMap.get(key);\r\n                    if (exclusions) {\r\n                        for (const exclusion of exclusions) {\r\n                            if (exclusion in conditionValues) {\r\n                                const conditionValue = conditionMap.get(exclusion);\r\n                                if (conditionValue === null) {  // checkbox\r\n                                    conditionValues[exclusion] = false;\r\n                                } else if (Array.isArray(value)) {    // select\r\n                                    conditionValues[exclusion] = 0;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (value === null) {   // checkbox\r\n                        let checked = true;\r\n                        const arr = exclusionMap.get(key);\r\n                        if (arr && arr.filter(s => conditionValues[s]).length > 0) {\r\n                            checked = false;\r\n                        }\r\n                        conditionValues[key] = checked;\r\n                    } else if (Array.isArray(value)) {   // select\r\n                        let selectedIndex = value.length - 1;\r\n                        const arr = exclusionMap.get(key);\r\n                        if (arr && arr.filter(s => conditionValues[s]).length > 0) {\r\n                            selectedIndex = 0;\r\n                        }\r\n                        conditionValues[key] = selectedIndex;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    } catch (error) {\r\n        console.error(conditionInput, characterInput);\r\n        // throw error;\r\n    }\r\n}\r\n\r\nexport function getStatValue(stat: string, statsObj: TStats) {\r\n    let result;\r\n    if (stat in statsObj) {\r\n        result = statsObj[stat];\r\n    } else {\r\n        const re = /(.+)X([0-7])$/;\r\n        const reRet = re.exec(stat);\r\n        if (reRet) {\r\n            if (reRet[1] in statsObj) {\r\n                result = statsObj[reRet[1]];\r\n                let n = Number(reRet[2]);\r\n                for (let i = 1; i <= 3; i++) {\r\n                    if ((n % 2) == 1) {\r\n                        const vStat: string = reRet[1] + 'V' + i;\r\n                        if (vStat in statsObj) {\r\n                            result -= statsObj[vStat];\r\n                        }\r\n                    }\r\n                    n = Math.trunc(n / 2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (result === undefined) {\r\n        console.error(stat, statsObj);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function updateNumberConditionValues(\r\n    conditionInput: TConditionInput,\r\n    characterInput: TCharacterInput,\r\n    statsObj: TStats,\r\n) {\r\n    for (const myDamageDetail of [characterInput.damageDetailMyCharacter, characterInput.damageDetailMyWeapon, characterInput.damageDetailMyArtifactSets]) {\r\n        if (myDamageDetail) {\r\n            const conditionMap: Map<string, string[] | null | object> = myDamageDetail.条件;\r\n            conditionMap.forEach((value: string[] | null | object, key: string) => {\r\n                if (_.isPlainObject(value)) {\r\n                    const numberEntryArr = conditionInput.numberList.filter(s => s.name == key);\r\n                    if (numberEntryArr.length > 0) {\r\n                        let minValue = (value as any).min;\r\n                        let maxValue = (value as any).max;\r\n                        if (_.isString(minValue) || _.isString(maxValue)) {\r\n                            if (_.isString(minValue)) {\r\n                                minValue = getStatValue(minValue, statsObj);\r\n                            }\r\n                            if (_.isString(maxValue)) {\r\n                                maxValue = getStatValue(maxValue, statsObj);\r\n                            }\r\n                            numberEntryArr[0].min = minValue;\r\n                            numberEntryArr[0].max = maxValue;\r\n                            if (key in conditionInput.conditionValues) {\r\n                                const value = conditionInput.conditionValues[key];\r\n                                if (_.isNumber(value)) {\r\n                                    if (value < minValue) {\r\n                                        conditionInput.conditionValues[key] = minValue;\r\n                                    } else if (maxValue !== undefined && value > maxValue) {\r\n                                        conditionInput.conditionValues[key] = maxValue;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction pushToMapValueArray(map: Map<any, any>, key: any, value: any) {\r\n    if (value == null) {    // checkbox\r\n        if (!map.has(key)) {\r\n            map.set(key, null);\r\n        }\r\n    } else if (_.isString(value)) { // select\r\n        if (map.has(key)) {\r\n            const oldValue = map.get(key);\r\n            if (oldValue == null) {\r\n                map.set(key, [value]);\r\n            } else if (Array.isArray(oldValue)) {\r\n                if (!oldValue.includes(value)) {\r\n                    map.get(key).push(value);\r\n                }\r\n            } else {\r\n                console.error(map, key, value);\r\n            }\r\n        } else {\r\n            map.set(key, [value]);\r\n        }\r\n    } else if (_.isPlainObject(value)) {    // number\r\n        map.set(key, value);\r\n    }\r\n}\r\n\r\nfunction getDecimalLength(value: number): number {\r\n    const arr = ('' + value).split('.');\r\n    return arr.length > 1 ? arr[1].length : 0;\r\n}\r\n\r\nexport function multiplyDecimal(value1: number, value2: number): number {\r\n    const decimalLength = getDecimalLength(value1) + getDecimalLength(value2);\r\n    const intValue1 = Number(('' + value1).replace('.', ''));\r\n    const intValue2 = Number(('' + value2).replace('.', ''));\r\n    const result = (intValue1 * intValue2) / Math.pow(10, decimalLength);\r\n    return Number(result);\r\n}\r\n\r\nexport function addDecimal(value1: number, value2: number, opt_max?: number): number {\r\n    const k = Math.pow(10, Math.max(getDecimalLength(value1), getDecimalLength(value2)));\r\n    let result = (multiplyDecimal(value1, k) + multiplyDecimal(value2, k)) / k;\r\n    if (opt_max != undefined) {\r\n        result = Math.min(result, opt_max);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction analyzeFormulaStr(\r\n    formulaStr: number | string,\r\n    opt_defaultItem: string | null = null\r\n) {\r\n    const resultArr = [] as any[];\r\n    const re = new RegExp('([\\\\+\\\\-\\\\*/]?)([^\\\\+\\\\-\\\\*/]+)(.*)');\r\n    let workStr = String(formulaStr);\r\n    // eslint-disable-next-line no-constant-condition\r\n    while (true) {\r\n        const reRet = re.exec(workStr);\r\n        if (!reRet) {\r\n            resultArr.push(workStr);\r\n            break;\r\n        }\r\n        if (reRet[1]) { // + - * /\r\n            resultArr.push(reRet[1]);\r\n        }\r\n        resultArr.push(analyzeFormulaStrSub(reRet[2], opt_defaultItem));\r\n        if (!reRet[3]) {\r\n            break;\r\n        }\r\n        workStr = reRet[3];\r\n    }\r\n    return resultArr;\r\n}\r\n\r\nfunction analyzeFormulaStrSub(\r\n    formulaStr: string,\r\n    opt_defaultItem: string | null = null\r\n) {\r\n    const resultArr = [] as any;\r\n    if (isNumber(formulaStr)) {\r\n        resultArr.push(Number(formulaStr));\r\n    } else {\r\n        const strArr = (formulaStr as string).split('%');\r\n        if (strArr.length == 1) {\r\n            resultArr.push(strArr[0]);\r\n        } else {\r\n            resultArr.push(Number(strArr[0]) / 100);\r\n            resultArr.push('*');\r\n            if (strArr[1].length > 0) {\r\n                resultArr.push(strArr[1]);\r\n            } else if (opt_defaultItem != null) {\r\n                resultArr.push(opt_defaultItem);\r\n            }\r\n        }\r\n    }\r\n    return resultArr;\r\n}\r\n\r\nexport function makeSharedata(savedata: TAnyObject) {\r\n    const sharedataArr = [] as any[];\r\n\r\n    let character: TCharacterKey;\r\n    let weaponType: TWeaponTypeKey;\r\n\r\n    キャラクター構成PROPERTY_MAP.forEach((value, key) => {\r\n        let newValue = savedata[key];\r\n        let myBasename;\r\n        switch (key) {\r\n            case 'キャラクター':\r\n                character = newValue as TCharacterKey;\r\n                myBasename = basename(CHARACTER_MASTER[character]['import']);\r\n                newValue = myBasename.split('_')[myBasename.split('_').length - 1];\r\n                break;\r\n            case '武器':\r\n                weaponType = CHARACTER_MASTER[character]['武器'] as TWeaponTypeKey;\r\n                myBasename = basename((WEAPON_MASTER as any)[weaponType][newValue]['import']);\r\n                newValue = myBasename.split('_')[myBasename.split('_').length - 1];\r\n                break;\r\n            case '聖遺物セット効果1':\r\n            case '聖遺物セット効果2':\r\n                if (newValue == 'NONE') {\r\n                    newValue = '';  // 聖遺物セット効果なし\r\n                } else {\r\n                    myBasename = basename(ARTIFACT_SET_MASTER[newValue as TArtifactSetKey]['image']);\r\n                    newValue = myBasename.split('_')[myBasename.split('_').length - 1];\r\n                }\r\n                break;\r\n            case '聖遺物メイン効果1':\r\n            case '聖遺物メイン効果2':\r\n            case '聖遺物メイン効果3':\r\n            case '聖遺物メイン効果4':\r\n            case '聖遺物メイン効果5':\r\n                if (newValue) {\r\n                    newValue = newValue.split('_')[0] + '_' + ARTIFACT_STAT_JA_EN_ABBREV_MAP.get(newValue.split('_')[1]);\r\n                }\r\n                break;\r\n            case '聖遺物優先するサブ効果1':\r\n            case '聖遺物優先するサブ効果2':\r\n            case '聖遺物優先するサブ効果3':\r\n                if (newValue) {\r\n                    newValue = ARTIFACT_STAT_JA_EN_ABBREV_MAP.get(newValue);\r\n                }\r\n                break;\r\n        }\r\n        sharedataArr.push(newValue);\r\n    });\r\n    Object.keys(savedata).forEach(key => {\r\n        if (!キャラクター構成PROPERTY_MAP.has(key)) {\r\n            sharedataArr.push(key + '=' + savedata[key]);\r\n        }\r\n    });\r\n\r\n    return sharedataArr.join(',');\r\n}\r\n\r\nfunction openTwitter(text: string, url: string, opt_hashtags?: string, opt_via?: string) {\r\n    const baseUrl = 'https://twitter.com/intent/tweet?';\r\n    const params = new URLSearchParams();\r\n    params.append('text', text);\r\n    params.append('url', url);\r\n    if (opt_hashtags) {\r\n        params.append('hashtags', opt_hashtags);\r\n    }\r\n    if (opt_via) {\r\n        params.append('via', opt_via);\r\n    }\r\n    const query = params.toString();\r\n    const shareUrl = `${baseUrl}${query}`;\r\n    console.log(params);\r\n    console.log(shareUrl);\r\n    window.open(shareUrl);\r\n}\r\n\r\nexport function shareByTwitter(\r\n    characterInput: TCharacterInput,\r\n    artifactDetailInput: TArtifactDetailInput,\r\n    conditionInput: TConditionInput\r\n) {\r\n    const savedata = makeSavedata(characterInput, artifactDetailInput, conditionInput);\r\n    const sharedata = makeSharedata(savedata);\r\n\r\n    const text = characterInput.buildname;\r\n    const encoded = encodeURI(sharedata);\r\n    const url = 'https://asagume.github.io/gencalc/' + '?allin=' + encoded;\r\n\r\n    openTwitter(text, url);\r\n}\r\n\r\nexport function getMaxConstellation(characterMaster: TCharacterDetail) {\r\n    let max = 0;\r\n    if ('命ノ星座' in characterMaster) {\r\n        max = Object.keys(characterMaster.命ノ星座).length;\r\n    }\r\n    return max;\r\n}\r\n\r\nexport function getMaxTalentLevel(characterMaster: TCharacterDetail, key: string) {\r\n    let max = 10;\r\n    if (key in characterMaster) {\r\n        const talentObj = (characterMaster as any)[key];\r\n        if (\"詳細\" in talentObj) {\r\n            for (const detailObj of talentObj.詳細) {\r\n                if (\"数値\" in detailObj && _.isPlainObject(detailObj.数値)) {\r\n                    const work = Object.keys(detailObj.数値).length;\r\n                    if (max < work) max = work;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return max;\r\n}\r\n\r\nexport function pushBuildinfoToSession(character: TCharacterKey | string, buildname?: string, builddata?: any, teammembers?: string[]) {\r\n    sessionStorage.setItem('character', character);\r\n    if (buildname) {\r\n        sessionStorage.setItem('buildname', buildname);\r\n    }\r\n    if (builddata) {\r\n        sessionStorage.setItem('builddata', JSON.stringify(builddata));\r\n    }\r\n    if (teammembers) {\r\n        sessionStorage.setItem('teammembers', JSON.stringify(teammembers));\r\n    }\r\n}\r\n\r\nexport function popBuildinfoFromSession() {\r\n    const result: [string | undefined, string | undefined, TAnyObject | undefined, string[] | undefined] = [undefined, undefined, undefined, undefined];\r\n    const character = sessionStorage.getItem('character');\r\n    if (character) {\r\n        result[0] = character;\r\n        const buildname = sessionStorage.getItem('buildname');\r\n        if (buildname) {\r\n            result[1] = buildname;\r\n        }\r\n        const builddata = sessionStorage.getItem('builddata');\r\n        if (builddata) {\r\n            result[2] = JSON.parse(builddata);\r\n        }\r\n        const teammembers = sessionStorage.getItem('teammembers');\r\n        if (teammembers) {\r\n            result[3] = JSON.parse(teammembers);\r\n        }\r\n        console.log(character, buildname, builddata, teammembers);\r\n    }\r\n    sessionStorage.removeItem('character');\r\n    sessionStorage.removeItem('builddata');\r\n    sessionStorage.removeItem('buildname');\r\n    sessionStorage.removeItem('teammembers');\r\n    return result;\r\n}\r\n","import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-fd4684ea\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"artifact\" }\nconst _hoisted_2 = { class: \"artifact\" }\nconst _hoisted_3 = { class: \"with-tooltip\" }\nconst _hoisted_4 = [\"src\", \"alt\"]\nconst _hoisted_5 = { class: \"tooltip\" }\nconst _hoisted_6 = { class: \"artifact-substat\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"table\", _hoisted_2, [\n      _createElementVNode(\"tr\", null, [\n        _createElementVNode(\"td\", null, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createElementVNode(\"img\", {\n              class: \"artifact-icon\",\n              src: _ctx.artifactImgSrc,\n              alt: _ctx.displayName(_ctx.artifact.name)\n            }, null, 8, _hoisted_4),\n            _createElementVNode(\"div\", _hoisted_5, _toDisplayString(_ctx.displayName(_ctx.artifact.name)), 1)\n          ]),\n          _createTextVNode(\" \" + _toDisplayString(_ctx.displayName(_ctx.artifact.mainStat).replace(/%$/, '') + '+' + _ctx.displayStatValue(_ctx.artifact.mainStat,\r\n              _ctx.artifact.mainStatValue)), 1)\n        ]),\n        _createElementVNode(\"td\", null, [\n          _createElementVNode(\"table\", _hoisted_6, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.artifact.subStats, (subStat, index) => {\n              return (_openBlock(), _createElementBlock(\"tr\", { key: index }, [\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.displayName(subStat.name).replace(/%$/, '') + '+' + _ctx.displayStatValue(subStat.name, subStat.value)), 1)\n              ]))\n            }), 128))\n          ])\n        ])\n      ])\n    ])\n  ]))\n}","\r\nimport { TArtifact } from \"@/input\";\r\nimport { getArtifactIconUrl } from \"@/master\";\r\nimport { computed, defineComponent, PropType } from \"vue\";\r\nimport CompositionFunction from \"./CompositionFunction.vue\";\r\n\r\nexport default defineComponent({\r\n  name: 'ArtifactItem',\r\n  props: {\r\n    artifact: { type: Object as PropType<TArtifact>, required: true, },\r\n    editable: { type: Boolean },\r\n  },\r\n  setup(props) {\r\n    const { displayName, displayStatValue } = CompositionFunction();\r\n\r\n    const artifactImgSrc = computed(() => {\r\n      return getArtifactIconUrl(props.artifact.setname, props.artifact.cat_id);\r\n    });\r\n\r\n    return {\r\n      displayName, displayStatValue,\r\n\r\n      artifactImgSrc,\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./ArtifactItem.vue?vue&type=template&id=fd4684ea&scoped=true&ts=true\"\nimport script from \"./ArtifactItem.vue?vue&type=script&lang=ts\"\nexport * from \"./ArtifactItem.vue?vue&type=script&lang=ts\"\n\nimport \"./ArtifactItem.vue?vue&type=style&index=0&id=fd4684ea&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\Github\\\\gencalc\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fd4684ea\"]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, createElementVNode as _createElementVNode, withDirectives as _withDirectives, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, vShow as _vShow, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6b0e72ca\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = { class: \"select-list\" }\nconst _hoisted_3 = [\"onUpdate:modelValue\", \"onChange\"]\nconst _hoisted_4 = [\"src\", \"alt\"]\nconst _hoisted_5 = { class: \"select-list\" }\nconst _hoisted_6 = [\"onUpdate:modelValue\", \"onChange\"]\nconst _hoisted_7 = [\"src\", \"alt\"]\nconst _hoisted_8 = { class: \"select-list\" }\nconst _hoisted_9 = [\"src\", \"alt\", \"onClick\"]\nconst _hoisted_10 = { class: \"tooltip\" }\nconst _hoisted_11 = [\"src\", \"alt\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_ctx.visible)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"ul\", _hoisted_2, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.elementList, (item) => {\n            return (_openBlock(), _createElementBlock(\"li\", { key: item }, [\n              _createElementVNode(\"label\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  class: \"hidden\",\n                  type: \"checkbox\",\n                  \"onUpdate:modelValue\": ($event: any) => ((_ctx.elementCheckList[item]) = $event),\n                  onChange: ($event: any) => (_ctx.checkListOnChange(item, _ctx.elementCheckList))\n                }, null, 40, _hoisted_3), [\n                  [_vModelCheckbox, _ctx.elementCheckList[item]]\n                ]),\n                _createElementVNode(\"img\", {\n                  class: \"filter\",\n                  src: _ctx.elementSrc(item),\n                  alt: item\n                }, null, 8, _hoisted_4)\n              ])\n            ]))\n          }), 128))\n        ]),\n        _createElementVNode(\"ul\", _hoisted_5, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.weaponList, (item) => {\n            return (_openBlock(), _createElementBlock(\"li\", { key: item }, [\n              _createElementVNode(\"label\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  class: \"hidden\",\n                  type: \"checkbox\",\n                  \"onUpdate:modelValue\": ($event: any) => ((_ctx.weaponCheckList[item]) = $event),\n                  onChange: ($event: any) => (_ctx.checkListOnChange(item, _ctx.weaponCheckList))\n                }, null, 40, _hoisted_6), [\n                  [_vModelCheckbox, _ctx.weaponCheckList[item]]\n                ]),\n                _createElementVNode(\"img\", {\n                  class: \"filter\",\n                  src: _ctx.weaponSrc(item),\n                  alt: item\n                }, null, 8, _hoisted_7)\n              ])\n            ]))\n          }), 128))\n        ]),\n        _createElementVNode(\"ul\", _hoisted_8, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filteredList, (item) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              class: \"with-tooltip\",\n              key: item.key\n            }, [\n              _createElementVNode(\"img\", {\n                class: _normalizeClass('character' + _ctx.bgImageClass(item) + _ctx.selectedClass(item)),\n                src: item.icon_url,\n                alt: item.key,\n                onClick: ($event: any) => (_ctx.characterOnClick(item.key))\n              }, null, 10, _hoisted_9),\n              _createElementVNode(\"div\", _hoisted_10, _toDisplayString(_ctx.displayName(item.key)), 1),\n              _createElementVNode(\"img\", {\n                class: \"vision\",\n                src: _ctx.visionSrc(item),\n                alt: item.元素\n              }, null, 8, _hoisted_11),\n              _withDirectives(_createElementVNode(\"div\", { class: \"selection-number\" }, _toDisplayString(_ctx.selectionNumber(item.key)), 513), [\n                [_vShow, _ctx.selectionNumber(item.key)]\n              ])\n            ]))\n          }), 128))\n        ])\n      ]))\n    : _createCommentVNode(\"\", true)\n}","\r\nimport {\r\n  TCharacterEntry,\r\n  ELEMENT_IMG_SRC,\r\n  TVisionKey,\r\n  WEAPON_IMG_SRC,\r\n  TWeaponTypeKey,\r\n  CHARACTER_MASTER_LIST,\r\n  STAR_BACKGROUND_IMAGE_CLASS,\r\n} from \"@/master\";\r\nimport { defineComponent, reactive, computed, PropType } from \"vue\";\r\nimport CompositionFunction from \"./CompositionFunction.vue\";\r\n\r\ninterface ICheckList {\r\n  [key: string]: boolean;\r\n}\r\n\r\nexport default defineComponent({\r\n  name: \"CharacterSelect\",\r\n  props: {\r\n    character: { type: String },\r\n    characters: { type: Array as PropType<string[]> },\r\n    visible: { type: Boolean, required: true },\r\n  },\r\n  emits: [\"update:character\", \"update:characters\"],\r\n  setup(props, context) {\r\n    const { displayName } = CompositionFunction();\r\n\r\n    const visionSrc = (item: TCharacterEntry) => ELEMENT_IMG_SRC[item.元素];\r\n    const bgImageClass = (item: TCharacterEntry) =>\r\n      (\" \" + STAR_BACKGROUND_IMAGE_CLASS[item.レアリティ]) as string;\r\n    const selectedClass = (item: TCharacterEntry) => {\r\n      if (props.character && props.character == item.key) {\r\n        return \" selected\";\r\n      }\r\n      if (props.characters && props.characters.includes(item.key)) {\r\n        return \" selected\";\r\n      }\r\n      return \"\";\r\n    };\r\n\r\n    const elementList = Object.keys(ELEMENT_IMG_SRC) as TVisionKey[];\r\n    const elementSrc = (element: TVisionKey) => ELEMENT_IMG_SRC[element] as string;\r\n    const elementCheckList = reactive({}) as ICheckList;\r\n    for (let key of elementList) {\r\n      elementCheckList[key] = false;\r\n    }\r\n\r\n    const weaponList = Object.keys(WEAPON_IMG_SRC) as TWeaponTypeKey[];\r\n    const weaponSrc = (weapon: TWeaponTypeKey) => WEAPON_IMG_SRC[weapon] as string;\r\n    const weaponCheckList = reactive({}) as ICheckList;\r\n    for (let key of weaponList) {\r\n      weaponCheckList[key] = false;\r\n    }\r\n\r\n    const checkListOnChange = function (item: string, checkList: ICheckList) {\r\n      if (!checkList[item]) return;\r\n      Object.keys(checkList)\r\n        .filter((s) => s != item)\r\n        .forEach((key) => {\r\n          checkList[key] = false;\r\n        });\r\n    };\r\n\r\n    const filteredList = computed(() => {\r\n      const result = [];\r\n      const elementChecked =\r\n        Object.keys(elementCheckList).filter((s) => elementCheckList[s]).length > 0;\r\n      const weaponChecked =\r\n        Object.keys(weaponCheckList).filter((s) => weaponCheckList[s]).length > 0;\r\n      for (let entry of CHARACTER_MASTER_LIST as TCharacterEntry[]) {\r\n        if (elementChecked && !elementCheckList[entry.元素]) continue;\r\n        if (weaponChecked && !weaponCheckList[entry.武器]) continue;\r\n        result.push(entry);\r\n      }\r\n      return result;\r\n    });\r\n\r\n    const selectionNumber = (character: string) => {\r\n      let result = \"\";\r\n      if (props.characters) {\r\n        const index = props.characters.indexOf(character);\r\n        if (index != -1) {\r\n          result = String(index + 1);\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n\r\n    const characterOnClick = (character: string) => {\r\n      if (props.character) {\r\n        context.emit(\"update:character\", character);\r\n      }\r\n      if (props.characters) {\r\n        const characters: string[] = props.characters.map((s) => s);\r\n        const index = props.characters.indexOf(character);\r\n        if (index != -1) {\r\n          characters[index] = \"\";\r\n        } else {\r\n          const blankIndex = props.characters.indexOf(\"\");\r\n          if (blankIndex != -1) {\r\n            characters[blankIndex] = character;\r\n          }\r\n        }\r\n        context.emit(\"update:characters\", characters);\r\n      }\r\n    };\r\n\r\n    return {\r\n      displayName,\r\n\r\n      visionSrc,\r\n      bgImageClass,\r\n      selectedClass,\r\n      elementList,\r\n      elementSrc,\r\n      elementCheckList,\r\n      weaponList,\r\n      weaponSrc,\r\n      weaponCheckList,\r\n      checkListOnChange,\r\n      filteredList,\r\n\r\n      selectionNumber,\r\n      characterOnClick,\r\n    };\r\n  },\r\n});\r\n","import { render } from \"./CharacterSelect.vue?vue&type=template&id=6b0e72ca&scoped=true&ts=true\"\nimport script from \"./CharacterSelect.vue?vue&type=script&lang=ts\"\nexport * from \"./CharacterSelect.vue?vue&type=script&lang=ts\"\n\nimport \"./CharacterSelect.vue?vue&type=style&index=0&id=6b0e72ca&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\Github\\\\gencalc\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6b0e72ca\"]])\n\nexport default __exports__","\r\nimport i18n from \"@/i18n\";\r\nimport { STAT_PERCENT_LIST } from \"@/input\";\r\nimport { nextTick } from \"vue\";\r\nimport { useI18n } from \"vue-i18n\";\r\n\r\nexport default function CompositionFunction() {\r\n    const { t, te } = useI18n({\r\n        useScope: \"global\",\r\n    });\r\n\r\n    const localeList = [\r\n        { name: \"日本語\", value: \"ja-jp\" },\r\n        { name: \"English\", value: \"en-us\" },\r\n        { name: \"简体中文\", value: \"zh-cn\" },\r\n        { name: \"繁體中文\", value: \"zh-tw\" },\r\n        { name: \"한국어\", value: \"ko-kr\" },\r\n        { name: \"Deutsch\", value: \"de-de\" },\r\n        { name: \"Español\", value: \"es-es\" },\r\n        { name: \"Français\", value: \"fr-fr\" },\r\n        { name: \"Indonesia\", value: \"id-id\" },\r\n        { name: \"Português\", value: \"pt-pt\" },\r\n        { name: \"Pусский\", value: \"ru-ru\" },\r\n        { name: 'ภาษาไทย', value: 'th-th' },\r\n        { name: \"Tiếng Việt\", value: \"vi-vn\" },\r\n    ];\r\n\r\n    const setI18nLanguage = function (locale: string) {\r\n        i18n.global.locale.value = locale;\r\n        loadLocaleMessages(locale);\r\n        document.querySelector('html')?.setAttribute('lang', locale)\r\n    }\r\n\r\n    const loadLocaleMessages = async function (locale: string) {\r\n        if (locale != 'ja-jp') {\r\n            const messages = await fetch(`./locales/${locale}.json`).then(resp => resp.json());\r\n            i18n.global.setLocaleMessage(locale, messages);\r\n        }\r\n        return nextTick();\r\n    }\r\n\r\n    const displayName = function (key: any): string {\r\n        if (!key) return key;\r\n        if (i18n.global.locale.value === 'ja-jp') { // 日本語はtranslateしません\r\n            let result = String(key);\r\n            if (['ダメージバフ', 'ダメージアップ', '反応ボーナス', '敵'].includes(result)) {\r\n                return result;\r\n            }\r\n            result = result.replace(/ダメージバフ$/, 'ダメージ');\r\n            result = result.replace(/ダメージアップ$/, 'ダメージ');\r\n            result = result.replace('凍結反応ボーナス', '凍結反応の継続時間');\r\n            result = result.replace(/反応ボーナス$/, '反応ダメージ');\r\n            result = result.replace(/^敵/, '敵の');\r\n            return result;\r\n        }\r\n        if (te(key)) return t(key);\r\n        const re = new RegExp('(.*?)([\\\\s_\\\\(\\\\)/]+)(.*)');\r\n        let result = '';\r\n        let work = key;\r\n        while (work) {\r\n            const reRet = re.exec(work);\r\n            if (!reRet) {\r\n                result += t(work);\r\n                break;\r\n            }\r\n            if (reRet[1]) result += t(reRet[1]);\r\n            result += reRet[2];\r\n            work = reRet[3];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const percent = function (stat: string) {\r\n        const tempArr = stat.split('.');\r\n        let work = tempArr[0].replace(/V[1-3]$/, '');\r\n        let hasPercent = work.endsWith(\"%\") || STAT_PERCENT_LIST.includes(work);\r\n        if (!hasPercent) {\r\n            ['会心率', '会心ダメージ', 'クールタイム', '攻撃速度'].forEach(postfix => {\r\n                if (work.endsWith(postfix)) hasPercent = true;\r\n            })\r\n        }\r\n        return hasPercent ? '%' : '';\r\n    }\r\n\r\n    const displayStatName = function (stat: string) {\r\n        let result = stat.replace(/V[1-3]$/, '');\r\n        const tempArr = result.split('.');\r\n        if (tempArr.length == 1) {\r\n            result = displayName(result);\r\n            result = result.replace('ダメージ会心', 'ダメージの会心')\r\n        } else if (i18n.global.locale.value === 'ja-jp') {\r\n            result = tempArr[tempArr.length - 1] + 'の' + displayName(tempArr[0]);\r\n        } else {\r\n            result = displayName(tempArr[tempArr.length - 1]) + ' ' + displayName(tempArr[0]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const displayStatValue = function (stat: string, value: number, opt_s?: number): string {\r\n        const myPercent = percent(stat);\r\n        let p = myPercent ? 10 : 1;\r\n        if (opt_s) p = Math.pow(10, opt_s);\r\n        return String(Math.round(value * p) / p) + myPercent;\r\n    }\r\n\r\n    const displayStatAbbrev = function (stat: string) {\r\n        let result = stat;\r\n        const tempArr = stat.split('.');\r\n        if (tempArr.length == 1) {\r\n            stat = stat.replace(/V\\d$/, '');\r\n            stat = stat.replace(/TOP$/, '');\r\n            if (stat.startsWith('敵')) stat = stat.replace(/^敵/, '');\r\n            if (stat.endsWith('ダメージバフ')) stat = stat.replace(/ダメージバフ$/, '');\r\n            else if (stat.endsWith('ダメージアップ')) stat = stat.replace(/ダメージアップ$/, '');\r\n            else if (stat.endsWith('元素ダメージ')) stat = stat.replace(/元素ダメージ$/, '');\r\n            else if (stat.endsWith('物理ダメージ')) stat = stat.replace(/ダメージ$/, '');\r\n            else if (stat.endsWith('反応ボーナス')) stat = stat.replace(/反応ボーナス$/, '');\r\n            else if (stat.endsWith('耐性')) stat = stat.replace(/耐性$/, '');\r\n            result = displayName(stat);\r\n        } else {\r\n            result = displayStatName(stat);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /** $event.target.valueでのtypescriptエラー回避のために */\r\n    const targetValue = function (event: Event) {\r\n        if (event.target instanceof HTMLInputElement) return event.target.value;\r\n        if (event.target instanceof HTMLSelectElement) return event.target.value;\r\n        return undefined;\r\n    }\r\n\r\n    const displayOptionName = function (name: string) {\r\n        return displayName(name.replace(/^required_/, \"\"));\r\n    }\r\n\r\n    return {\r\n        localeList,\r\n        setI18nLanguage,\r\n        loadLocaleMessages,\r\n        displayName,\r\n        displayStatName,\r\n        displayStatValue,\r\n        displayStatAbbrev,\r\n        targetValue,\r\n        displayOptionName,\r\n        percent,\r\n    }\r\n}\r\n","import script from \"./CompositionFunction.vue?vue&type=script&lang=ts\"\nexport * from \"./CompositionFunction.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["isNumber","value","isFinite","overwriteObject","dst","src","_","srcKeys","Object","keys","key","includes","basename","path","split","pop","shift","i18n","createI18n","legacy","locale","fallbackLocale","isGlobal","基礎ステータスARRAY","基本ステータスARRAY","高級ステータスARRAY","元素ステータス_ダメージARRAY","元素ステータス_耐性ARRAY","ダメージバフARRAY","実数ダメージ加算ARRAY","元素反応バフARRAY","ステータスその他ARRAY","ステータス連動ARRAY","ステータスチーム内最高ARRAY","敵ステータス_元素耐性ARRAY","敵ステータス_その他ARRAY","ステータスARRAY_MAP","Map","STAT_PERCENT_LIST","makeStatusTenmplate","statsObj","forEach","stat","ステータスTEMPLATE","makeEnemyStatusTemplate","聖遺物メイン効果_生の花ARRAY","聖遺物メイン効果_死の羽ARRAY","聖遺物メイン効果_時の砂ARRAY","聖遺物メイン効果_空の杯ARRAY","聖遺物メイン効果_理の冠ARRAY","聖遺物サブ効果ARRAY","聖遺物優先するサブ効果ARRAY","聖遺物ステータスTEMPLATE","元素反応TEMPLATE","元素","蒸発倍率","溶解倍率","過負荷ダメージ","感電ダメージ","超電導ダメージ","拡散ダメージ","拡散元素","結晶吸収量","燃焼ダメージ","開花ダメージ","烈開花ダメージ","超開花ダメージ","超激化ダメージ","草激化ダメージ","燃焼ダメージ会心率","燃焼ダメージ会心ダメージ","開花ダメージ会心率","開花ダメージ会心ダメージ","烈開花ダメージ会心率","烈開花ダメージ会心ダメージ","超開花ダメージ会心率","超開花ダメージ会心ダメージ","DAMAGE_RESULT_TEMPLATE","元素反応","通常攻撃","重撃","落下攻撃","元素スキル","元素爆発","その他","キャラクター注釈","突破レベルレベルARRAY","Array","from","length","i","ARTIFACT_SET_MASTER_DUMMY","レアリティ","image","IMG_SRC_DUMMY","CHARACTER_INPUT_TEMPLATE","character","characterMaster","突破レベル","レベル","命ノ星座","通常攻撃レベル","元素スキルレベル","元素爆発レベル","weapon","weaponMaster","武器突破レベル","武器レベル","武器精錬ランク","artifactSets","artifactSetMasters","damageDetailMyCharacter","damageDetailMyWeapon","damageDetailMyArtifactSets","damageDetailElementalResonance","buildname","recommendationSelectedIndex","saveDisabled","removeDisabled","ARTIFACT_DETAIL_INPUT_TEMPLATE","聖遺物メイン効果","聖遺物優先するサブ効果","聖遺物優先するサブ効果上昇値","GENSEN_MASTER_LIST","聖遺物優先するサブ効果上昇回数","聖遺物ステータス","聖遺物ステータスメイン効果","聖遺物ステータスサブ効果","聖遺物優先するサブ効果Disabled","artifact_list","CONDITION_INPUT_TEMPLATE","checkboxList","selectList","numberList","conditionValues","conditionAdjustments","攻撃元素","STATS_INPUT_TEMPLATE","statAdjustments","statAdjustmentsEx","enemyMaster","ENEMY_MASTER_LIST","SUPPORTER_INPUT_TEMPLATE","characterInput","artifactDetailInput","conditionInput","statsInput","damageResult","OPTION_INPUT_TEMPLATE","elementalResonance","supporterBuildname","supporters","teamMembers","teamOption","miscOption","parseLevelStr","levelStr","result","level","Number","String","replace","ascension","endsWith","Math","max","error","console","makeDefaultBuildname","makeBuildStorageKey","makeOptionStorageKey","makeArtifactScoringStorageKey","makeRecommendationList","opt_buildData","isSavable","push","name","build","overwrite","log","storageKeyArr","localStorage","startsWith","sort","re","RegExp","buildObj","JSON","parse","key2","optionsObj","options","key3","artifactScoringObj","artifactScoring","key4","supporterBuildnameObj","obj","myRecommendation","artifactRarerityArrArr","artifactRarerity4Num","artifactSet1","artifactSet2","ARTIFACT_SET_MASTER","makeArtifactSetAbbrev","statusName","RECOMMEND_ABBREV_MAP","substring","abbrRe","abbr","a","b","makePrioritySubstatValueList","prioritySubstats","index","opt_substat","ARTIFACT_SUB_MASTER","valueArr","diff","makeEasyInputSubstatValueList","substat","async","loadRecommendation","optionInput","getCharacterMasterDetail","artifactStatsSub","weaponType","WEAPON_MASTER","filter","s","getWeaponMasterDetail","prioritySubstatsDisabled","toKey","artifactSet","mainstat","doUpdate","substatValue","prioritySubstatValueList","v","substatCount","キャラクター構成PROPERTY_MAP","ELEMENTAL_RESONANCE_MASTER","astarIndex","indexOf","workCharacter","CHARACTER_MASTER","splice","debug","makeSavedata","resultObj","entry","makeOptionsSavedata","CHANGE_KIND_STATUS","CHANGE_KIND_TALENT","makeDamageDetailObjArrObjCharacter","myTalentDetail","myTalentLevel","myDefaultKind","myDefaultElement","myInputCategory","myStatusChangeDetailObjArr","myTalentChangeDetailObjArr","category","makeDamageDetailObjArr","workCategory","workObj","条件","詳細","workArr","cond","名前","種類","数値","対象","上限","HIT数","ダメージバフ","元素付与無効","除外条件","適用条件","拡散","conditionMap","exclusionMap","detailObj","makeConditionExclusionMapFromStr","isArray","set","makeDamageDetailObjArrObjWeapon","myLevel","condition","makeDamageDetailObjArrObjArtifactSets","damageDetailObjArr","makeDamageDetailObjArrObjElementalResonance","ELEMENTAL_RESONANCE_MASTER_LIST","makeDetailObj","defaultKind","defaultElement","inputCategory","opt_condition","my種類","my対象","my数値","DAMAGE_CATEGORY_ARRAY","analyzeFormulaStr","my条件","my上限","my下限","下限","getChangeKind","kind","exec","talentDataObj","statusChangeDetailObjArr","talentChangeDetailObjArr","resultArr","makeTeamOptionDetailObjArr","detailObjArr","conditionStr","exclusionCond","myCondStrArr","myCondStr","makeConditionExclusionMapFromStrSub","NUMBER_CONDITION_VALUE_RE","exclusion","myName","pushToMapValueArray","test","conditionObj","min","step","reRet","prefix","condValueArr","postfix","re2","rangeStart","rangeEnd","re2Ret","addDecimal","e","setupConditionValues","masters","master","myDamageDetail","排他","required","exclusions","get","conditionValue","minValue","checked","arr","selectedIndex","getStatValue","n","vStat","trunc","undefined","updateNumberConditionValues","numberEntryArr","maxValue","map","has","oldValue","getDecimalLength","multiplyDecimal","value1","value2","decimalLength","intValue1","intValue2","pow","opt_max","k","formulaStr","opt_defaultItem","workStr","analyzeFormulaStrSub","strArr","makeSharedata","savedata","sharedataArr","myBasename","newValue","ARTIFACT_STAT_JA_EN_ABBREV_MAP","join","openTwitter","text","url","opt_hashtags","opt_via","baseUrl","params","URLSearchParams","append","query","toString","shareUrl","window","open","shareByTwitter","sharedata","encoded","encodeURI","getMaxConstellation","getMaxTalentLevel","talentObj","work","pushBuildinfoToSession","builddata","teammembers","sessionStorage","setItem","stringify","popBuildinfoFromSession","getItem","removeItem","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_createElementVNode","artifactImgSrc","alt","displayName","artifact","_toDisplayString","_createTextVNode","mainStat","displayStatValue","mainStatValue","_Fragment","_renderList","subStats","subStat","defineComponent","props","type","editable","Boolean","setup","CompositionFunction","computed","getArtifactIconUrl","setname","cat_id","__exports__","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","visible","elementList","item","_withDirectives","$event","elementCheckList","onChange","checkListOnChange","_vModelCheckbox","elementSrc","weaponList","weaponCheckList","weaponSrc","filteredList","_normalizeClass","bgImageClass","selectedClass","icon_url","onClick","characterOnClick","visionSrc","selectionNumber","_vShow","_createCommentVNode","characters","emits","context","ELEMENT_IMG_SRC","STAR_BACKGROUND_IMAGE_CLASS","element","reactive","WEAPON_IMG_SRC","checkList","elementChecked","weaponChecked","CHARACTER_MASTER_LIST","武器","emit","blankIndex","t","te","useI18n","useScope","localeList","setI18nLanguage","loadLocaleMessages","document","querySelector","setAttribute","messages","fetch","then","resp","json","nextTick","percent","tempArr","hasPercent","displayStatName","opt_s","myPercent","p","round","displayStatAbbrev","targetValue","event","target","HTMLInputElement","HTMLSelectElement","displayOptionName"],"sourceRoot":""}