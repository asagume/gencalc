{"version":3,"file":"js/chunk-common.dce89173.js","mappings":"4GAIM,SAAUA,EAASC,GACrB,OAAOC,SAASD,IAAmB,MAATA,CAC7B,CAMK,SAAUE,EAAcF,GAC1B,MAAMG,EAASC,OAAOC,UAAUC,SAASC,KAAKP,GAC9C,MAAkB,oBAAXG,CACV,CAGK,SAAUK,EAASR,GACrB,MAAMS,EAASC,KAAKC,MAAMD,KAAKE,UAAUZ,IACzC,OAAOS,CACV,CAEK,SAAUI,EAAgBC,EAAUC,GACtC,GAAIb,EAAca,IAAQb,EAAcY,GAAM,CAC1C,MAAME,EAAUZ,OAAOa,KAAKF,GAC5B,IAAK,MAAMG,KAAOF,EACdF,EAAII,GAAOH,EAAIG,GAEnB,IAAK,MAAMA,KAAOd,OAAOa,KAAKH,GACrBE,EAAQG,SAASD,WAAaJ,EAAII,EAE9C,CACD,OAAOJ,CACV,C,iIAGM,MAAMM,EAAYC,GAAiBA,EAAMC,MAAM,KAAMC,MAAOD,MAAM,KAAME,O,qCCnC/E,MAAMC,GAAOC,EAAAA,EAAAA,GAAW,CACtBC,QAAQ,EACRC,OAAQ,QACRC,eAAgB,QAChBC,UAAU,IAEZ,Q,84CCJO,MAAMC,EAAe,CACxB,OACA,QACA,SAESC,EAAe,CACxB,OACA,MACA,MACA,QAESC,EAAe,CACxB,MACA,SACA,UACA,UACA,WACA,WACA,UAESC,EAAoB,CAC7B,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YAESC,EAAkB,CAC3B,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QAESC,EAAc,CACvB,aACA,WACA,aACA,cACA,aACA,WAESC,EAAgB,CACzB,cACA,YACA,cACA,eACA,cACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aAESC,EAAc,CACvB,WACA,WACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,aAESC,EAAgB,CACzB,SACA,MACA,OACA,OACA,MACA,OACA,QAESC,EAAe,CACxB,SACA,QACA,QACA,SACA,QACA,WACA,YACA,YACA,cAESC,EAAmB,CAC5B,WAESC,EAAmB,CAC5B,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAESC,EAAkB,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","sources":["webpack://gencalc/./src/common.ts","webpack://gencalc/./src/i18n.ts","webpack://gencalc/./src/input.ts","webpack://gencalc/./src/components/CharacterSelect.vue?c946","webpack://gencalc/./src/components/CharacterSelect.vue?1f8b","webpack://gencalc/./src/components/CharacterSelect.vue","webpack://gencalc/./src/components/CompositionFunction.vue?c68d","webpack://gencalc/./src/components/CompositionFunction.vue"],"sourcesContent":["export function isString(value: any): boolean {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\n\r\nexport function isNumber(value: any): boolean {\r\n    return isFinite(value) && value != null;\r\n}\r\n\r\nexport function isBoolean(value: any): boolean {\r\n    return value === true || value === false;\r\n}\r\n\r\nexport function isPlainObject(value: any): boolean {\r\n    const myType = Object.prototype.toString.call(value);\r\n    return myType === '[object Object]';\r\n}\r\n\r\n/** 簡易なdeep copy。undefinedなどは消失します */\r\nexport function deepcopy(value: any): any {\r\n    const result = JSON.parse(JSON.stringify(value));\r\n    return result;\r\n}\r\n\r\nexport function overwriteObject(dst: any, src: any) {\r\n    if (isPlainObject(src) && isPlainObject(dst)) {\r\n        const srcKeys = Object.keys(src);\r\n        for (const key of srcKeys) {\r\n            dst[key] = src[key];\r\n        }\r\n        for (const key of Object.keys(dst)) {\r\n            if (!srcKeys.includes(key)) delete dst[key];\r\n        }\r\n    }\r\n    return dst;\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport const basename = (path: string) => path!.split('/')!.pop()!.split('.')!.shift()!;\r\n","import { createI18n } from 'vue-i18n'\r\n\r\nconst i18n = createI18n({\r\n  legacy: false,\r\n  locale: 'ja-jp',\r\n  fallbackLocale: 'en-us',\r\n  isGlobal: true,\r\n})\r\nexport default i18n;\r\n","import { ARTIFACT_SET_MASTER, ARTIFACT_STAT_JA_EN_ABBREV_MAP, ARTIFACT_SUB_MASTER, CHARACTER_MASTER, DAMAGE_CATEGORY_ARRAY, ELEMENTAL_RESONANCE_MASTER, ELEMENTAL_RESONANCE_MASTER_LIST, ENEMY_MASTER_LIST, GENSEN_MASTER_LIST, getCharacterMasterDetail, getWeaponMasterDetail, IMG_SRC_DUMMY, RECOMMEND_ABBREV_MAP, TAnyObject, TArtifactSet, TArtifactSetEntry, TArtifactSetKey, TArtifactSubKey, TCharacterDetail, TCharacterKey, TEnemyEntry, TWeaponDetail, TWeaponKey, TWeaponTypeKey, WEAPON_MASTER, キャラクター構成PROPERTY_MAP } from '@/master';\r\nimport _ from 'lodash';\r\nimport { basename, deepcopy, isNumber, overwriteObject } from './common';\r\n\r\nexport const 基礎ステータスARRAY = [\r\n    '基礎HP',\r\n    '基礎攻撃力',\r\n    '基礎防御力'\r\n];\r\nexport const 基本ステータスARRAY = [\r\n    'HP上限',\r\n    '攻撃力',\r\n    '防御力',\r\n    '元素熟知'\r\n];\r\nexport const 高級ステータスARRAY = [\r\n    '会心率',\r\n    '会心ダメージ',\r\n    '与える治療効果',\r\n    '受ける治療効果',\r\n    '元素チャージ効率',\r\n    'クールタイム短縮',\r\n    'シールド強化'\r\n];\r\nexport const 元素ステータス_ダメージARRAY = [\r\n    '炎元素ダメージバフ',\r\n    '水元素ダメージバフ',\r\n    '風元素ダメージバフ',\r\n    '雷元素ダメージバフ',\r\n    '草元素ダメージバフ',\r\n    '氷元素ダメージバフ',\r\n    '岩元素ダメージバフ',\r\n    '物理ダメージバフ'\r\n];\r\nexport const 元素ステータス_耐性ARRAY = [\r\n    '炎元素耐性',\r\n    '水元素耐性',\r\n    '風元素耐性',\r\n    '雷元素耐性',\r\n    '草元素耐性',\r\n    '氷元素耐性',\r\n    '岩元素耐性',\r\n    '物理耐性'\r\n];\r\nexport const ダメージバフARRAY = [\r\n    '通常攻撃ダメージバフ',\r\n    '重撃ダメージバフ',\r\n    '落下攻撃ダメージバフ',\r\n    '元素スキルダメージバフ',\r\n    '元素爆発ダメージバフ',\r\n    '与えるダメージ',\r\n];\r\nexport const 実数ダメージ加算ARRAY = [\r\n    '通常攻撃ダメージアップ',\r\n    '重撃ダメージアップ',\r\n    '落下攻撃ダメージアップ',\r\n    '元素スキルダメージアップ',\r\n    '元素爆発ダメージアップ',\r\n    '炎元素ダメージアップ',\r\n    '水元素ダメージアップ',\r\n    '風元素ダメージアップ',\r\n    '雷元素ダメージアップ',\r\n    '草元素ダメージアップ',\r\n    '氷元素ダメージアップ',\r\n    '岩元素ダメージアップ',\r\n    '物理ダメージアップ'\r\n];\r\nexport const 元素反応バフARRAY = [\r\n    '蒸発反応ボーナス',\r\n    '溶解反応ボーナス',\r\n    '過負荷反応ボーナス',\r\n    '感電反応ボーナス',\r\n    '凍結反応ボーナス',\r\n    '超電導反応ボーナス',\r\n    '拡散反応ボーナス',\r\n    '結晶反応ボーナス',\r\n    '燃焼反応ボーナス',\r\n    '開花反応ボーナス',\r\n    '烈開花反応ボーナス',\r\n    '超開花反応ボーナス',\r\n    '超激化反応ボーナス',\r\n    '草激化反応ボーナス',\r\n];\r\nexport const ステータスその他ARRAY = [\r\n    'ダメージ軽減',\r\n    'HP%',\r\n    '攻撃力%',\r\n    '防御力%',\r\n    'HP+',\r\n    '攻撃力+',\r\n    '防御力+',\r\n];\r\nexport const ステータス連動ARRAY = [\r\n    'HP上限V1',\r\n    '攻撃力V1',\r\n    '防御力V1',\r\n    '元素熟知V1',\r\n    '会心率V1',\r\n    '会心ダメージV1',\r\n    '与える治療効果V1',\r\n    '受ける治療効果V1',\r\n    '元素チャージ効率V1',\r\n];\r\nexport const ステータスチーム内最高ARRAY = [\r\n    '元素熟知TOP',\r\n];\r\nexport const 敵ステータス_元素耐性ARRAY = [\r\n    '敵炎元素耐性',\r\n    '敵水元素耐性',\r\n    '敵風元素耐性',\r\n    '敵雷元素耐性',\r\n    '敵草元素耐性',\r\n    '敵氷元素耐性',\r\n    '敵岩元素耐性',\r\n    '敵物理耐性'\r\n];\r\nexport const 敵ステータス_その他ARRAY = [\r\n    '敵防御力'\r\n];\r\n\r\nexport const ステータスARRAY_MAP = new Map([\r\n    ['基礎ステータス', 基礎ステータスARRAY],\r\n    ['基本ステータス', 基本ステータスARRAY],\r\n    ['高級ステータス', 高級ステータスARRAY],\r\n    ['元素ステータス·ダメージ', 元素ステータス_ダメージARRAY],\r\n    ['元素ステータス·耐性', 元素ステータス_耐性ARRAY],\r\n    ['ダメージバフ', ダメージバフARRAY],\r\n    ['実数ダメージ加算', 実数ダメージ加算ARRAY],\r\n    ['元素反応バフ', 元素反応バフARRAY],\r\n    ['その他', ステータスその他ARRAY],\r\n    ['ステータス連動', ステータス連動ARRAY],\r\n    ['チーム内最高値', ステータスチーム内最高ARRAY],\r\n    ['敵ステータス·元素耐性', 敵ステータス_元素耐性ARRAY],\r\n    ['敵ステータス·その他', 敵ステータス_その他ARRAY],\r\n]);\r\n\r\nexport const STAT_PERCENT_LIST = [\r\n    ...高級ステータスARRAY, ...元素ステータス_ダメージARRAY, ...元素ステータス_耐性ARRAY, ...ダメージバフARRAY, ...元素反応バフARRAY, ...敵ステータス_元素耐性ARRAY,\r\n    '別枠乗算', '敵防御力',\r\n];\r\n\r\nfunction makeStatusTenmplate() {\r\n    const statsObj = {} as { [key: string]: number };\r\n    ステータスARRAY_MAP.forEach((value) => {\r\n        value.forEach(stat => {\r\n            statsObj[stat] = 0;\r\n        });\r\n    });\r\n    statsObj['会心率'] = 5;\r\n    statsObj['会心ダメージ'] = 50;\r\n    statsObj['元素チャージ効率'] = 100;\r\n    statsObj['敵レベル'] = 0;\r\n    statsObj['敵防御力'] = 0;\r\n    return statsObj;\r\n}\r\nexport const ステータスTEMPLATE = makeStatusTenmplate();\r\nexport type TStats = {\r\n    [key: string]: number,\r\n};\r\n\r\nfunction makeEnemyStatusTemplate() {\r\n    const statsObj = {} as { [key: string]: number };\r\n    [元素ステータス_耐性ARRAY].forEach((value) => {\r\n        value.forEach(stat => {\r\n            statsObj[stat] = 0;\r\n        });\r\n    });\r\n    statsObj['防御力'] = 0;\r\n    return statsObj;\r\n}\r\nexport const 敵ステータスTEMPLATE = makeEnemyStatusTemplate();\r\n\r\nexport const 聖遺物メイン効果_生の花ARRAY = [\r\n    '5_HP', '4_HP'\r\n];\r\nexport const 聖遺物メイン効果_死の羽ARRAY = [\r\n    '5_攻撃力', '4_攻撃力'\r\n];\r\nexport const 聖遺物メイン効果_時の砂ARRAY = [\r\n    '5_元素チャージ効率',\r\n    '5_HP%',\r\n    '5_攻撃力%',\r\n    '5_防御力%',\r\n    '5_元素熟知',\r\n    '4_元素チャージ効率',\r\n    '4_HP%',\r\n    '4_攻撃力%',\r\n    '4_防御力%',\r\n    '4_元素熟知'\r\n];\r\nexport const 聖遺物メイン効果_空の杯ARRAY = [\r\n    '5_炎元素ダメージバフ',\r\n    '5_水元素ダメージバフ',\r\n    '5_風元素ダメージバフ',\r\n    '5_雷元素ダメージバフ',\r\n    '5_草元素ダメージバフ',\r\n    '5_氷元素ダメージバフ',\r\n    '5_岩元素ダメージバフ',\r\n    '5_物理ダメージバフ',\r\n    '5_HP%',\r\n    '5_攻撃力%',\r\n    '5_防御力%',\r\n    '5_元素熟知',\r\n    '4_炎元素ダメージバフ',\r\n    '4_水元素ダメージバフ',\r\n    '4_風元素ダメージバフ',\r\n    '4_雷元素ダメージバフ',\r\n    '4_草元素ダメージバフ',\r\n    '4_氷元素ダメージバフ',\r\n    '4_岩元素ダメージバフ',\r\n    '4_物理ダメージバフ',\r\n    '4_HP%',\r\n    '4_攻撃力%',\r\n    '4_防御力%',\r\n    '4_元素熟知'\r\n];\r\nexport const 聖遺物メイン効果_理の冠ARRAY = [\r\n    '5_会心率',\r\n    '5_会心ダメージ',\r\n    '5_HP%',\r\n    '5_攻撃力%',\r\n    '5_防御力%',\r\n    '5_元素熟知',\r\n    '5_与える治療効果',\r\n    '4_会心率',\r\n    '4_会心ダメージ',\r\n    '4_HP%',\r\n    '4_攻撃力%',\r\n    '4_防御力%',\r\n    '4_元素熟知',\r\n    '4_与える治療効果'\r\n];\r\n\r\nexport const 聖遺物サブ効果ARRAY = [\r\n    'HP',\r\n    '攻撃力',\r\n    '防御力',\r\n    '元素熟知',\r\n    '会心率',\r\n    '会心ダメージ',\r\n    '元素チャージ効率',\r\n    '攻撃力%',\r\n    'HP%',\r\n    '防御力%',\r\n];\r\nexport const 聖遺物優先するサブ効果ARRAY = [\r\n    '攻撃力%',\r\n    'HP%',\r\n    '防御力%',\r\n    '元素熟知',\r\n    '会心率',\r\n    '会心ダメージ',\r\n    '元素チャージ効率',\r\n];\r\n\r\nexport const 聖遺物ステータスTEMPLATE = {\r\n    'HP': 0,\r\n    '攻撃力': 0,\r\n    '防御力': 0,\r\n    '元素熟知': 0,\r\n    '会心率': 0,\r\n    '会心ダメージ': 0,\r\n    '元素チャージ効率': 0,\r\n    'HP%': 0,\r\n    '攻撃力%': 0,\r\n    '防御力%': 0,\r\n    '炎元素ダメージバフ': 0,\r\n    '水元素ダメージバフ': 0,\r\n    '風元素ダメージバフ': 0,\r\n    '雷元素ダメージバフ': 0,\r\n    '草元素ダメージバフ': 0,\r\n    '氷元素ダメージバフ': 0,\r\n    '岩元素ダメージバフ': 0,\r\n    '物理ダメージバフ': 0,\r\n    '与える治療効果': 0,\r\n};\r\n\r\nexport const 元素反応TEMPLATE = {\r\n    元素: '炎',\r\n    蒸発倍率: 0,\r\n    溶解倍率: 0,\r\n    過負荷ダメージ: 0,\r\n    感電ダメージ: 0,\r\n    超電導ダメージ: 0,\r\n    拡散ダメージ: 0,\r\n    拡散元素: '炎',\r\n    結晶吸収量: 0,\r\n    燃焼ダメージ: 0,\r\n    開花ダメージ: 0,\r\n    烈開花ダメージ: 0,\r\n    超開花ダメージ: 0,\r\n    超激化ダメージ: 0,\r\n    草激化ダメージ: 0,\r\n    燃焼ダメージ会心率: 0,          // for ナヒーダ\r\n    燃焼ダメージ会心ダメージ: 0,    // for ナヒーダ\r\n    開花ダメージ会心率: 0,          // for ナヒーダ\r\n    開花ダメージ会心ダメージ: 0,    // for ナヒーダ\r\n    烈開花ダメージ会心率: 0,        // for ナヒーダ\r\n    烈開花ダメージ会心ダメージ: 0,  // for ナヒーダ\r\n    超開花ダメージ会心率: 0,        // for ナヒーダ\r\n    超開花ダメージ会心ダメージ: 0,  // for ナヒーダ\r\n};\r\nexport type TDamageResultElementalReaction = typeof 元素反応TEMPLATE;\r\nexport type TDamageResultElementalReactionKey = keyof typeof 元素反応TEMPLATE;\r\n\r\nexport type TDamageResultEntry = [string, string | null, number, number | null, number, string | null, number | null, number | null, number | null];    // 名前, 元素, 期待値, 会心, 非会心, 種類, HIT数, ダメージバフ, 敵の防御補正\r\nexport type TDamageResult = {\r\n    元素反応: TDamageResultElementalReaction,\r\n    通常攻撃: TDamageResultEntry[],\r\n    重撃: TDamageResultEntry[],\r\n    落下攻撃: TDamageResultEntry[],\r\n    元素スキル: TDamageResultEntry[],\r\n    元素爆発: TDamageResultEntry[],\r\n    その他: TDamageResultEntry[],\r\n    キャラクター注釈: string[],\r\n    [key: string]: TDamageResultElementalReaction | TDamageResultEntry[] | string[],\r\n};\r\n\r\nexport const DAMAGE_RESULT_TEMPLATE = {\r\n    元素反応: deepcopy(元素反応TEMPLATE) as TDamageResultElementalReaction,\r\n    通常攻撃: [] as TDamageResultEntry[],\r\n    重撃: [] as TDamageResultEntry[],\r\n    落下攻撃: [] as TDamageResultEntry[],\r\n    元素スキル: [] as TDamageResultEntry[],\r\n    元素爆発: [] as TDamageResultEntry[],\r\n    その他: [] as TDamageResultEntry[],\r\n    キャラクター注釈: [] as string[],\r\n};\r\n\r\nexport const 突破レベルレベルARRAY = [\r\n    Array.from({ length: 20 }, (_, i) => i + 1),\r\n    Array.from({ length: 21 }, (_, i) => i + 20),\r\n    Array.from({ length: 11 }, (_, i) => i + 40),\r\n    Array.from({ length: 11 }, (_, i) => i + 50),\r\n    Array.from({ length: 11 }, (_, i) => i + 60),\r\n    Array.from({ length: 11 }, (_, i) => i + 70),\r\n    Array.from({ length: 11 }, (_, i) => i + 80),\r\n];\r\n\r\n\r\nexport type TDamageDetailObj = {\r\n    名前: string | null,\r\n    種類: string | null,\r\n    元素: string | null,\r\n    数値: number | string | Array<any> | null,\r\n    条件: string | null,\r\n    対象: string | null,\r\n    上限: number | string | Array<any> | null,\r\n    下限: number | string | Array<any> | null,\r\n    HIT数: number | null,\r\n    ダメージバフ: string | null,\r\n    元素付与無効: boolean | null,\r\n    除外条件: (string | object)[] | null,\r\n    適用条件: (string | object)[] | null,\r\n};\r\n\r\nexport type TDamageDetail = {\r\n    通常攻撃?: TDamageDetailObj[],\r\n    重撃?: TDamageDetailObj[],\r\n    落下攻撃?: TDamageDetailObj[],\r\n    元素スキル?: TDamageDetailObj[],\r\n    元素爆発?: TDamageDetailObj[],\r\n    その他?: TDamageDetailObj[],\r\n    ステータス変更系詳細: TDamageDetailObj[],\r\n    天賦性能変更系詳細: TDamageDetailObj[],\r\n    条件: Map<string, string[]>,\r\n    排他: Map<string, string[]>,\r\n};\r\n\r\nexport const ARTIFACT_SET_MASTER_DUMMY = {\r\n    key: 'NONE' as TArtifactSetKey,\r\n    レアリティ: 5,\r\n    image: IMG_SRC_DUMMY,\r\n} as TArtifactSet;\r\n\r\nexport const CHARACTER_INPUT_TEMPLATE = {\r\n    character: 'アンバー' as TCharacterKey,\r\n    characterMaster: {} as TCharacterDetail,\r\n    突破レベル: 6,\r\n    レベル: 90,\r\n    命ノ星座: 0,\r\n    通常攻撃レベル: 8,\r\n    元素スキルレベル: 8,\r\n    元素爆発レベル: 8,\r\n    weapon: '西風猟弓' as TWeaponKey,\r\n    weaponMaster: {} as TWeaponDetail,\r\n    武器突破レベル: 6,\r\n    武器レベル: 90,\r\n    武器精錬ランク: 1,\r\n    artifactSets: ['NONE' as TArtifactSetKey, 'NONE' as TArtifactSetKey],\r\n    artifactSetMasters: [ARTIFACT_SET_MASTER_DUMMY, ARTIFACT_SET_MASTER_DUMMY] as TArtifactSetEntry[],\r\n    damageDetailMyCharacter: null as TDamageDetail | null,\r\n    damageDetailMyWeapon: null as TDamageDetail | null,\r\n    damageDetailMyArtifactSets: null as TDamageDetail | null,\r\n    damageDetailElementalResonance: null as TDamageDetail | null,\r\n    buildname: '',\r\n    recommendationSelectedIndex: 0,\r\n    saveDisabled: true,     // ローカルストレージへの構成保存不可か？\r\n    removeDisabled: true,   // ローカルストレージの構成削除不可か？\r\n};\r\nexport type TCharacterInput = typeof CHARACTER_INPUT_TEMPLATE;\r\n\r\nexport const ARTIFACT_DETAIL_INPUT_TEMPLATE = {\r\n    聖遺物メイン効果: ['', '', '', '', ''],\r\n    聖遺物優先するサブ効果: ['', '', ''],\r\n    聖遺物優先するサブ効果上昇値: Array.from(GENSEN_MASTER_LIST[2].values),     // 厳選1ヶ月\r\n    聖遺物優先するサブ効果上昇回数: Array.from(GENSEN_MASTER_LIST[2].counts),   // 厳選1ヶ月\r\n    聖遺物ステータス: deepcopy(聖遺物ステータスTEMPLATE),\r\n    聖遺物ステータスメイン効果: deepcopy(聖遺物ステータスTEMPLATE),\r\n    聖遺物ステータスサブ効果: deepcopy(聖遺物ステータスTEMPLATE),\r\n    聖遺物優先するサブ効果Disabled: false,\r\n};\r\nexport type TArtifactDetailInput = typeof ARTIFACT_DETAIL_INPUT_TEMPLATE;\r\n\r\nexport type TCheckboxEntry = {\r\n    name: string;\r\n    displayName?: string;\r\n};\r\nexport type TSelectEntry = {\r\n    name: string;\r\n    displayName?: string;\r\n    options: string[];\r\n    required: boolean;\r\n};\r\nexport type TNumberEntry = {\r\n    name: string;\r\n    displayName?: string;\r\n    min: number | string;\r\n    max?: number | string;\r\n    step?: number;\r\n};\r\nexport type TConditionValues = {\r\n    [key: string]: boolean | number | null,\r\n};\r\nexport type TConditionAdjustments = {\r\n    [key: string]: number | null,\r\n};\r\nexport const CONDITION_INPUT_TEMPLATE = {\r\n    checkboxList: [] as TCheckboxEntry[],\r\n    selectList: [] as TSelectEntry[],\r\n    numberList: [] as TNumberEntry[],\r\n    conditionValues: {} as TConditionValues,\r\n    conditionAdjustments: {} as TConditionAdjustments,\r\n    攻撃元素: [null, null, null] as (string | null)[],\r\n};\r\nexport type TConditionInput = typeof CONDITION_INPUT_TEMPLATE;\r\n\r\nexport const STATS_INPUT_TEMPLATE = {\r\n    statsObj: deepcopy(ステータスTEMPLATE) as TStats,\r\n    statAdjustments: deepcopy(ステータスTEMPLATE) as TStats,\r\n    enemyMaster: ENEMY_MASTER_LIST[0] as TEnemyEntry,\r\n};\r\nfor (const stat of Object.keys(STATS_INPUT_TEMPLATE.statAdjustments)) {\r\n    STATS_INPUT_TEMPLATE.statAdjustments[stat] = 0;\r\n}\r\nexport type TStatsInput = typeof STATS_INPUT_TEMPLATE;\r\n\r\nexport type TElementalResonance = {\r\n    conditionValues: TConditionValues,\r\n    conditionAdjustments: TConditionAdjustments,\r\n};\r\n\r\nexport const SUPPORTER_INPUT_TEMPLATE = {\r\n    characterInput: deepcopy(CHARACTER_INPUT_TEMPLATE) as TCharacterInput,\r\n    artifactDetailInput: deepcopy(ARTIFACT_DETAIL_INPUT_TEMPLATE) as TArtifactDetailInput,\r\n    conditionInput: deepcopy(CONDITION_INPUT_TEMPLATE) as TConditionInput,\r\n    statsInput: deepcopy(STATS_INPUT_TEMPLATE) as TStatsInput,\r\n    damageResult: deepcopy(DAMAGE_RESULT_TEMPLATE) as TDamageResult,\r\n};\r\nexport type TSupporterInput = typeof SUPPORTER_INPUT_TEMPLATE;\r\n\r\nexport const OPTION_INPUT_TEMPLATE = {\r\n    elementalResonance: {\r\n        conditionValues: {},\r\n        conditionAdjustments: {},\r\n    } as TElementalResonance,\r\n    supporterBuildname: {} as { [key: string]: string | undefined },\r\n    supporters: {} as { [key: string]: TSupporterInput | undefined },\r\n    teamMembers: [] as string[],\r\n    teamOption: deepcopy(CONDITION_INPUT_TEMPLATE) as TConditionInput,\r\n    miscOption: deepcopy(CONDITION_INPUT_TEMPLATE) as TConditionInput,\r\n};\r\nexport type TOptionInput = typeof OPTION_INPUT_TEMPLATE;\r\n\r\n/** レベル文字列（1+,20,20+,...,90）を突破レベルとレベルに分割します */\r\nfunction parseLevelStr(levelStr: number | string): [number, number] {\r\n    let result: [number, number] = [0, 1];\r\n    try {\r\n        let level: number;\r\n        if (_.isString(levelStr)) {\r\n            level = Number(String(levelStr).replace('+', ''));\r\n        } else {\r\n            level = Number(levelStr);\r\n        }\r\n        let ascension = 0;\r\n        for (let i = (突破レベルレベルARRAY.length - 1); i >= 0; i--) {\r\n            ascension = i;\r\n            if (突破レベルレベルARRAY[i][0] > level) continue;\r\n            if (突破レベルレベルARRAY[i][0] == level && !String(levelStr).endsWith('+')) {\r\n                ascension--;\r\n            }\r\n            break;\r\n        }\r\n        result = [Math.max(0, ascension), level];\r\n    } catch (error) {\r\n        console.error(levelStr);\r\n        // throw error;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport type TRecommendation = {\r\n    name: string,\r\n    build: any,\r\n    overwrite: boolean\r\n}\r\n\r\nexport function makeDefaultBuildname(character: any) {\r\n    return 'あなたの' + character;\r\n}\r\n\r\nexport function makeBuildStorageKey(character: TCharacterKey | string, buildname?: string) {\r\n    let result = '構成_' + character;\r\n    if (buildname && buildname != makeDefaultBuildname(character)) {\r\n        result += '_' + buildname;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function makeOptionStorageKey(character: TCharacterKey | string, buildname?: string) {\r\n    return 'オプション' + makeBuildStorageKey(character, buildname);\r\n}\r\n\r\nexport function makeArtifactScoringStorageKey(character: TCharacterKey | string, buildname?: string) {\r\n    return makeBuildStorageKey(character, buildname).replace(/^構成/, 'ArtifactScoring');\r\n}\r\n\r\nexport function makeSupporterBuildnameStorageKey(character: TCharacterKey | string, buildname?: string) {\r\n    return makeBuildStorageKey(character, buildname).replace(/^構成/, 'SupporterBuildname');\r\n}\r\n\r\n/** おすすめセットのリストを作成します. [おすすめセットの名前, おすすめセットの内容, 上書き可不可][] */\r\nexport function makeRecommendationList(\r\n    characterMaster: TAnyObject,\r\n    opt_buildData?: TAnyObject,\r\n): TRecommendation[] {\r\n    const result: TRecommendation[] = [];\r\n\r\n    const character = characterMaster['名前'];\r\n    let isSavable: boolean | null = null;\r\n\r\n    if (opt_buildData) {\r\n        result.push({ name: 'IMPORTED DATA', build: opt_buildData, overwrite: false });\r\n        isSavable = true;\r\n        console.log(opt_buildData);\r\n    }\r\n\r\n    const storageKeyArr: string[] = [];\r\n    Object.keys(localStorage).forEach(key => {\r\n        if (key.startsWith(makeBuildStorageKey(character))) {\r\n            storageKeyArr.push(key);\r\n            if (isSavable == null) {\r\n                isSavable = false;\r\n            }\r\n        }\r\n    });\r\n    storageKeyArr.sort();\r\n    const re = new RegExp('^構成_' + character + '_');\r\n    storageKeyArr.forEach(key => {\r\n        let buildname;\r\n        if (key == makeBuildStorageKey(character)) {\r\n            buildname = makeDefaultBuildname(character);\r\n        } else {\r\n            buildname = key.replace(re, '');\r\n        }\r\n        const buildObj = JSON.parse(localStorage[key]);\r\n        const key2 = 'オプション' + key;\r\n        if (key2 in localStorage) {\r\n            const optionsObj = JSON.parse(localStorage[key2]);\r\n            buildObj.options = optionsObj;\r\n        }\r\n        const key3 = key.replace(/^構成/, 'ArtifactScoring');\r\n        if (key3 in localStorage) {\r\n            const artifactScoringObj = JSON.parse(localStorage[key3]);\r\n            buildObj.artifactScoring = artifactScoringObj;\r\n        }\r\n        const key4 = key.replace(/^構成/, 'SupporterBuildname');\r\n        if (key4 in localStorage) {\r\n            const supporterBuildnameObj = JSON.parse(localStorage[key4]);\r\n            buildObj.supporterBuildname = supporterBuildnameObj;\r\n        }\r\n        result.push({ name: buildname, build: buildObj, overwrite: true });\r\n    });\r\n\r\n    characterMaster['おすすめセット'].forEach((obj: { [key: string]: any }) => {\r\n        const myRecommendation = obj;\r\n        ['聖遺物優先するサブ効果1', '聖遺物優先するサブ効果2', '聖遺物優先するサブ効果3'].forEach(stat => {\r\n            if (!(stat in obj)) {\r\n                obj[stat] = null;\r\n            }\r\n        });\r\n        const artifactRarerityArrArr = [[5, 5, 5, 5, 5], [4, 4, 5, 5, 5], [4, 4, 4, 5, 4]];\r\n        let artifactRarerity4Num = 0;\r\n        const artifactSet1 = myRecommendation['聖遺物セット効果1'] as TArtifactSetKey;\r\n        const artifactSet2 = myRecommendation['聖遺物セット効果2'] as TArtifactSetKey;\r\n        if (ARTIFACT_SET_MASTER[artifactSet1]['レアリティ'] == 4) {\r\n            artifactRarerity4Num++;\r\n        }\r\n        if (ARTIFACT_SET_MASTER[artifactSet2]['レアリティ'] == 4) {\r\n            artifactRarerity4Num++;\r\n        }\r\n        for (let i = 0; i < 2; i++) {\r\n            const name = '聖遺物メイン効果' + (i + 1);\r\n            if (!(name in myRecommendation)) {\r\n                if (i == 0) {\r\n                    myRecommendation[name] = artifactRarerityArrArr[artifactRarerity4Num][i] + '_HP';\r\n                } else if (i == 1) {\r\n                    myRecommendation[name] = artifactRarerityArrArr[artifactRarerity4Num][i] + '_攻撃力';\r\n                }\r\n            }\r\n        }\r\n\r\n        let buildname = myRecommendation['武器'];\r\n        buildname += ' ';\r\n        if (myRecommendation['聖遺物セット効果1'] == myRecommendation['聖遺物セット効果2']) {\r\n            buildname += myRecommendation['聖遺物セット効果1'];\r\n        } else {\r\n            buildname += makeArtifactSetAbbrev(myRecommendation['聖遺物セット効果1']);\r\n            buildname += '/';\r\n            buildname += makeArtifactSetAbbrev(myRecommendation['聖遺物セット効果2']);\r\n        }\r\n        buildname += ' [';\r\n        for (let i = 3; i <= 5; i++) {\r\n            const statusName = myRecommendation['聖遺物メイン効果' + i].split('_')[1];\r\n            if (RECOMMEND_ABBREV_MAP.has(statusName)) {\r\n                buildname += RECOMMEND_ABBREV_MAP.get(statusName);\r\n            } else {\r\n                buildname += statusName.substring(0, 1);\r\n            }\r\n        }\r\n        buildname += ']';\r\n        result.push({ name: buildname, build: myRecommendation, overwrite: false });\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\n/** 聖遺物セット名の略称を作成します */\r\nfunction makeArtifactSetAbbrev(name: string): string {\r\n    const abbrRe = /[\\p{sc=Hiragana}\\p{sc=Katakana}ー]+/ug;\r\n    let abbr = name.replace(abbrRe, '');\r\n    if (abbr.length > 2) {\r\n        abbr = name.split(abbrRe).sort((a, b) => {\r\n            return b.length - a.length;\r\n        })[0];\r\n    }\r\n    if (abbr.length > 3) {\r\n        abbr = abbr.substring(0, 2);\r\n    }\r\n    return abbr;\r\n}\r\n\r\nexport function makePrioritySubstatValueList(\r\n    prioritySubstats: TArtifactSubKey[],\r\n    index: number,\r\n    opt_substat?: TArtifactSubKey\r\n) {\r\n    const result: number[] = [];\r\n    if (prioritySubstats[index]) {\r\n        if (!opt_substat) opt_substat = prioritySubstats[index];\r\n        if (opt_substat && opt_substat in ARTIFACT_SUB_MASTER) {\r\n            const valueArr = ARTIFACT_SUB_MASTER[opt_substat];\r\n            for (let i = 0; i < valueArr.length; i++) {\r\n                result.push(valueArr[i]);\r\n                if (i < valueArr.length - 1) {\r\n                    const diff = valueArr[i + 1] - valueArr[i];\r\n                    result.push(valueArr[i] + diff / 2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function makeEasyInputSubstatValueList(\r\n    substat: TArtifactSubKey\r\n) {\r\n    const result: number[] = [];\r\n    if (substat && substat in ARTIFACT_SUB_MASTER) {\r\n        const valueArr = ARTIFACT_SUB_MASTER[substat];\r\n        for (let i = 0; i < valueArr.length; i++) {\r\n            result.push(valueArr[i]);\r\n            if (i < valueArr.length - 1) {\r\n                const diff = valueArr[i + 1] - valueArr[i];\r\n                result.push(valueArr[i] + diff / 2);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/** おすすめセットをロードします */\r\nexport async function loadRecommendation(\r\n    characterInput: TCharacterInput,\r\n    artifactDetailInput: TArtifactDetailInput,\r\n    conditionInput: TConditionInput,\r\n    optionInput: TOptionInput,\r\n    build: { [key: string]: any }\r\n) {\r\n    try {\r\n        const character = characterInput.character;\r\n        const characterMaster = await getCharacterMasterDetail(character);\r\n        characterInput.characterMaster = characterMaster;\r\n        const artifactStatsSub = deepcopy(聖遺物ステータスTEMPLATE);\r\n\r\n        if ('レベル' in build) {\r\n            [characterInput.突破レベル, characterInput.レベル] = parseLevelStr(build['レベル']);\r\n        }\r\n        ['命ノ星座', '通常攻撃レベル', '元素スキルレベル', '元素爆発レベル'].forEach(key => {\r\n            if (key in build) {\r\n                (characterInput as any)[key] = Number(build[key]);\r\n            }\r\n        });\r\n\r\n        const weaponType = characterMaster['武器'];\r\n        if ('武器' in build) {\r\n            if (Object.keys(WEAPON_MASTER[weaponType]).includes(build['武器'])) {\r\n                characterInput.weapon = build['武器'] as TWeaponKey;\r\n            } else {\r\n                characterInput.weapon = Object.keys(WEAPON_MASTER[weaponType]).filter(s => s.startsWith('西風'))[0] as TWeaponKey;\r\n            }\r\n            characterInput.weaponMaster = await getWeaponMasterDetail(characterInput.weapon, weaponType);\r\n        }\r\n        if ('武器レベル' in build) {\r\n            [characterInput.武器突破レベル, characterInput.武器レベル] = parseLevelStr(build['武器レベル']);\r\n        }\r\n        if ('精錬ランク' in build) {\r\n            characterInput.武器精錬ランク = Number(build['精錬ランク']);\r\n        }\r\n\r\n        let prioritySubstatsDisabled = false;\r\n        for (const key of Object.keys(build).filter((s: string) => s.startsWith('聖遺物サブ効果'))) {\r\n            let toKey = key.replace(/^聖遺物サブ効果/, '');\r\n            if (toKey != 'HP') toKey = toKey.replace(/P$/, '%');\r\n            if (build[key] || build[key] == 0) {\r\n                prioritySubstatsDisabled = true;\r\n                artifactStatsSub[toKey] = Number(build[key]);\r\n            }\r\n        }\r\n        artifactDetailInput.聖遺物優先するサブ効果Disabled = prioritySubstatsDisabled;\r\n\r\n        ['聖遺物セット効果1', '聖遺物セット効果2'].forEach((key, index) => {\r\n            if (!(key in build)) return;\r\n            const artifactSet = build[key] as TArtifactSetKey;\r\n            if (artifactSet && artifactSet in ARTIFACT_SET_MASTER) {\r\n                characterInput.artifactSets[index] = artifactSet;\r\n                characterInput.artifactSetMasters[index] = ARTIFACT_SET_MASTER[artifactSet] as TArtifactSetEntry;\r\n            } else {\r\n                characterInput.artifactSetMasters[index] = ARTIFACT_SET_MASTER_DUMMY as TArtifactSetEntry;\r\n            }\r\n        });\r\n\r\n        ['聖遺物メイン効果1', '聖遺物メイン効果2'].forEach((key, index) => {\r\n            if (key in build) {\r\n                artifactDetailInput['聖遺物メイン効果'][index] = build[key];\r\n            } else {\r\n                artifactDetailInput['聖遺物メイン効果'][index] = ['5_HP', '5_攻撃力'][index];\r\n            }\r\n        });\r\n        ['聖遺物メイン効果3', '聖遺物メイン効果4', '聖遺物メイン効果5'].forEach((key, index) => {\r\n            if (!(key in build)) return;\r\n            const mainstat = build[key];\r\n            artifactDetailInput['聖遺物メイン効果'][index + 2] = mainstat;\r\n        });\r\n        // for (const entry of artifactDetailInput['聖遺物メイン効果']) {\r\n        //     const [rarity, stat] = entry.split('_');\r\n        //     artifactStatsMain[stat] += (ARTIFACT_MAIN_MASTER as any)[rarity][stat];\r\n        // }\r\n        // overwriteObject(artifactDetailInput.聖遺物ステータスメイン効果, artifactStatsMain);\r\n\r\n        if (!prioritySubstatsDisabled) {\r\n            ['聖遺物優先するサブ効果1', '聖遺物優先するサブ効果2', '聖遺物優先するサブ効果3'].forEach((key, index) => {\r\n                if (!(key in build)) return;\r\n                const substat = build[key];\r\n                artifactDetailInput['聖遺物優先するサブ効果'][index] = substat;\r\n            });\r\n            ['聖遺物優先するサブ効果1上昇値', '聖遺物優先するサブ効果2上昇値', '聖遺物優先するサブ効果3上昇値'].forEach((key, index) => {\r\n                let doUpdate = false;\r\n                if (artifactDetailInput['聖遺物優先するサブ効果'][index]) {\r\n                    if ((key in build) && isNumber(build[key])) {\r\n                        doUpdate = true;\r\n                    }\r\n                }\r\n                if (doUpdate) {\r\n                    const substatValue = Number(build[key]);\r\n                    const substat = artifactDetailInput['聖遺物優先するサブ効果'][index] as TArtifactSubKey;\r\n                    const prioritySubstatValueList = makePrioritySubstatValueList([substat], 0);\r\n                    prioritySubstatValueList.forEach((v, i) => {\r\n                        if (substatValue <= v) {\r\n                            artifactDetailInput['聖遺物優先するサブ効果上昇値'][index] = i;\r\n                        }\r\n                    })\r\n                } else {\r\n                    if (artifactDetailInput['聖遺物優先するサブ効果'][index] && !artifactDetailInput['聖遺物優先するサブ効果上昇値'][index]) {\r\n                        artifactDetailInput['聖遺物優先するサブ効果上昇値'][index] = GENSEN_MASTER_LIST[2].values[index];\r\n                    }\r\n                }\r\n            });\r\n            ['聖遺物優先するサブ効果1上昇回数', '聖遺物優先するサブ効果2上昇回数', '聖遺物優先するサブ効果3上昇回数'].forEach((key, index) => {\r\n                let doUpdate = false;\r\n                if (artifactDetailInput['聖遺物優先するサブ効果'][index]) {\r\n                    if ((key in build) && isNumber(build[key])) {\r\n                        doUpdate = true;\r\n                    }\r\n                }\r\n                if (doUpdate) {\r\n                    const substatCount = Number(build[key]);\r\n                    artifactDetailInput['聖遺物優先するサブ効果上昇回数'][index] = substatCount;\r\n                } else {\r\n                    if (artifactDetailInput['聖遺物優先するサブ効果'][index] && !artifactDetailInput['聖遺物優先するサブ効果上昇回数'][index]) {\r\n                        artifactDetailInput['聖遺物優先するサブ効果上昇回数'][index] = GENSEN_MASTER_LIST[2].counts[index];\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        Object.keys(build).filter(s => !キャラクター構成PROPERTY_MAP.has(s) && !['options', 'artifactScoring', 'supporterBuildname'].includes(s)).forEach(key => {\r\n            if (build[key] == null) {\r\n                conditionInput.conditionValues[key] = build[key];   // null\r\n            } else if (_.isString(build[key])) {\r\n                conditionInput.conditionValues[key] = Number(build[key]);\r\n            } else {\r\n                conditionInput.conditionValues[key] = build[key];\r\n            }\r\n        });\r\n\r\n        if ('options' in build) {\r\n            const keys = Object.keys(build.options);\r\n            if (keys.length) {\r\n                overwriteObject(optionInput.elementalResonance.conditionValues, {});\r\n                overwriteObject(optionInput.teamOption.conditionValues, {});\r\n                overwriteObject(optionInput.miscOption.conditionValues, {});\r\n                keys.forEach(key => {\r\n                    if (key in ELEMENTAL_RESONANCE_MASTER || key == 'dendroOption') {\r\n                        // 元素共鳴\r\n                        optionInput.elementalResonance.conditionValues[key] = build.options[key];\r\n                    } else {\r\n                        const astarIndex = key.indexOf('*');\r\n                        if (astarIndex != -1) {\r\n                            const workCharacter = key.substring(0, astarIndex);\r\n                            if (workCharacter in CHARACTER_MASTER) {\r\n                                // チーム\r\n                                optionInput.teamOption.conditionValues[key] = build.options[key];\r\n                            } else {\r\n                                // その他\r\n                                optionInput.miscOption.conditionValues[key] = build.options[key];\r\n                            }\r\n                        } else {\r\n                            // その他\r\n                            optionInput.miscOption.conditionValues[key] = build.options[key];\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        if ('supporterBuildname' in build) {\r\n            const keys = Object.keys(build.supporterBuildname);\r\n            if (keys.length) {\r\n                overwriteObject(optionInput.supporterBuildname, {});\r\n                keys.forEach(key => {\r\n                    optionInput.supporterBuildname[key] = build.supporterBuildname[key];\r\n                });\r\n            }\r\n        }\r\n\r\n        overwriteObject(artifactDetailInput.聖遺物ステータスサブ効果, artifactStatsSub);\r\n\r\n        console.debug('loadRecommendation', characterInput, artifactDetailInput, conditionInput, build);\r\n    }\r\n    catch (error) {\r\n        console.error(characterInput, artifactDetailInput, conditionInput, build);\r\n        // throw error;\r\n    }\r\n}\r\n\r\nexport function makeSavedata(characterInput: TCharacterInput, artifactDetailInput: TArtifactDetailInput, conditionInput: TConditionInput) {\r\n    const resultObj = {} as any;\r\n\r\n    // キャラクター\r\n    resultObj['キャラクター'] = characterInput.character;\r\n    // レベル\r\n    resultObj['レベル'] = characterInput.レベル + (突破レベルレベルARRAY[characterInput.突破レベル][0] == characterInput.レベル ? '+' : '');\r\n    // 命ノ星座\r\n    resultObj['命ノ星座'] = characterInput.命ノ星座;\r\n    // 通常攻撃レベル\r\n    resultObj['通常攻撃レベル'] = characterInput.通常攻撃レベル;\r\n    // 元素スキルレベル\r\n    resultObj['元素スキルレベル'] = characterInput.元素スキルレベル;\r\n    // 元素爆発レベル\r\n    resultObj['元素爆発レベル'] = characterInput.元素爆発レベル;\r\n    // 武器\r\n    resultObj['武器'] = characterInput.weapon;\r\n    // 武器レベル\r\n    resultObj['武器レベル'] = characterInput.武器レベル + (突破レベルレベルARRAY[characterInput.突破レベル][0] == characterInput.武器レベル ? '+' : '');\r\n    // 精錬ランク\r\n    resultObj['精錬ランク'] = characterInput.武器精錬ランク;\r\n    // 聖遺物セット効果1\r\n    resultObj['聖遺物セット効果1'] = characterInput.artifactSets[0];\r\n    // 聖遺物セット効果2\r\n    resultObj['聖遺物セット効果2'] = characterInput.artifactSets[1];\r\n    // 聖遺物メイン効果1\r\n    resultObj['聖遺物メイン効果1'] = artifactDetailInput.聖遺物メイン効果[0];\r\n    // 聖遺物メイン効果2\r\n    resultObj['聖遺物メイン効果2'] = artifactDetailInput.聖遺物メイン効果[1];\r\n    // 聖遺物メイン効果3\r\n    resultObj['聖遺物メイン効果3'] = artifactDetailInput.聖遺物メイン効果[2];\r\n    // 聖遺物メイン効果4\r\n    resultObj['聖遺物メイン効果4'] = artifactDetailInput.聖遺物メイン効果[3];\r\n    // 聖遺物メイン効果5\r\n    resultObj['聖遺物メイン効果5'] = artifactDetailInput.聖遺物メイン効果[4];\r\n    // 聖遺物サブ効果HP\r\n    resultObj['聖遺物サブ効果HP'] = artifactDetailInput.聖遺物ステータスサブ効果['HP'];\r\n    // 聖遺物サブ効果攻撃力\r\n    resultObj['聖遺物サブ効果攻撃力'] = artifactDetailInput.聖遺物ステータスサブ効果['攻撃力'];\r\n    // 聖遺物サブ効果防御力\r\n    resultObj['聖遺物サブ効果防御力'] = artifactDetailInput.聖遺物ステータスサブ効果['防御力'];\r\n    // 聖遺物サブ効果元素熟知\r\n    resultObj['聖遺物サブ効果元素熟知'] = artifactDetailInput.聖遺物ステータスサブ効果['元素熟知'];\r\n    // 聖遺物サブ効果会心率\r\n    resultObj['聖遺物サブ効果会心率'] = artifactDetailInput.聖遺物ステータスサブ効果['会心率'];\r\n    // 聖遺物サブ効果会心ダメージ\r\n    resultObj['聖遺物サブ効果会心ダメージ'] = artifactDetailInput.聖遺物ステータスサブ効果['会心ダメージ'];\r\n    // 聖遺物サブ効果元素チャージ効率\r\n    resultObj['聖遺物サブ効果元素チャージ効率'] = artifactDetailInput.聖遺物ステータスサブ効果['元素チャージ効率'];\r\n    // 聖遺物サブ効果HPP\r\n    resultObj['聖遺物サブ効果HPP'] = artifactDetailInput.聖遺物ステータスサブ効果['HP%'];\r\n    // 聖遺物サブ効果攻撃力P\r\n    resultObj['聖遺物サブ効果攻撃力P'] = artifactDetailInput.聖遺物ステータスサブ効果['攻撃力%'];\r\n    // 聖遺物サブ効果防御力P\r\n    resultObj['聖遺物サブ効果防御力P'] = artifactDetailInput.聖遺物ステータスサブ効果['防御力%'];\r\n    // 聖遺物優先するサブ効果1\r\n    resultObj['聖遺物優先するサブ効果1'] = artifactDetailInput.聖遺物優先するサブ効果[0];\r\n    // 聖遺物優先するサブ効果1上昇値\r\n    resultObj['聖遺物優先するサブ効果1上昇値'] = artifactDetailInput.聖遺物優先するサブ効果上昇値[0];\r\n    // 聖遺物優先するサブ効果1上昇回数\r\n    resultObj['聖遺物優先するサブ効果1上昇回数'] = artifactDetailInput.聖遺物優先するサブ効果上昇回数[0];\r\n    // 聖遺物優先するサブ効果2\r\n    resultObj['聖遺物優先するサブ効果2'] = artifactDetailInput.聖遺物優先するサブ効果[1];\r\n    // 聖遺物優先するサブ効果2上昇値\r\n    resultObj['聖遺物優先するサブ効果2上昇値'] = artifactDetailInput.聖遺物優先するサブ効果上昇値[1];\r\n    // 聖遺物優先するサブ効果2上昇回数\r\n    resultObj['聖遺物優先するサブ効果2上昇回数'] = artifactDetailInput.聖遺物優先するサブ効果上昇回数[1];\r\n    // 聖遺物優先するサブ効果3\r\n    resultObj['聖遺物優先するサブ効果3'] = artifactDetailInput.聖遺物優先するサブ効果[2];\r\n    // 聖遺物優先するサブ効果3上昇値\r\n    resultObj['聖遺物優先するサブ効果3上昇値'] = artifactDetailInput.聖遺物優先するサブ効果上昇値[2];\r\n    // 聖遺物優先するサブ効果3上昇回数\r\n    resultObj['聖遺物優先するサブ効果3上昇回数'] = artifactDetailInput.聖遺物優先するサブ効果上昇回数[2];\r\n\r\n    for (const entry of conditionInput.checkboxList) {\r\n        resultObj[entry.name] = conditionInput.conditionValues[entry.name];\r\n    }\r\n    for (const entry of conditionInput.selectList) {\r\n        resultObj[entry.name] = conditionInput.conditionValues[entry.name];\r\n    }\r\n\r\n    return resultObj;\r\n}\r\n\r\nexport function makeOptionsSavedata(character: string, optionInput: TOptionInput) {\r\n    const resultObj = {} as any;\r\n\r\n    // 元素共鳴\r\n    {\r\n        const conditionValues = optionInput.elementalResonance.conditionValues;\r\n        Object.keys(conditionValues).forEach(key => {\r\n            if (conditionValues[key]) {\r\n                resultObj[key] = conditionValues[key];\r\n            }\r\n        })\r\n    }\r\n\r\n    // チーム\r\n    {\r\n        const conditionValues = optionInput.teamOption.conditionValues;\r\n        Object.keys(conditionValues).forEach(key => {\r\n            if (key.startsWith(character + '*')) return;\r\n            if (conditionValues[key]) {\r\n                resultObj[key] = conditionValues[key];\r\n            }\r\n        })\r\n    }\r\n\r\n    // その他\r\n    {\r\n        const conditionValues = optionInput.miscOption.conditionValues;\r\n        Object.keys(conditionValues).forEach(key => {\r\n            if (conditionValues[key]) {\r\n                resultObj[key] = conditionValues[key];\r\n            }\r\n        })\r\n    }\r\n\r\n    return resultObj;\r\n}\r\n\r\nexport function makeSupporterBuildnameSavedata(buildnameSelection: TAnyObject, optionInput: TOptionInput) {\r\n    const result: TAnyObject = {};\r\n    const conditionKeys = Object.keys(optionInput.teamOption.conditionValues);\r\n    for (const supporter of Object.keys(buildnameSelection)) {\r\n        if (!buildnameSelection[supporter]) continue;\r\n        if (conditionKeys.filter(s => s.startsWith(supporter + '*')).length == 0) continue;\r\n        result[supporter] = buildnameSelection[supporter];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const CHANGE_KIND_STATUS = 'ステータス変更系詳細';\r\nexport const CHANGE_KIND_TALENT = '天賦性能変更系詳細';\r\n\r\nexport function makeDamageDetailObjArrObjCharacter(characterInput: TCharacterInput): TDamageDetail {\r\n    const result = {} as any;\r\n    try {\r\n        const characterMaster = characterInput.characterMaster as any;\r\n\r\n        let myTalentDetail;\r\n        let myTalentLevel: number;\r\n        let myDefaultKind: string | null;\r\n        let myDefaultElement: string | null;\r\n        const myInputCategory = 'キャラクター';\r\n\r\n        const myStatusChangeDetailObjArr = [] as any[];\r\n        const myTalentChangeDetailObjArr = [] as any[];\r\n\r\n        // 通常攻撃 重撃 落下攻撃\r\n        myTalentLevel = characterInput['通常攻撃レベル'];\r\n        myDefaultElement = characterMaster['武器'] === '法器' ? characterMaster['元素'] : null;\r\n        ['通常攻撃', '重撃', '落下攻撃'].forEach(category => {\r\n            myTalentDetail = characterMaster[category];\r\n            myDefaultKind = category + 'ダメージ';\r\n            result[category] = makeDamageDetailObjArr(myTalentDetail, myTalentLevel, myDefaultKind, myDefaultElement, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n        });\r\n\r\n        ['通常攻撃', '重撃', '落下攻撃'].forEach(category => {\r\n            const workCategory = '特殊' + category;\r\n            if (workCategory in characterMaster) {\r\n                myTalentDetail = characterMaster[workCategory];\r\n                if ('種類' in myTalentDetail) {\r\n                    myDefaultKind = myTalentDetail['種類'];\r\n                    switch (myDefaultKind) {\r\n                        case '元素スキルダメージ':\r\n                            myTalentLevel = characterInput['元素スキルレベル'];\r\n                            break;\r\n                        case '元素爆発ダメージ':\r\n                            myTalentLevel = characterInput['元素爆発レベル'];\r\n                            break;\r\n                    }\r\n                }\r\n                if ('元素' in myTalentDetail) {\r\n                    myDefaultElement = myTalentDetail['元素'];\r\n                }\r\n                const workObj = {\r\n                    条件: myTalentDetail['条件'],\r\n                    詳細: makeDamageDetailObjArr(myTalentDetail, myTalentLevel, myDefaultKind, myDefaultElement, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory)\r\n                };\r\n                result[workCategory] = workObj;\r\n            }\r\n        });\r\n\r\n        // 元素スキル\r\n        myTalentLevel = characterInput['元素スキルレベル'];\r\n        myDefaultKind = '元素スキルダメージ';\r\n        myDefaultElement = characterMaster['元素'];\r\n        result['元素スキル'] = makeDamageDetailObjArr(characterMaster['元素スキル'], myTalentLevel, myDefaultKind, myDefaultElement, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n\r\n        // 元素爆発\r\n        myTalentLevel = characterInput['元素爆発レベル'];\r\n        myDefaultKind = '元素爆発ダメージ';\r\n        myDefaultElement = characterMaster['元素'];\r\n        result['元素爆発'] = makeDamageDetailObjArr(characterMaster['元素爆発'], myTalentLevel, myDefaultKind, myDefaultElement, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n\r\n        result['その他'] = [] as TDamageDetailObj[];\r\n\r\n        // その他戦闘天賦\r\n        if ('その他戦闘天賦' in characterMaster) {\r\n            characterMaster['その他戦闘天賦'].forEach((myTalentDetail: any) => {\r\n                const workArr = makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n                if (workArr.length > 0) result['その他'].push(...workArr);\r\n            });\r\n        }\r\n\r\n        // 固有天賦\r\n        characterMaster['固有天賦'].forEach((myTalentDetail: any) => {\r\n            const workArr = makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n            if (workArr.length > 0) result['その他'].push(...workArr);\r\n        });\r\n\r\n        // 命ノ星座\r\n        if ('命ノ星座' in characterMaster) {\r\n            Object.keys(characterMaster['命ノ星座']).forEach(key => {\r\n                if (Number(key) > characterInput.命ノ星座) return;\r\n                myTalentDetail = characterMaster['命ノ星座'][key];\r\n                const workArr = makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n                if (workArr.length > 0) result['その他'].push(...workArr);\r\n            });\r\n        }\r\n\r\n        // 風元素キャラクター\r\n        if (characterMaster['元素'] == '風') {\r\n            if (myTalentChangeDetailObjArr.filter(s => s.条件 && s.条件.startsWith('拡散@')).length == 0) {\r\n                ['炎元素', '水元素', '雷元素', '氷元素'].forEach(cond => {\r\n                    myTalentChangeDetailObjArr.push({\r\n                        名前: null,\r\n                        種類: '固有変数',\r\n                        元素: null,\r\n                        数値: null,\r\n                        条件: '拡散@' + cond,\r\n                        対象: null,\r\n                        上限: null,\r\n                        HIT数: null,\r\n                        ダメージバフ: null,\r\n                        元素付与無効: null,\r\n                        除外条件: null,\r\n                        適用条件: null\r\n                    });\r\n                });\r\n            }\r\n            if ('オプション初期値' in characterMaster) {\r\n                if (Object.keys(characterMaster['オプション初期値']).filter(s => s == '拡散').length == 0) {\r\n                    characterMaster['オプション初期値']['拡散'] = 1;\r\n                }\r\n            } else {\r\n                characterMaster['オプション初期値'] = { 拡散: 1 };\r\n            }\r\n        }\r\n\r\n        result[CHANGE_KIND_STATUS] = myStatusChangeDetailObjArr;\r\n        result[CHANGE_KIND_TALENT] = myTalentChangeDetailObjArr;\r\n\r\n        const conditionMap = new Map();\r\n        const exclusionMap = new Map();\r\n        myStatusChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        myTalentChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        // conditionMap.delete('命ノ星座');\r\n        conditionMap.forEach((value, key) => {\r\n            if (value && Array.isArray(value)) {\r\n                if (!value[0].startsWith('required_')) {\r\n                    conditionMap.set(key, ['', ...value]);\r\n                }\r\n            }\r\n        });\r\n        result['条件'] = conditionMap;\r\n        result['排他'] = exclusionMap;\r\n\r\n        characterInput.damageDetailMyCharacter = result;\r\n    } catch (error) {\r\n        console.error(characterInput, result);\r\n        // throw error;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function makeDamageDetailObjArrObjWeapon(characterInput: any) {\r\n    const result = {} as any;\r\n    try {\r\n        const name = characterInput.weapon;\r\n        const weaponMaster = characterInput.weaponMaster;\r\n        if (!name || !weaponMaster) return result;\r\n\r\n        let myTalentDetail;\r\n        const myLevel = characterInput.武器精錬ランク;\r\n        const myInputCategory = '武器';\r\n\r\n        const myStatusChangeDetailObjArr = [] as any[];\r\n        const myTalentChangeDetailObjArr = [] as any[];\r\n\r\n        if ('武器スキル' in weaponMaster) {\r\n            myTalentDetail = weaponMaster['武器スキル'];\r\n            result['その他'] = makeDamageDetailObjArr(myTalentDetail, myLevel, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory);\r\n        }\r\n\r\n        result[CHANGE_KIND_STATUS] = myStatusChangeDetailObjArr;\r\n        result[CHANGE_KIND_TALENT] = myTalentChangeDetailObjArr;\r\n\r\n        const conditionMap = new Map();\r\n        const exclusionMap = new Map();\r\n        myStatusChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            let condition = detailObj['条件'];\r\n            if (_.isPlainObject(condition) && myLevel in condition) {\r\n                condition = condition[myLevel];\r\n            }\r\n            makeConditionExclusionMapFromStr(condition, conditionMap, exclusionMap);\r\n        });\r\n        myTalentChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            let condition = detailObj['条件'];\r\n            if (_.isPlainObject(condition) && myLevel in condition) {\r\n                condition = condition[myLevel];\r\n            }\r\n            makeConditionExclusionMapFromStr(condition, conditionMap, exclusionMap);\r\n        });\r\n        conditionMap.forEach((value, key) => {\r\n            if (value && Array.isArray(value)) {\r\n                if (!value[0].startsWith('required_')) {\r\n                    conditionMap.set(key, ['', ...value]);\r\n                }\r\n            }\r\n        });\r\n        result['条件'] = conditionMap;\r\n        result['排他'] = exclusionMap;\r\n\r\n        characterInput.damageDetailMyWeapon = result;\r\n    } catch (error) {\r\n        console.error(characterInput, result);\r\n        // throw error;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function makeDamageDetailObjArrObjArtifactSets(characterInput: any) {\r\n    const result = [] as any;\r\n    try {\r\n        let myTalentDetail;\r\n        const myInputCategory = '聖遺物セット効果';\r\n\r\n        const myStatusChangeDetailObjArr = [] as any[];\r\n        const myTalentChangeDetailObjArr = [] as any[];\r\n\r\n        const artifactSetMasters = characterInput.artifactSetMasters.filter((s: any) => s);\r\n\r\n        if (artifactSetMasters.length > 0) {\r\n            const damageDetailObjArr = [] as TDamageDetailObj[];\r\n            if ('2セット効果' in artifactSetMasters[0]) {\r\n                myTalentDetail = artifactSetMasters[0]['2セット効果'];\r\n                damageDetailObjArr.push(...makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory));\r\n            }\r\n            if (artifactSetMasters.length == 2) {\r\n                if (artifactSetMasters[0] == artifactSetMasters[1]) {\r\n                    myTalentDetail = artifactSetMasters[0]['4セット効果'];\r\n                    damageDetailObjArr.push(...makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory));\r\n                } else {\r\n                    myTalentDetail = artifactSetMasters[1]['2セット効果'];\r\n                    damageDetailObjArr.push(...makeDamageDetailObjArr(myTalentDetail, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory));\r\n                }\r\n            }\r\n            result['その他'] = damageDetailObjArr;\r\n        }\r\n\r\n        result[CHANGE_KIND_STATUS] = myStatusChangeDetailObjArr;\r\n        result[CHANGE_KIND_TALENT] = myTalentChangeDetailObjArr;\r\n\r\n        const conditionMap = new Map();\r\n        const exclusionMap = new Map();\r\n        myStatusChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        myTalentChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        conditionMap.forEach((value, key) => {\r\n            if (value && Array.isArray(value)) {\r\n                if (!value[0].startsWith('required_')) {\r\n                    conditionMap.set(key, ['', ...value]);\r\n                }\r\n            }\r\n        });\r\n        result['条件'] = conditionMap;\r\n        result['排他'] = exclusionMap;\r\n\r\n        characterInput.damageDetailMyArtifactSets = result;\r\n    } catch (error) {\r\n        console.error(characterInput, result);\r\n        // throw error;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function makeDamageDetailObjArrObjElementalResonance(characterInput: any) {\r\n    const result = [] as any;\r\n    try {\r\n        const myInputCategory = '元素共鳴';\r\n        const damageDetailObjArr = [] as TDamageDetailObj[];\r\n        const myStatusChangeDetailObjArr = [] as any[];\r\n        const myTalentChangeDetailObjArr = [] as any[];\r\n        for (const myTalentDetail of ELEMENTAL_RESONANCE_MASTER_LIST) {\r\n            const workObj = deepcopy(myTalentDetail);\r\n            if (workObj.詳細) {\r\n                workObj.詳細.forEach((detailObj: TAnyObject) => {\r\n                    detailObj.名前 = myTalentDetail.key;\r\n                });\r\n            }\r\n            damageDetailObjArr.push(...makeDamageDetailObjArr(workObj, null, null, null, myStatusChangeDetailObjArr, myTalentChangeDetailObjArr, myInputCategory));\r\n        }\r\n        result['その他'] = damageDetailObjArr;\r\n        result[CHANGE_KIND_STATUS] = myStatusChangeDetailObjArr;\r\n        result[CHANGE_KIND_TALENT] = myTalentChangeDetailObjArr;\r\n\r\n        const conditionMap = new Map();\r\n        const exclusionMap = new Map();\r\n        myStatusChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        myTalentChangeDetailObjArr.filter(s => s['条件']).forEach(detailObj => {\r\n            makeConditionExclusionMapFromStr(detailObj['条件'], conditionMap, exclusionMap);\r\n        });\r\n        conditionMap.forEach((value, key) => {\r\n            if (value && Array.isArray(value)) {\r\n                if (!value[0].startsWith('required_')) {\r\n                    conditionMap.set(key, ['', ...value]);\r\n                }\r\n            }\r\n        });\r\n        result['条件'] = conditionMap;\r\n        result['排他'] = exclusionMap;\r\n\r\n        characterInput.damageDetailElementalResonance = result;\r\n    } catch (error) {\r\n        console.error(characterInput, result);\r\n        // throw error;\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction makeDetailObj(\r\n    detailObj: any,\r\n    level: number | null,\r\n    defaultKind: string | null,\r\n    defaultElement: string | null,\r\n    inputCategory: string | null,\r\n    opt_condition?: string,\r\n): TDamageDetailObj {\r\n    let my種類 = '種類' in detailObj ? detailObj['種類'] : defaultKind;\r\n    let my対象 = null;\r\n    if (my種類.indexOf('.') != -1) {\r\n        my対象 = my種類.substring(my種類.indexOf('.') + 1);\r\n        my種類 = my種類.substring(0, my種類.indexOf('.'));\r\n    } else if ('対象' in detailObj) {\r\n        my対象 = detailObj['対象'];\r\n    }\r\n    let my数値 = null;\r\n    if ('数値' in detailObj) {\r\n        my数値 = detailObj['数値'];\r\n        if (isNumber(my数値) || _.isString(my数値)) {\r\n            // nop\r\n        } else if (_.isPlainObject(my数値) && level && level in my数値) { // キャラクター|武器のサブステータス\r\n            my数値 = my数値[level];\r\n        } else {\r\n            console.error(detailObj, level, defaultKind, defaultElement, my数値);\r\n        }\r\n        if (DAMAGE_CATEGORY_ARRAY.includes(my種類 + 'ダメージ') || my種類.endsWith('ダメージ')) {\r\n            my数値 = analyzeFormulaStr(my数値, '攻撃力');\r\n        } else {\r\n            my数値 = analyzeFormulaStr(my数値, my種類);\r\n        }\r\n    }\r\n    let my条件 = null;\r\n    if ('条件' in detailObj) {\r\n        if (_.isPlainObject(detailObj['条件']) && level && level in detailObj['条件']) {  // 武器は精錬ランクによって数値を変えたいときがあるので\r\n            my条件 = detailObj['条件'][level];\r\n        } else {\r\n            my条件 = detailObj['条件'];\r\n        }\r\n    } else {\r\n        my条件 = opt_condition ?? null;\r\n    }\r\n    let my上限 = null;\r\n    if ('上限' in detailObj) {\r\n        my上限 = detailObj['上限'];\r\n        if (_.isPlainObject(my上限) && level && level in my上限) {   // 草薙の稲光\r\n            my上限 = my上限[level];\r\n        }\r\n        my上限 = analyzeFormulaStr(my上限);\r\n    }\r\n    let my下限 = null;\r\n    if ('下限' in detailObj) {  // ニィロウ\r\n        my下限 = detailObj['下限'];\r\n        if (_.isPlainObject(my下限) && level && level in my下限) {\r\n            my下限 = my下限[level];\r\n        }\r\n        my下限 = analyzeFormulaStr(my下限);\r\n    }\r\n    const resultObj: TDamageDetailObj = {\r\n        名前: detailObj['名前'],\r\n        種類: my種類,\r\n        元素: '元素' in detailObj ? detailObj['元素'] : defaultElement,\r\n        数値: my数値,\r\n        条件: my条件,\r\n        対象: my対象,\r\n        上限: my上限,\r\n        下限: my下限,\r\n        HIT数: 'HIT数' in detailObj ? detailObj['HIT数'] : null,\r\n        ダメージバフ: 'ダメージバフ' in detailObj ? detailObj['ダメージバフ'] : null,\r\n        元素付与無効: '元素付与無効' in detailObj ? detailObj['元素付与無効'] : inputCategory == '武器',\r\n        除外条件: '除外条件' in detailObj ? detailObj['除外条件'] : null,\r\n        適用条件: '適用条件' in detailObj ? detailObj['適用条件'] : null,\r\n    }\r\n    return resultObj;\r\n}\r\n\r\nexport function getChangeKind(kind: string) {\r\n    if (kind in ステータスTEMPLATE\r\n        || new RegExp('[自全].+(バフ|アップ)').exec(kind)\r\n        || new RegExp('敵?[自全]元素耐性').exec(kind)\r\n        || ['別枠乗算', '回復量アップ'].includes(kind)\r\n        || ['敵防御力'].includes(kind)\r\n        || ['発動回数', '使用回数'].includes(kind)\r\n        || ['攻撃速度', '通常攻撃速度', '移動速度'].includes(kind)\r\n        || kind.endsWith('継続時間')\r\n        || kind.endsWith('クールタイム')\r\n        || kind.endsWith('会心率')\r\n        || kind.endsWith('会心ダメージ')\r\n    ) {\r\n        return 'STATUS';\r\n    } else if (kind.endsWith('強化')\r\n        || kind.endsWith('付与')\r\n        || kind == '防御無視' ||\r\n        kind == '固有変数'\r\n    ) {   // ex.元素爆発強化,氷元素付与\r\n        return 'TALENT';\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport function makeDamageDetailObjArr(\r\n    talentDataObj: any,\r\n    level: number | null,\r\n    defaultKind: string | null,\r\n    defaultElement: string | null,\r\n    statusChangeDetailObjArr: any[],\r\n    talentChangeDetailObjArr: any[],\r\n    inputCategory: string,\r\n    opt_condition?: string,\r\n): TDamageDetailObj[] {\r\n    const resultArr = [] as any[];\r\n    if (!('詳細' in talentDataObj)) return resultArr;\r\n\r\n    talentDataObj['詳細'].forEach((detailObj: TAnyObject) => {\r\n        const resultObj = makeDetailObj(detailObj, level, defaultKind, defaultElement, inputCategory, opt_condition);\r\n        const my種類 = resultObj.種類 as string;\r\n        if (statusChangeDetailObjArr != null && getChangeKind(my種類) == 'STATUS') {\r\n            resultObj['元素'] = '元素' in detailObj ? detailObj['元素'] : null;\r\n            statusChangeDetailObjArr.push(resultObj);\r\n            return;\r\n        }\r\n        if (talentChangeDetailObjArr != null && getChangeKind(my種類) == 'TALENT') {\r\n            resultObj['元素'] = '元素' in detailObj ? detailObj['元素'] : null;\r\n            talentChangeDetailObjArr.push(resultObj);\r\n            return;\r\n        }\r\n        resultArr.push(resultObj);\r\n    });\r\n\r\n    return resultArr;\r\n}\r\n\r\nexport function makeTeamOptionDetailObjArr(\r\n    detailObjArr: any[],\r\n): TDamageDetailObj[] {\r\n    const resultArr = [] as any[];\r\n\r\n    detailObjArr.forEach((detailObj: { [x: string]: any; }) => {\r\n        const resultObj = makeDetailObj(detailObj, null, null, null, null);\r\n        if (resultObj) {\r\n            resultArr.push(resultObj);\r\n        }\r\n    });\r\n\r\n    return resultArr;\r\n}\r\n\r\n// 条件名\r\n// 条件名@prefix数値postfix\r\n// 条件名@prefix数値(From)-数値(To)postfix\r\n// 条件名@prefix数値1,数値2,数値3postfix\r\n// 条件名=prefix数値postfix\r\n// 条件名@文字列\r\n// 条件名=文字列\r\n// 条件名={min=数値|文字列,max=数値|文字列,step=数値}\r\n// OR条件   条件A|条件B\r\n// AND条件  条件A&条件B\r\n// 排他条件 条件A^条件B\r\nexport function makeConditionExclusionMapFromStr(\r\n    conditionStr: string,\r\n    conditionMap: Map<string, string[] | null | object>,\r\n    exclusionMap: Map<string, string[] | null>\r\n) {\r\n    // 排他条件を抽出します\r\n    let exclusionCond: string | null = null;\r\n    let myCondStrArr = conditionStr.split('^');\r\n    if (myCondStrArr.length > 1) {\r\n        exclusionCond = myCondStrArr[1];\r\n    }\r\n    const myCondStr = myCondStrArr[0];\r\n    if (myCondStr.indexOf('|') != -1) {\r\n        // OR条件 for 申鶴\r\n        myCondStrArr = myCondStr.split('|');\r\n        myCondStrArr.forEach((myCondStr: string) => {\r\n            makeConditionExclusionMapFromStrSub(myCondStr, conditionMap, exclusionMap, exclusionCond);\r\n        });\r\n    } else {\r\n        // AND条件\r\n        myCondStrArr = myCondStr.split('&');\r\n        myCondStrArr.forEach((myCondStr: string) => {\r\n            makeConditionExclusionMapFromStrSub(myCondStr, conditionMap, exclusionMap, exclusionCond);\r\n        });\r\n    }\r\n}\r\n\r\nexport const NUMBER_CONDITION_VALUE_RE = /^\\s*{.+}\\s*$/;\r\n\r\nfunction makeConditionExclusionMapFromStrSub(\r\n    conditionStr: string,\r\n    conditionMap: Map<string, string[] | null | object>,\r\n    exclusionMap: Map<string, string[] | null>,\r\n    exclusion: string | null\r\n) {\r\n    const myCondStrArr = conditionStr.split(/[@=]/);\r\n    const myName = myCondStrArr[0];\r\n    if (myCondStrArr.length == 1) {\r\n        pushToMapValueArray(conditionMap, myName, null);\r\n    } else if (myCondStrArr.length == 2) {\r\n        if (NUMBER_CONDITION_VALUE_RE.test(myCondStrArr[1])) {\r\n            try {\r\n                const workObj = JSON.parse(myCondStrArr[1]);\r\n                if ('min' in workObj) { // minは必須\r\n                    const conditionObj = {\r\n                        min: workObj.min,\r\n                        max: workObj.max,\r\n                        step: workObj.step,\r\n                    };\r\n                    pushToMapValueArray(conditionMap, myName, conditionObj);\r\n                } else {\r\n                    console.error(conditionStr, conditionMap, exclusionMap, exclusion);\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n                console.error(conditionStr, conditionMap, exclusionMap, exclusion);\r\n            }\r\n        } else if (myCondStrArr[1].indexOf(',') != -1) {\r\n            const re = new RegExp('([^0-9]*?)([\\\\+\\\\-0-9\\\\.,]+)(.*)');  // 表現可能:-10,+60%\r\n            const reRet = re.exec(myCondStrArr[1]);\r\n            if (reRet) {\r\n                const prefix = reRet[1];\r\n                const condValueArr = reRet[2].split(',');\r\n                const postfix = reRet[3];\r\n                condValueArr.forEach(value => {\r\n                    pushToMapValueArray(conditionMap, myName, prefix + value + postfix);\r\n                });\r\n            }\r\n        } else if (myCondStrArr[1].indexOf('-') != -1) {\r\n            const re = new RegExp('([^0-9\\\\.]*)(-?[0-9\\\\.]+)-(-?[0-9\\\\.]+)(.*)');   // 数値部に+は含められない。prefixには含められる。\r\n            const re2 = new RegExp('/([0-9\\\\.]+)(.*)');\r\n            const reRet = re.exec(myCondStrArr[1]);\r\n            if (reRet) {\r\n                const prefix = reRet[1];\r\n                const rangeStart = Number(reRet[2]);\r\n                const rangeEnd = Number(reRet[3]);\r\n                let step = rangeStart;\r\n                let postfix = reRet[4];\r\n                if (postfix) {\r\n                    const re2Ret = re2.exec(postfix);\r\n                    if (re2Ret) {\r\n                        step = Number(re2Ret[1]);\r\n                        postfix = re2Ret[2];\r\n                    }\r\n                }\r\n                for (let i = rangeStart; i < rangeEnd; i = addDecimal(i, step, rangeEnd)) {\r\n                    pushToMapValueArray(conditionMap, myName, prefix + String(i) + postfix);\r\n                }\r\n                pushToMapValueArray(conditionMap, myName, prefix + String(rangeEnd) + postfix);\r\n            } else {\r\n                pushToMapValueArray(conditionMap, myName, myCondStrArr[1]);\r\n            }\r\n        } else {\r\n            pushToMapValueArray(conditionMap, myName, myCondStrArr[1]);\r\n        }\r\n    } else {\r\n        console.error(conditionStr, conditionMap, exclusionMap, exclusion);\r\n    }\r\n    if (exclusion) {\r\n        exclusion.split(',').forEach(e => {\r\n            pushToMapValueArray(exclusionMap, myName, e);\r\n        });\r\n    }\r\n}\r\n\r\nexport function setupConditionValues(\r\n    conditionInput: TConditionInput,\r\n    characterInput: TCharacterInput,\r\n    optionInput: TOptionInput,\r\n) {\r\n    try {\r\n        const conditionValues = conditionInput.conditionValues;\r\n        const checkboxList = conditionInput.checkboxList as TCheckboxEntry[];\r\n        const selectList = conditionInput.selectList as TSelectEntry[];\r\n        const numberList = conditionInput.numberList as TNumberEntry[];\r\n\r\n        checkboxList.splice(0, checkboxList.length);\r\n        selectList.splice(0, selectList.length);\r\n\r\n        const masters = [characterInput.characterMaster, characterInput.weaponMaster, ...characterInput.artifactSetMasters];\r\n        for (const master of masters.filter(s => s)) {\r\n            if ('オプション初期値' in master) {\r\n                for (const key of Object.keys((master as any)['オプション初期値'])) {\r\n                    if (!(key in conditionValues)) {\r\n                        conditionValues[key] = (master as any)['オプション初期値'][key];\r\n                    }\r\n                }\r\n            }\r\n            // 聖遺物セット効果のオプション初期値は変な位置にあります\r\n            if ('4セット効果' in master && 'オプション初期値' in (master as any)['4セット効果']) {\r\n                for (const key of Object.keys((master as any)['4セット効果']['オプション初期値'])) {\r\n                    if (!(key in conditionValues)) {\r\n                        conditionValues[key] = (master as any)['4セット効果']['オプション初期値'][key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const myDamageDetail of [characterInput.damageDetailMyCharacter, characterInput.damageDetailMyWeapon, characterInput.damageDetailMyArtifactSets]) {\r\n            if (myDamageDetail) {\r\n                const conditionMap: Map<string, string[] | null | object> = myDamageDetail.条件;\r\n                const exclusionMap: Map<string, string[] | null> = myDamageDetail.排他;\r\n\r\n                conditionMap.forEach((value: string[] | null | object, key: string) => {\r\n                    if (value == null) {\r\n                        if (checkboxList.filter(s => s.name == key).length == 0) {\r\n                            checkboxList.push({ name: key });\r\n                        }\r\n                    } else if (Array.isArray(value)) {\r\n                        if (selectList.filter(s => s.name == key).length == 0) {\r\n                            const required = value[0].startsWith(\"required_\");\r\n                            selectList.push({\r\n                                name: key,\r\n                                options: value,\r\n                                required: required,\r\n                            });\r\n                        }\r\n                    } else if (_.isPlainObject(value)) {\r\n                        if (numberList.filter(s => s.name == key).length == 0) {\r\n                            const entry = {\r\n                                name: key,\r\n                                min: (value as any).min,\r\n                                max: (value as any).max,\r\n                                step: (value as any).step,\r\n                            };\r\n                            numberList.push(entry);\r\n                        }\r\n                    }\r\n                    if (key in conditionValues && conditionValues[key] != null) {\r\n                        const exclusions = exclusionMap.get(key);\r\n                        if (exclusions) {\r\n                            for (const exclusion of exclusions) {\r\n                                if (exclusion in conditionValues) {\r\n                                    const conditionValue = conditionMap.get(exclusion);\r\n                                    if (conditionValue === null) {  // checkbox\r\n                                        conditionValues[exclusion] = false;\r\n                                    } else if (Array.isArray(value)) {    // select\r\n                                        conditionValues[exclusion] = 0;\r\n                                    } else if (_.isPlainObject(value)) {    // number\r\n                                        const minValue = (value as any).min;\r\n                                        if (isNumber(minValue)) {\r\n                                            conditionValues[exclusion] = minValue;\r\n                                        } else {\r\n                                            conditionValues[exclusion] = 0;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (value === null) {   // checkbox\r\n                            let checked = true;\r\n                            const arr = exclusionMap.get(key);\r\n                            if (arr && arr.filter(s => conditionValues[s]).length > 0) {\r\n                                checked = false;\r\n                            }\r\n                            conditionValues[key] = checked;\r\n                        } else if (Array.isArray(value)) {   // select\r\n                            let selectedIndex = value.length - 1;\r\n                            const arr = exclusionMap.get(key);\r\n                            if (arr && arr.filter(s => conditionValues[s]).length > 0) {\r\n                                selectedIndex = 0;\r\n                            }\r\n                            conditionValues[key] = selectedIndex;\r\n                        } else if (_.isPlainObject(value)) {    // number\r\n                            const minValue = (value as any).min;\r\n                            if (isNumber(minValue)) {\r\n                                conditionValues[key] = minValue;\r\n                            } else {\r\n                                conditionValues[key] = 0;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (optionInput.elementalResonance) {\r\n            const conditionMap: Map<string, any[] | null | object> = new Map();\r\n            const exclusionMap: Map<string, string[] | null> = new Map();\r\n            for (const key of Object.keys(ELEMENTAL_RESONANCE_MASTER)) {\r\n                if (!optionInput.elementalResonance.conditionValues[key]) continue;\r\n                const master = (ELEMENTAL_RESONANCE_MASTER as any)[key];\r\n                if (!master.詳細) continue;\r\n                for (const detailObj of master.詳細) {\r\n                    if (!detailObj.条件) continue;\r\n                    makeConditionExclusionMapFromStr(detailObj.条件, conditionMap, exclusionMap);\r\n                }\r\n            }\r\n            conditionMap.forEach((value: string[] | null | object, key: string) => {\r\n                if (value == null) {\r\n                    if (checkboxList.filter(s => s.name == key).length == 0) {\r\n                        checkboxList.push({ name: key });\r\n                    }\r\n                } else if (Array.isArray(value)) {\r\n                    if (selectList.filter(s => s.name == key).length == 0) {\r\n                        const required = value[0].startsWith(\"required_\");\r\n                        selectList.push({\r\n                            name: key,\r\n                            options: value,\r\n                            required: required,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                if (key in conditionValues && conditionValues[key] != null) {\r\n                    const exclusions = exclusionMap.get(key);\r\n                    if (exclusions) {\r\n                        for (const exclusion of exclusions) {\r\n                            if (exclusion in conditionValues) {\r\n                                const conditionValue = conditionMap.get(exclusion);\r\n                                if (conditionValue === null) {  // checkbox\r\n                                    conditionValues[exclusion] = false;\r\n                                } else if (Array.isArray(value)) {    // select\r\n                                    conditionValues[exclusion] = 0;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (value === null) {   // checkbox\r\n                        let checked = true;\r\n                        const arr = exclusionMap.get(key);\r\n                        if (arr && arr.filter(s => conditionValues[s]).length > 0) {\r\n                            checked = false;\r\n                        }\r\n                        conditionValues[key] = checked;\r\n                    } else if (Array.isArray(value)) {   // select\r\n                        let selectedIndex = value.length - 1;\r\n                        const arr = exclusionMap.get(key);\r\n                        if (arr && arr.filter(s => conditionValues[s]).length > 0) {\r\n                            selectedIndex = 0;\r\n                        }\r\n                        conditionValues[key] = selectedIndex;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    } catch (error) {\r\n        console.error(conditionInput, characterInput);\r\n        // throw error;\r\n    }\r\n}\r\n\r\nexport function getStatValue(stat: string, statsObj: TStats) {\r\n    let result;\r\n    if (stat in statsObj) {\r\n        result = statsObj[stat];\r\n    } else {\r\n        const re = /(.+)X([0-7])$/;\r\n        const reRet = re.exec(stat);\r\n        if (reRet) {\r\n            if (reRet[1] in statsObj) {\r\n                result = statsObj[reRet[1]];\r\n                let n = Number(reRet[2]);\r\n                for (let i = 1; i <= 3; i++) {\r\n                    if ((n % 2) == 1) {\r\n                        const vStat: string = reRet[1] + 'V' + i;\r\n                        if (vStat in statsObj) {\r\n                            result -= statsObj[vStat];\r\n                        }\r\n                    }\r\n                    n = Math.trunc(n / 2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (result === undefined) {\r\n        console.error(stat, statsObj);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function updateNumberConditionValues(\r\n    conditionInput: TConditionInput,\r\n    characterInput: TCharacterInput,\r\n    statsObj: TStats,\r\n) {\r\n    for (const myDamageDetail of [characterInput.damageDetailMyCharacter, characterInput.damageDetailMyWeapon, characterInput.damageDetailMyArtifactSets]) {\r\n        if (myDamageDetail) {\r\n            const conditionMap: Map<string, string[] | null | object> = myDamageDetail.条件;\r\n            conditionMap.forEach((value: string[] | null | object, key: string) => {\r\n                if (_.isPlainObject(value)) {\r\n                    const numberEntryArr = conditionInput.numberList.filter(s => s.name == key);\r\n                    if (numberEntryArr.length > 0) {\r\n                        let minValue = (value as any).min;\r\n                        let maxValue = (value as any).max;\r\n                        if (_.isString(minValue) || _.isString(maxValue)) {\r\n                            if (_.isString(minValue)) {\r\n                                minValue = getStatValue(minValue, statsObj);\r\n                            }\r\n                            if (_.isString(maxValue)) {\r\n                                maxValue = getStatValue(maxValue, statsObj);\r\n                            }\r\n                            numberEntryArr[0].min = minValue;\r\n                            numberEntryArr[0].max = maxValue;\r\n                            if (key in conditionInput.conditionValues) {\r\n                                const value = conditionInput.conditionValues[key];\r\n                                if (_.isNumber(value)) {\r\n                                    if (value < minValue) {\r\n                                        conditionInput.conditionValues[key] = minValue;\r\n                                    } else if (maxValue !== undefined && value > maxValue) {\r\n                                        conditionInput.conditionValues[key] = maxValue;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction pushToMapValueArray(map: Map<any, any>, key: any, value: any) {\r\n    if (value == null) {    // checkbox\r\n        if (!map.has(key)) {\r\n            map.set(key, null);\r\n        }\r\n    } else if (_.isString(value)) { // select\r\n        if (map.has(key)) {\r\n            const oldValue = map.get(key);\r\n            if (oldValue == null) {\r\n                map.set(key, [value]);\r\n            } else if (Array.isArray(oldValue)) {\r\n                if (!oldValue.includes(value)) {\r\n                    map.get(key).push(value);\r\n                }\r\n            } else {\r\n                console.error(map, key, value);\r\n            }\r\n        } else {\r\n            map.set(key, [value]);\r\n        }\r\n    } else if (_.isPlainObject(value)) {    // number\r\n        map.set(key, value);\r\n    }\r\n}\r\n\r\nfunction getDecimalLength(value: number): number {\r\n    const arr = ('' + value).split('.');\r\n    return arr.length > 1 ? arr[1].length : 0;\r\n}\r\n\r\nexport function multiplyDecimal(value1: number, value2: number): number {\r\n    const decimalLength = getDecimalLength(value1) + getDecimalLength(value2);\r\n    const intValue1 = Number(('' + value1).replace('.', ''));\r\n    const intValue2 = Number(('' + value2).replace('.', ''));\r\n    const result = (intValue1 * intValue2) / Math.pow(10, decimalLength);\r\n    return Number(result);\r\n}\r\n\r\nexport function addDecimal(value1: number, value2: number, opt_max?: number): number {\r\n    const k = Math.pow(10, Math.max(getDecimalLength(value1), getDecimalLength(value2)));\r\n    let result = (multiplyDecimal(value1, k) + multiplyDecimal(value2, k)) / k;\r\n    if (opt_max != undefined) {\r\n        result = Math.min(result, opt_max);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction analyzeFormulaStr(\r\n    formulaStr: number | string,\r\n    opt_defaultItem: string | null = null\r\n) {\r\n    const resultArr = [] as any[];\r\n    const re = new RegExp('([\\\\+\\\\-\\\\*/]?)([^\\\\+\\\\-\\\\*/]+)(.*)');\r\n    let workStr = String(formulaStr);\r\n    // eslint-disable-next-line no-constant-condition\r\n    while (true) {\r\n        const reRet = re.exec(workStr);\r\n        if (!reRet) {\r\n            resultArr.push(workStr);\r\n            break;\r\n        }\r\n        if (reRet[1]) { // + - * /\r\n            resultArr.push(reRet[1]);\r\n        }\r\n        resultArr.push(analyzeFormulaStrSub(reRet[2], opt_defaultItem));\r\n        if (!reRet[3]) {\r\n            break;\r\n        }\r\n        workStr = reRet[3];\r\n    }\r\n    return resultArr;\r\n}\r\n\r\nfunction analyzeFormulaStrSub(\r\n    formulaStr: string,\r\n    opt_defaultItem: string | null = null\r\n) {\r\n    const resultArr = [] as any;\r\n    if (isNumber(formulaStr)) {\r\n        resultArr.push(Number(formulaStr));\r\n    } else {\r\n        const strArr = (formulaStr as string).split('%');\r\n        if (strArr.length == 1) {\r\n            resultArr.push(strArr[0]);\r\n        } else {\r\n            resultArr.push(Number(strArr[0]) / 100);\r\n            resultArr.push('*');\r\n            if (strArr[1].length > 0) {\r\n                resultArr.push(strArr[1]);\r\n            } else if (opt_defaultItem != null) {\r\n                resultArr.push(opt_defaultItem);\r\n            }\r\n        }\r\n    }\r\n    return resultArr;\r\n}\r\n\r\nexport function makeSharedata(savedata: TAnyObject) {\r\n    const sharedataArr = [] as any[];\r\n\r\n    let character: TCharacterKey;\r\n    let weaponType: TWeaponTypeKey;\r\n\r\n    キャラクター構成PROPERTY_MAP.forEach((value, key) => {\r\n        let newValue = savedata[key];\r\n        let myBasename;\r\n        switch (key) {\r\n            case 'キャラクター':\r\n                character = newValue as TCharacterKey;\r\n                myBasename = basename(CHARACTER_MASTER[character]['import']);\r\n                newValue = myBasename.split('_')[myBasename.split('_').length - 1];\r\n                break;\r\n            case '武器':\r\n                weaponType = CHARACTER_MASTER[character]['武器'] as TWeaponTypeKey;\r\n                myBasename = basename((WEAPON_MASTER as any)[weaponType][newValue]['import']);\r\n                newValue = myBasename.split('_')[myBasename.split('_').length - 1];\r\n                break;\r\n            case '聖遺物セット効果1':\r\n            case '聖遺物セット効果2':\r\n                if (newValue == 'NONE') {\r\n                    newValue = '';  // 聖遺物セット効果なし\r\n                } else {\r\n                    myBasename = basename(ARTIFACT_SET_MASTER[newValue as TArtifactSetKey]['image']);\r\n                    newValue = myBasename.split('_')[myBasename.split('_').length - 1];\r\n                }\r\n                break;\r\n            case '聖遺物メイン効果1':\r\n            case '聖遺物メイン効果2':\r\n            case '聖遺物メイン効果3':\r\n            case '聖遺物メイン効果4':\r\n            case '聖遺物メイン効果5':\r\n                if (newValue) {\r\n                    newValue = newValue.split('_')[0] + '_' + ARTIFACT_STAT_JA_EN_ABBREV_MAP.get(newValue.split('_')[1]);\r\n                }\r\n                break;\r\n            case '聖遺物優先するサブ効果1':\r\n            case '聖遺物優先するサブ効果2':\r\n            case '聖遺物優先するサブ効果3':\r\n                if (newValue) {\r\n                    newValue = ARTIFACT_STAT_JA_EN_ABBREV_MAP.get(newValue);\r\n                }\r\n                break;\r\n        }\r\n        sharedataArr.push(newValue);\r\n    });\r\n    Object.keys(savedata).forEach(key => {\r\n        if (!キャラクター構成PROPERTY_MAP.has(key)) {\r\n            sharedataArr.push(key + '=' + savedata[key]);\r\n        }\r\n    });\r\n\r\n    return sharedataArr.join(',');\r\n}\r\n\r\nfunction openTwitter(text: string, url: string, opt_hashtags?: string, opt_via?: string) {\r\n    const baseUrl = 'https://twitter.com/intent/tweet?';\r\n    const params = new URLSearchParams();\r\n    params.append('text', text);\r\n    params.append('url', url);\r\n    if (opt_hashtags) {\r\n        params.append('hashtags', opt_hashtags);\r\n    }\r\n    if (opt_via) {\r\n        params.append('via', opt_via);\r\n    }\r\n    const query = params.toString();\r\n    const shareUrl = `${baseUrl}${query}`;\r\n    console.log(params);\r\n    console.log(shareUrl);\r\n    window.open(shareUrl);\r\n}\r\n\r\nexport function shareByTwitter(\r\n    characterInput: TCharacterInput,\r\n    artifactDetailInput: TArtifactDetailInput,\r\n    conditionInput: TConditionInput\r\n) {\r\n    const savedata = makeSavedata(characterInput, artifactDetailInput, conditionInput);\r\n    const sharedata = makeSharedata(savedata);\r\n\r\n    const text = characterInput.buildname;\r\n    const encoded = encodeURI(sharedata);\r\n    const url = 'https://asagume.github.io/gencalc/' + '?allin=' + encoded;\r\n\r\n    openTwitter(text, url);\r\n}\r\n\r\nexport function getMaxConstellation(characterMaster: TCharacterDetail) {\r\n    let max = 0;\r\n    if ('命ノ星座' in characterMaster) {\r\n        max = Object.keys(characterMaster.命ノ星座).length;\r\n    }\r\n    return max;\r\n}\r\n\r\nexport function getMaxTalentLevel(characterMaster: TCharacterDetail, key: string) {\r\n    let max = 10;\r\n    if (key in characterMaster) {\r\n        const talentObj = (characterMaster as any)[key];\r\n        if (\"詳細\" in talentObj) {\r\n            for (const detailObj of talentObj.詳細) {\r\n                if (\"数値\" in detailObj && _.isPlainObject(detailObj.数値)) {\r\n                    const work = Object.keys(detailObj.数値).length;\r\n                    if (max < work) max = work;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return max;\r\n}\r\n\r\nexport function pushBuildinfoToSession(character: TCharacterKey | string, buildname?: string, builddata?: any, teammembers?: string[]) {\r\n    sessionStorage.setItem('character', character);\r\n    if (buildname) {\r\n        sessionStorage.setItem('buildname', buildname);\r\n    }\r\n    if (builddata) {\r\n        sessionStorage.setItem('builddata', JSON.stringify(builddata));\r\n    }\r\n    if (teammembers) {\r\n        sessionStorage.setItem('teammembers', JSON.stringify(teammembers));\r\n    }\r\n}\r\n\r\nexport function popBuildinfoFromSession() {\r\n    const result: [string | undefined, string | undefined, TAnyObject | undefined, string[] | undefined] = [undefined, undefined, undefined, undefined];\r\n    const character = sessionStorage.getItem('character');\r\n    if (character) {\r\n        result[0] = character;\r\n        const buildname = sessionStorage.getItem('buildname');\r\n        if (buildname) {\r\n            result[1] = buildname;\r\n        }\r\n        const builddata = sessionStorage.getItem('builddata');\r\n        if (builddata) {\r\n            result[2] = JSON.parse(builddata);\r\n        }\r\n        const teammembers = sessionStorage.getItem('teammembers');\r\n        if (teammembers) {\r\n            result[3] = JSON.parse(teammembers);\r\n        }\r\n        console.log(character, buildname, builddata, teammembers);\r\n    }\r\n    sessionStorage.removeItem('character');\r\n    sessionStorage.removeItem('builddata');\r\n    sessionStorage.removeItem('buildname');\r\n    sessionStorage.removeItem('teammembers');\r\n    return result;\r\n}\r\n","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, createElementVNode as _createElementVNode, withDirectives as _withDirectives, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, vShow as _vShow, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-a66d2282\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = { class: \"select-list\" }\nconst _hoisted_3 = [\"onUpdate:modelValue\", \"onChange\"]\nconst _hoisted_4 = [\"src\", \"alt\"]\nconst _hoisted_5 = { class: \"select-list\" }\nconst _hoisted_6 = [\"onUpdate:modelValue\", \"onChange\"]\nconst _hoisted_7 = [\"src\", \"alt\"]\nconst _hoisted_8 = { class: \"select-list\" }\nconst _hoisted_9 = [\"src\", \"alt\", \"onClick\"]\nconst _hoisted_10 = { class: \"tooltip\" }\nconst _hoisted_11 = [\"src\", \"alt\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_ctx.visible)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"ul\", _hoisted_2, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.elementList, (item) => {\n            return (_openBlock(), _createElementBlock(\"li\", { key: item }, [\n              _createElementVNode(\"label\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  class: \"hidden\",\n                  type: \"checkbox\",\n                  \"onUpdate:modelValue\": ($event: any) => ((_ctx.elementCheckList[item]) = $event),\n                  onChange: ($event: any) => (_ctx.checkListOnChange(item, _ctx.elementCheckList))\n                }, null, 40, _hoisted_3), [\n                  [_vModelCheckbox, _ctx.elementCheckList[item]]\n                ]),\n                _createElementVNode(\"img\", {\n                  class: \"filter\",\n                  src: _ctx.elementSrc(item),\n                  alt: item\n                }, null, 8, _hoisted_4)\n              ])\n            ]))\n          }), 128))\n        ]),\n        _createElementVNode(\"ul\", _hoisted_5, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.weaponList, (item) => {\n            return (_openBlock(), _createElementBlock(\"li\", { key: item }, [\n              _createElementVNode(\"label\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  class: \"hidden\",\n                  type: \"checkbox\",\n                  \"onUpdate:modelValue\": ($event: any) => ((_ctx.weaponCheckList[item]) = $event),\n                  onChange: ($event: any) => (_ctx.checkListOnChange(item, _ctx.weaponCheckList))\n                }, null, 40, _hoisted_6), [\n                  [_vModelCheckbox, _ctx.weaponCheckList[item]]\n                ]),\n                _createElementVNode(\"img\", {\n                  class: \"filter\",\n                  src: _ctx.weaponSrc(item),\n                  alt: item\n                }, null, 8, _hoisted_7)\n              ])\n            ]))\n          }), 128))\n        ]),\n        _createElementVNode(\"ul\", _hoisted_8, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filteredList, (item) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              class: \"with-tooltip\",\n              key: item.key\n            }, [\n              _createElementVNode(\"img\", {\n                class: _normalizeClass('character' + _ctx.bgImageClass(item) + _ctx.selectedClass(item)),\n                src: item.icon_url,\n                alt: item.key,\n                onClick: ($event: any) => (_ctx.characterOnClick(item.key))\n              }, null, 10, _hoisted_9),\n              _createElementVNode(\"div\", _hoisted_10, _toDisplayString(_ctx.displayName(item.key)), 1),\n              _createElementVNode(\"img\", {\n                class: \"vision\",\n                src: _ctx.visionSrc(item),\n                alt: item.元素\n              }, null, 8, _hoisted_11),\n              _withDirectives(_createElementVNode(\"div\", { class: \"selection-number\" }, _toDisplayString(_ctx.selectionNumber(item.key)), 513), [\n                [_vShow, _ctx.selectionNumber(item.key)]\n              ])\n            ]))\n          }), 128))\n        ])\n      ]))\n    : _createCommentVNode(\"\", true)\n}","\r\nimport {\r\n  TCharacterEntry,\r\n  ELEMENT_IMG_SRC,\r\n  TVisionKey,\r\n  WEAPON_IMG_SRC,\r\n  TWeaponTypeKey,\r\n  CHARACTER_MASTER_LIST,\r\n  STAR_BACKGROUND_IMAGE_CLASS,\r\n} from \"@/master\";\r\nimport { defineComponent, reactive, computed, PropType } from \"vue\";\r\nimport CompositionFunction from \"./CompositionFunction.vue\";\r\n\r\ninterface ICheckList {\r\n  [key: string]: boolean;\r\n}\r\n\r\nexport default defineComponent({\r\n  name: \"CharacterSelect\",\r\n  props: {\r\n    character: { type: String },\r\n    characters: { type: Array as PropType<string[]> },\r\n    visible: { type: Boolean, required: true },\r\n  },\r\n  emits: [\"update:character\", \"update:characters\"],\r\n  setup(props, context) {\r\n    const { displayName } = CompositionFunction();\r\n\r\n    const visionSrc = (item: TCharacterEntry) => ELEMENT_IMG_SRC[item.元素];\r\n    const bgImageClass = (item: TCharacterEntry) =>\r\n      (\" \" + STAR_BACKGROUND_IMAGE_CLASS[item.レアリティ]) as string;\r\n    const selectedClass = (item: TCharacterEntry) => {\r\n      if (props.character && props.character == item.key) {\r\n        return \" selected\";\r\n      }\r\n      if (props.characters && props.characters.includes(item.key)) {\r\n        return \" selected\";\r\n      }\r\n      return \"\";\r\n    };\r\n\r\n    const elementList = Object.keys(ELEMENT_IMG_SRC) as TVisionKey[];\r\n    const elementSrc = (element: TVisionKey) => ELEMENT_IMG_SRC[element] as string;\r\n    const elementCheckList = reactive({}) as ICheckList;\r\n    for (let key of elementList) {\r\n      elementCheckList[key] = false;\r\n    }\r\n\r\n    const weaponList = Object.keys(WEAPON_IMG_SRC) as TWeaponTypeKey[];\r\n    const weaponSrc = (weapon: TWeaponTypeKey) => WEAPON_IMG_SRC[weapon] as string;\r\n    const weaponCheckList = reactive({}) as ICheckList;\r\n    for (let key of weaponList) {\r\n      weaponCheckList[key] = false;\r\n    }\r\n\r\n    const checkListOnChange = function (item: string, checkList: ICheckList) {\r\n      if (!checkList[item]) return;\r\n      Object.keys(checkList)\r\n        .filter((s) => s != item)\r\n        .forEach((key) => {\r\n          checkList[key] = false;\r\n        });\r\n    };\r\n\r\n    const filteredList = computed(() => {\r\n      const result = [];\r\n      const elementChecked =\r\n        Object.keys(elementCheckList).filter((s) => elementCheckList[s]).length > 0;\r\n      const weaponChecked =\r\n        Object.keys(weaponCheckList).filter((s) => weaponCheckList[s]).length > 0;\r\n      for (let entry of CHARACTER_MASTER_LIST as TCharacterEntry[]) {\r\n        if (elementChecked && !elementCheckList[entry.元素]) continue;\r\n        if (weaponChecked && !weaponCheckList[entry.武器]) continue;\r\n        result.push(entry);\r\n      }\r\n      return result;\r\n    });\r\n\r\n    const selectionNumber = (character: string) => {\r\n      let result = \"\";\r\n      if (props.characters) {\r\n        const index = props.characters.indexOf(character);\r\n        if (index != -1) {\r\n          result = String(index + 1);\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n\r\n    const characterOnClick = (character: string) => {\r\n      if (props.character) {\r\n        context.emit(\"update:character\", character);\r\n      }\r\n      if (props.characters) {\r\n        const characters: string[] = props.characters.map((s) => s);\r\n        const index = props.characters.indexOf(character);\r\n        if (index != -1) {\r\n          characters[index] = \"\";\r\n        } else {\r\n          const blankIndex = props.characters.indexOf(\"\");\r\n          if (blankIndex != -1) {\r\n            characters[blankIndex] = character;\r\n          }\r\n        }\r\n        context.emit(\"update:characters\", characters);\r\n      }\r\n    };\r\n\r\n    return {\r\n      displayName,\r\n\r\n      visionSrc,\r\n      bgImageClass,\r\n      selectedClass,\r\n      elementList,\r\n      elementSrc,\r\n      elementCheckList,\r\n      weaponList,\r\n      weaponSrc,\r\n      weaponCheckList,\r\n      checkListOnChange,\r\n      filteredList,\r\n\r\n      selectionNumber,\r\n      characterOnClick,\r\n    };\r\n  },\r\n});\r\n","import { render } from \"./CharacterSelect.vue?vue&type=template&id=a66d2282&scoped=true&ts=true\"\nimport script from \"./CharacterSelect.vue?vue&type=script&lang=ts\"\nexport * from \"./CharacterSelect.vue?vue&type=script&lang=ts\"\n\nimport \"./CharacterSelect.vue?vue&type=style&index=0&id=a66d2282&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\Github\\\\gencalc\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a66d2282\"]])\n\nexport default __exports__","\r\nimport i18n from \"@/i18n\";\r\nimport { STAT_PERCENT_LIST } from \"@/input\";\r\nimport { nextTick } from \"vue\";\r\nimport { useI18n } from \"vue-i18n\";\r\n\r\nexport default function CompositionFunction() {\r\n    const { t, te } = useI18n({\r\n        useScope: \"global\",\r\n    });\r\n\r\n    const localeList = [\r\n        { name: \"日本語\", value: \"ja-jp\" },\r\n        { name: \"English\", value: \"en-us\" },\r\n        { name: \"简体中文\", value: \"zh-cn\" },\r\n        { name: \"繁體中文\", value: \"zh-tw\" },\r\n        { name: \"한국어\", value: \"ko-kr\" },\r\n        { name: \"Deutsch\", value: \"de-de\" },\r\n        { name: \"Español\", value: \"es-es\" },\r\n        { name: \"Français\", value: \"fr-fr\" },\r\n        { name: \"Indonesia\", value: \"id-id\" },\r\n        { name: \"Português\", value: \"pt-pt\" },\r\n        { name: \"Pусский\", value: \"ru-ru\" },\r\n        { name: 'ภาษาไทย', value: 'th-th' },\r\n        { name: \"Tiếng Việt\", value: \"vi-vn\" },\r\n    ];\r\n\r\n    const setI18nLanguage = function (locale: string) {\r\n        i18n.global.locale.value = locale;\r\n        loadLocaleMessages(locale);\r\n        document.querySelector('html')?.setAttribute('lang', locale)\r\n    }\r\n\r\n    const loadLocaleMessages = async function (locale: string) {\r\n        if (locale != 'ja-jp') {\r\n            const messages = await fetch(`./locales/${locale}.json`).then(resp => resp.json());\r\n            i18n.global.setLocaleMessage(locale, messages);\r\n        }\r\n        return nextTick();\r\n    }\r\n\r\n    const displayName = function (key: any): string {\r\n        if (!key) return key;\r\n        if (i18n.global.locale.value === 'ja-jp') { // 日本語はtranslateしません\r\n            let result = String(key);\r\n            if (['ダメージバフ', 'ダメージアップ', '反応ボーナス', '敵'].includes(result)) {\r\n                return result;\r\n            }\r\n            result = result.replace(/ダメージバフ$/, 'ダメージ');\r\n            result = result.replace(/ダメージアップ$/, 'ダメージ');\r\n            result = result.replace('凍結反応ボーナス', '凍結反応の継続時間');\r\n            result = result.replace(/反応ボーナス$/, '反応ダメージ');\r\n            result = result.replace(/^敵/, '敵の');\r\n            return result;\r\n        }\r\n        if (te(key)) return t(key);\r\n        const re = new RegExp('(.*?)([\\\\s_\\\\(\\\\)/]+)(.*)');\r\n        let result = '';\r\n        let work = key;\r\n        while (work) {\r\n            const reRet = re.exec(work);\r\n            if (!reRet) {\r\n                result += t(work);\r\n                break;\r\n            }\r\n            if (reRet[1]) result += t(reRet[1]);\r\n            result += reRet[2];\r\n            work = reRet[3];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const percent = function (stat: string) {\r\n        const tempArr = stat.split('.');\r\n        let work = tempArr[0].replace(/V[1-3]$/, '');\r\n        let hasPercent = work.endsWith(\"%\") || STAT_PERCENT_LIST.includes(work);\r\n        if (!hasPercent) {\r\n            ['会心率', '会心ダメージ', 'クールタイム'].forEach(postfix => {\r\n                if (work.endsWith(postfix)) hasPercent = true;\r\n            })\r\n        }\r\n        return hasPercent ? '%' : '';\r\n    }\r\n\r\n    const displayStatName = function (stat: string) {\r\n        let result = stat.replace(/V[1-3]$/, '');\r\n        const tempArr = result.split('.');\r\n        if (tempArr.length == 1) {\r\n            result = displayName(result);\r\n            result = result.replace('ダメージ会心', 'ダメージの会心')\r\n        } else if (i18n.global.locale.value === 'ja-jp') {\r\n            result = tempArr[tempArr.length - 1] + 'の' + displayName(tempArr[0]);\r\n        } else {\r\n            result = displayName(tempArr[tempArr.length - 1]) + ' ' + displayName(tempArr[0]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const displayStatValue = function (stat: string, value: number, opt_s?: number): string {\r\n        const myPercent = percent(stat);\r\n        let p = myPercent ? 10 : 1;\r\n        if (opt_s) p = Math.pow(10, opt_s);\r\n        return String(Math.round(value * p) / p) + myPercent;\r\n    }\r\n\r\n    const displayStatAbbrev = function (stat: string) {\r\n        let result = stat;\r\n        const tempArr = stat.split('.');\r\n        if (tempArr.length == 1) {\r\n            stat = stat.replace(/V\\d$/, '');\r\n            stat = stat.replace(/TOP$/, '');\r\n            if (stat.startsWith('敵')) stat = stat.replace(/^敵/, '');\r\n            if (stat.endsWith('ダメージバフ')) stat = stat.replace(/ダメージバフ$/, '');\r\n            else if (stat.endsWith('ダメージアップ')) stat = stat.replace(/ダメージアップ$/, '');\r\n            else if (stat.endsWith('元素ダメージ')) stat = stat.replace(/元素ダメージ$/, '');\r\n            else if (stat.endsWith('物理ダメージ')) stat = stat.replace(/ダメージ$/, '');\r\n            else if (stat.endsWith('反応ボーナス')) stat = stat.replace(/反応ボーナス$/, '');\r\n            else if (stat.endsWith('耐性')) stat = stat.replace(/耐性$/, '');\r\n            result = displayName(stat);\r\n        } else {\r\n            result = displayStatName(stat);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /** $event.target.valueでのtypescriptエラー回避のために */\r\n    const targetValue = function (event: Event) {\r\n        if (event.target instanceof HTMLInputElement) return event.target.value;\r\n        if (event.target instanceof HTMLSelectElement) return event.target.value;\r\n        return undefined;\r\n    }\r\n\r\n    const displayOptionName = function (name: string) {\r\n        return displayName(name.replace(/^required_/, \"\"));\r\n    }\r\n\r\n    return {\r\n        localeList,\r\n        setI18nLanguage,\r\n        loadLocaleMessages,\r\n        displayName,\r\n        displayStatName,\r\n        displayStatValue,\r\n        displayStatAbbrev,\r\n        targetValue,\r\n        displayOptionName,\r\n    }\r\n}\r\n","import script from \"./CompositionFunction.vue?vue&type=script&lang=ts\"\nexport * from \"./CompositionFunction.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["isNumber","value","isFinite","isPlainObject","myType","Object","prototype","toString","call","deepcopy","result","JSON","parse","stringify","overwriteObject","dst","src","srcKeys","keys","key","includes","basename","path","split","pop","shift","i18n","createI18n","legacy","locale","fallbackLocale","isGlobal","基礎ステータスARRAY","基本ステータスARRAY","高級ステータスARRAY","元素ステータス_ダメージARRAY","元素ステータス_耐性ARRAY","ダメージバフARRAY","実数ダメージ加算ARRAY","元素反応バフARRAY","ステータスその他ARRAY","ステータス連動ARRAY","ステータスチーム内最高ARRAY","敵ステータス_元素耐性ARRAY","敵ステータス_その他ARRAY","ステータスARRAY_MAP","Map","STAT_PERCENT_LIST","makeStatusTenmplate","statsObj","forEach","stat","ステータスTEMPLATE","makeEnemyStatusTemplate","聖遺物メイン効果_生の花ARRAY","聖遺物メイン効果_死の羽ARRAY","聖遺物メイン効果_時の砂ARRAY","聖遺物メイン効果_空の杯ARRAY","聖遺物メイン効果_理の冠ARRAY","聖遺物サブ効果ARRAY","聖遺物優先するサブ効果ARRAY","聖遺物ステータスTEMPLATE","元素反応TEMPLATE","元素","蒸発倍率","溶解倍率","過負荷ダメージ","感電ダメージ","超電導ダメージ","拡散ダメージ","拡散元素","結晶吸収量","燃焼ダメージ","開花ダメージ","烈開花ダメージ","超開花ダメージ","超激化ダメージ","草激化ダメージ","燃焼ダメージ会心率","燃焼ダメージ会心ダメージ","開花ダメージ会心率","開花ダメージ会心ダメージ","烈開花ダメージ会心率","烈開花ダメージ会心ダメージ","超開花ダメージ会心率","超開花ダメージ会心ダメージ","DAMAGE_RESULT_TEMPLATE","元素反応","通常攻撃","重撃","落下攻撃","元素スキル","元素爆発","その他","キャラクター注釈","突破レベルレベルARRAY","Array","from","length","_","i","ARTIFACT_SET_MASTER_DUMMY","レアリティ","image","IMG_SRC_DUMMY","CHARACTER_INPUT_TEMPLATE","character","characterMaster","突破レベル","レベル","命ノ星座","通常攻撃レベル","元素スキルレベル","元素爆発レベル","weapon","weaponMaster","武器突破レベル","武器レベル","武器精錬ランク","artifactSets","artifactSetMasters","damageDetailMyCharacter","damageDetailMyWeapon","damageDetailMyArtifactSets","damageDetailElementalResonance","buildname","recommendationSelectedIndex","saveDisabled","removeDisabled","ARTIFACT_DETAIL_INPUT_TEMPLATE","聖遺物メイン効果","聖遺物優先するサブ効果","聖遺物優先するサブ効果上昇値","GENSEN_MASTER_LIST","聖遺物優先するサブ効果上昇回数","聖遺物ステータス","聖遺物ステータスメイン効果","聖遺物ステータスサブ効果","聖遺物優先するサブ効果Disabled","CONDITION_INPUT_TEMPLATE","checkboxList","selectList","numberList","conditionValues","conditionAdjustments","攻撃元素","STATS_INPUT_TEMPLATE","statAdjustments","enemyMaster","ENEMY_MASTER_LIST","SUPPORTER_INPUT_TEMPLATE","characterInput","artifactDetailInput","conditionInput","statsInput","damageResult","OPTION_INPUT_TEMPLATE","elementalResonance","supporterBuildname","supporters","teamMembers","teamOption","miscOption","parseLevelStr","levelStr","level","Number","String","replace","ascension","endsWith","Math","max","error","console","makeDefaultBuildname","makeBuildStorageKey","makeOptionStorageKey","makeArtifactScoringStorageKey","makeRecommendationList","opt_buildData","isSavable","push","name","build","overwrite","log","storageKeyArr","localStorage","startsWith","sort","re","RegExp","buildObj","key2","optionsObj","options","key3","artifactScoringObj","artifactScoring","key4","supporterBuildnameObj","obj","myRecommendation","artifactRarerityArrArr","artifactRarerity4Num","artifactSet1","artifactSet2","ARTIFACT_SET_MASTER","makeArtifactSetAbbrev","statusName","RECOMMEND_ABBREV_MAP","substring","abbrRe","abbr","a","b","makePrioritySubstatValueList","prioritySubstats","index","opt_substat","ARTIFACT_SUB_MASTER","valueArr","diff","async","loadRecommendation","optionInput","getCharacterMasterDetail","artifactStatsSub","weaponType","WEAPON_MASTER","filter","s","getWeaponMasterDetail","prioritySubstatsDisabled","toKey","artifactSet","mainstat","substat","doUpdate","substatValue","prioritySubstatValueList","v","substatCount","キャラクター構成PROPERTY_MAP","ELEMENTAL_RESONANCE_MASTER","astarIndex","indexOf","workCharacter","CHARACTER_MASTER","debug","makeSavedata","resultObj","entry","makeOptionsSavedata","CHANGE_KIND_STATUS","CHANGE_KIND_TALENT","makeDamageDetailObjArrObjCharacter","myTalentDetail","myTalentLevel","myDefaultKind","myDefaultElement","myInputCategory","myStatusChangeDetailObjArr","myTalentChangeDetailObjArr","category","makeDamageDetailObjArr","workCategory","workObj","条件","詳細","workArr","cond","名前","種類","数値","対象","上限","HIT数","ダメージバフ","元素付与無効","除外条件","適用条件","拡散","conditionMap","exclusionMap","detailObj","makeConditionExclusionMapFromStr","isArray","set","makeDamageDetailObjArrObjWeapon","myLevel","condition","makeDamageDetailObjArrObjArtifactSets","damageDetailObjArr","makeDamageDetailObjArrObjElementalResonance","ELEMENTAL_RESONANCE_MASTER_LIST","makeDetailObj","defaultKind","defaultElement","inputCategory","opt_condition","my種類","my対象","my数値","DAMAGE_CATEGORY_ARRAY","analyzeFormulaStr","my条件","my上限","my下限","下限","getChangeKind","kind","exec","talentDataObj","statusChangeDetailObjArr","talentChangeDetailObjArr","resultArr","makeTeamOptionDetailObjArr","detailObjArr","conditionStr","exclusionCond","myCondStrArr","myCondStr","makeConditionExclusionMapFromStrSub","NUMBER_CONDITION_VALUE_RE","exclusion","myName","pushToMapValueArray","test","conditionObj","min","step","reRet","prefix","condValueArr","postfix","re2","rangeStart","rangeEnd","re2Ret","addDecimal","e","setupConditionValues","splice","masters","master","myDamageDetail","排他","required","exclusions","get","conditionValue","minValue","checked","arr","selectedIndex","getStatValue","n","vStat","trunc","undefined","updateNumberConditionValues","numberEntryArr","maxValue","map","has","oldValue","getDecimalLength","multiplyDecimal","value1","value2","decimalLength","intValue1","intValue2","pow","opt_max","k","formulaStr","opt_defaultItem","workStr","analyzeFormulaStrSub","strArr","makeSharedata","savedata","sharedataArr","myBasename","newValue","ARTIFACT_STAT_JA_EN_ABBREV_MAP","join","openTwitter","text","url","opt_hashtags","opt_via","baseUrl","params","URLSearchParams","append","query","shareUrl","window","open","shareByTwitter","sharedata","encoded","encodeURI","getMaxConstellation","getMaxTalentLevel","talentObj","work","pushBuildinfoToSession","builddata","teammembers","sessionStorage","setItem","popBuildinfoFromSession","getItem","removeItem","_hoisted_1","_hoisted_2","class","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","render","_ctx","_cache","$props","$setup","$data","$options","visible","_openBlock","_createElementBlock","_createElementVNode","_Fragment","_renderList","elementList","item","_withDirectives","type","$event","elementCheckList","onChange","checkListOnChange","_vModelCheckbox","elementSrc","alt","weaponList","weaponCheckList","weaponSrc","filteredList","_normalizeClass","bgImageClass","selectedClass","icon_url","onClick","characterOnClick","_toDisplayString","displayName","visionSrc","selectionNumber","_vShow","_createCommentVNode","defineComponent","props","characters","Boolean","emits","setup","context","CompositionFunction","ELEMENT_IMG_SRC","STAR_BACKGROUND_IMAGE_CLASS","element","reactive","WEAPON_IMG_SRC","checkList","computed","elementChecked","weaponChecked","CHARACTER_MASTER_LIST","武器","emit","blankIndex","__exports__","t","te","useI18n","useScope","localeList","setI18nLanguage","loadLocaleMessages","document","querySelector","setAttribute","messages","fetch","then","resp","json","nextTick","percent","tempArr","hasPercent","displayStatName","displayStatValue","opt_s","myPercent","p","round","displayStatAbbrev","targetValue","event","target","HTMLInputElement","HTMLSelectElement","displayOptionName"],"sourceRoot":""}